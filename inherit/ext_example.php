<?hh

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */
<<__NativeData("_wrap_Shap")>>
abstract class Shap {
<<__Native>>
function __destruct() ;

<<__Native>>
public function Shap_x_set(float $arg2) : void;

<<__Native>>
public function Shap_x_get() : float;

<<__Native>>
public function Shap_y_set(float $arg2) : void;

<<__Native>>
public function Shap_y_get() : float;

<<__Native>>
public function move(float $arg2, float $arg3) : void;

<<__Native>>
public function area() : float;

<<__Native>>
public function perimeter() : float;

<<__Native>>
static public function Shap_nshapes_set(int $arg1) : void;

<<__Native>>
static public function Shap_nshapes_get() : int;

}

<<__NativeData("_wrap_Circle")>>
class Circle extends Shap {
<<__Native>>
function __construct(float $arg1) ;

<<__Native>>
public function area() : float;

<<__Native>>
public function perimeter() : float;

<<__Native>>
function __destruct() ;

}

<<__NativeData("_wrap_Square")>>
class Square extends Shap {
<<__Native>>
function __construct(float $arg1) ;

<<__Native>>
public function area() : float;

<<__Native>>
public function perimeter() : float;

<<__Native>>
function __destruct() ;

}

