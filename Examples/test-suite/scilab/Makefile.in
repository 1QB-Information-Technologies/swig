#######################################################################
# Makefile for scilab test-suite
#######################################################################

LANGUAGE     = scilab
SCILAB       = @SCILAB@
SCILAB_OPT = @SCILABOPT@
SCRIPTSUFFIX = _runme.sci

srcdir       = @srcdir@
top_srcdir   = ../@top_srcdir@
top_builddir = ../@top_builddir@

C_TEST_CASES += \
	scilab_enums \
	scilab_consts \

CPP_TEST_CASES += \
  primitive_types \
  inout \
  scilab_li_matrix \
  scilab_pointer_conversion_functions \
  scilab_multivalue \
  overload_arrays \

CPP_STD_TEST_CASES += \
	li_std_container_typemaps \

include $(srcdir)/../common.mk

# overriden variables
SRCDIR = ../$(srcdir)/
SCRIPTDIR = .
INCLUDES = $(abspath $(srcdir)/..)

# local variables
TEST_DIR = $*.dir
RUNME_SCRIPT = $(SCRIPTDIR)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX)
SRC_RUNME_SCRIPT = $(srcdir)/$(SCRIPTPREFIX)$*$(SCRIPTSUFFIX)

$(warning srcdir = "$(srcdir)" abspath = "$(abspath $(srcdir))")
$(warning SRCDIR = "$(SRCDIR)" abspath = "$(abspath $(SRCDIR))")
$(warning SCRIPTDIR = "$(SCRIPTDIR)" abspath = "$(abspath $(SCRIPTDIR))")

# Rules for the different types of tests
%.cpptest:
	$(setup)
	+(cd $(TEST_DIR) && $(swig_and_compile_cpp))
	$(run_testcase)

%.ctest:
	$(setup)
	+(cd $(TEST_DIR) && $(swig_and_compile_c))
	$(run_testcase)

%.multicpptest:
	$(setup)
	+(cd $(TEST_DIR) && $(swig_and_compile_multi_cpp))
	$(run_testcase)

# Logs the test case execution
# Copies files and creates directories needed for the test case
setup = \
	if [ -f $(SRC_RUNME_SCRIPT) ]; then	\
	  echo "$(ACTION)ing testcase $* (with run test) under $(LANGUAGE)" ; \
	  cp $(SRC_RUNME_SCRIPT) $(SCRIPTDIR); \
	  if [ ! -f $(SCRIPTDIR)/swigtest.start ]; then	\
	    cp $(srcdir)/swigtest.start $(SCRIPTDIR); \
	  fi; \
	  if [ ! -f $(SCRIPTDIR)/swigtest.quit ]; then \
	    cp $(srcdir)/swigtest.quit $(SCRIPTDIR); \
	  fi; \
	else \
	  echo "$(ACTION)ing testcase $* under $(LANGUAGE)" ; \
	fi; \
	if [ ! -d $(TEST_DIR) ]; then	\
	  mkdir $(TEST_DIR); \
	fi; \


# Runs the testcase. A testcase is only run if
# a file is found which has _runme.sci appended after the testcase name.
run_testcase = \
	if [ -f $(RUNME_SCRIPT) ]; then ( \
		env LD_LIBRARY_PATH=$(srcdir)/$(TEST_DIR):$$LD_LIBRARY_PATH $(RUNTOOL) $(SCILAB) $(SCILAB_OPT) -f $(RUNME_SCRIPT); )\
	fi

# Clean: remove the generated files
%.clean:
	@rm -rf $(TEST_DIR)

clean:
