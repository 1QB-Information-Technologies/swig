/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../union_scope.i

package union_scope

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrNRState uintptr

func (p SwigcptrNRState) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrNRState) SwigIsNRState() {
}

var _wrap_new_nRState unsafe.Pointer

func _swig_wrap_new_nRState() (base SwigcptrNRState) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_nRState, _swig_p)
	return
}

func NewNRState() (_swig_ret NRState) {
	return _swig_wrap_new_nRState()
}

var _wrap_delete_nRState unsafe.Pointer

func _swig_wrap_delete_nRState(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_nRState, _swig_p)
	return
}

func DeleteNRState(arg1 NRState) {
	_swig_wrap_delete_nRState(arg1.Swigcptr())
}

type NRState interface {
	Swigcptr() uintptr
	SwigIsNRState()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

