/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../abstract_virtual.i

package abstract_virtual

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

var _wrap_A_foo unsafe.Pointer

func _swig_wrap_A_foo(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_foo, _swig_p)
	return
}

func (arg1 SwigcptrA) Foo() (_swig_ret int) {
	return _swig_wrap_A_foo(arg1)
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	Foo() (_swig_ret int)
}

type SwigcptrB uintptr

func (p SwigcptrB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrB) SwigIsB() {
}

var _wrap_B_foo unsafe.Pointer

func _swig_wrap_B_foo(base SwigcptrB) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_foo, _swig_p)
	return
}

func (arg1 SwigcptrB) Foo() (_swig_ret int) {
	return _swig_wrap_B_foo(arg1)
}

var _wrap_new_B unsafe.Pointer

func _swig_wrap_new_B() (base SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_B, _swig_p)
	return
}

func NewB() (_swig_ret B) {
	return _swig_wrap_new_B()
}

var _wrap_delete_B unsafe.Pointer

func _swig_wrap_delete_B(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_B, _swig_p)
	return
}

func DeleteB(arg1 B) {
	_swig_wrap_delete_B(arg1.Swigcptr())
}

func (p SwigcptrB) SwigIsA() {
}

func (p SwigcptrB) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

type B interface {
	Swigcptr() uintptr
	SwigIsB()
	Foo() (_swig_ret int)
	SwigIsA()
	SwigGetA() A
}

type SwigcptrC uintptr

func (p SwigcptrC) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrC) SwigIsC() {
}

var _wrap_delete_C unsafe.Pointer

func _swig_wrap_delete_C(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_C, _swig_p)
	return
}

func DeleteC(arg1 C) {
	_swig_wrap_delete_C(arg1.Swigcptr())
}

var _wrap_C_foo unsafe.Pointer

func _swig_wrap_C_foo(base SwigcptrC) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_C_foo, _swig_p)
	return
}

func (_swig_base SwigcptrC) Foo() (_swig_ret int) {
	return _swig_wrap_C_foo(_swig_base)
}

func (p SwigcptrC) SwigIsA() {
}

func (p SwigcptrC) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

type C interface {
	Swigcptr() uintptr
	SwigIsC()
	Foo() (_swig_ret int)
	SwigIsA()
	SwigGetA() A
}

type SwigcptrD uintptr

func (p SwigcptrD) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrD) SwigIsD() {
}

var _wrap_new_D unsafe.Pointer

func _swig_wrap_new_D() (base SwigcptrD) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_D, _swig_p)
	return
}

func NewD() (_swig_ret D) {
	return _swig_wrap_new_D()
}

var _wrap_delete_D unsafe.Pointer

func _swig_wrap_delete_D(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_D, _swig_p)
	return
}

func DeleteD(arg1 D) {
	_swig_wrap_delete_D(arg1.Swigcptr())
}

var _wrap_D_foo unsafe.Pointer

func _swig_wrap_D_foo(base SwigcptrD) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_D_foo, _swig_p)
	return
}

func (_swig_base SwigcptrD) Foo() (_swig_ret int) {
	return _swig_wrap_D_foo(_swig_base)
}

func (p SwigcptrD) SwigIsB() {
}

func (p SwigcptrD) SwigGetB() B {
	return SwigcptrB(p.Swigcptr())
}

func (p SwigcptrD) SwigIsA() {
}

func (p SwigcptrD) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

var _wrap_D_SwigGetC unsafe.Pointer

func _swig_wrap_D_SwigGetC(base SwigcptrD) (_ SwigcptrC) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_D_SwigGetC, _swig_p)
	return
}

func (arg1 SwigcptrD) SwigGetC() (_swig_ret C) {
	return _swig_wrap_D_SwigGetC(arg1)
}

type D interface {
	Swigcptr() uintptr
	SwigIsD()
	Foo() (_swig_ret int)
	SwigIsB()
	SwigGetB() B
	SwigIsA()
	SwigGetA() A
	SwigGetC() (_swig_ret C)
}

type SwigcptrE uintptr

func (p SwigcptrE) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrE) SwigIsE() {
}

var _wrap_new_E unsafe.Pointer

func _swig_wrap_new_E() (base SwigcptrE) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_E, _swig_p)
	return
}

func NewE() (_swig_ret E) {
	return _swig_wrap_new_E()
}

var _wrap_delete_E unsafe.Pointer

func _swig_wrap_delete_E(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_E, _swig_p)
	return
}

func DeleteE(arg1 E) {
	_swig_wrap_delete_E(arg1.Swigcptr())
}

var _wrap_E_foo unsafe.Pointer

func _swig_wrap_E_foo(base SwigcptrE) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_E_foo, _swig_p)
	return
}

func (_swig_base SwigcptrE) Foo() (_swig_ret int) {
	return _swig_wrap_E_foo(_swig_base)
}

func (p SwigcptrE) SwigIsC() {
}

func (p SwigcptrE) SwigGetC() C {
	return SwigcptrC(p.Swigcptr())
}

func (p SwigcptrE) SwigIsA() {
}

func (p SwigcptrE) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

var _wrap_E_SwigGetB unsafe.Pointer

func _swig_wrap_E_SwigGetB(base SwigcptrE) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_E_SwigGetB, _swig_p)
	return
}

func (arg1 SwigcptrE) SwigGetB() (_swig_ret B) {
	return _swig_wrap_E_SwigGetB(arg1)
}

type E interface {
	Swigcptr() uintptr
	SwigIsE()
	Foo() (_swig_ret int)
	SwigIsC()
	SwigGetC() C
	SwigIsA()
	SwigGetA() A
	SwigGetB() (_swig_ret B)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

