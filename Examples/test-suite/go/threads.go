/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../threads.i

package threads

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrKerfuffle uintptr

func (p SwigcptrKerfuffle) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKerfuffle) SwigIsKerfuffle() {
}

var _wrap_Kerfuffle_StdString unsafe.Pointer

func _swig_wrap_Kerfuffle_StdString(base SwigcptrKerfuffle, _ string) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Kerfuffle_StdString, _swig_p)
	return
}

func (arg1 SwigcptrKerfuffle) StdString(arg2 string) (_swig_ret string) {
	return _swig_wrap_Kerfuffle_StdString(arg1, arg2)
}

var _wrap_Kerfuffle_CharString unsafe.Pointer

func _swig_wrap_Kerfuffle_CharString(base SwigcptrKerfuffle, _ string) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Kerfuffle_CharString, _swig_p)
	return
}

func (arg1 SwigcptrKerfuffle) CharString(arg2 string) (_swig_ret string) {
	return _swig_wrap_Kerfuffle_CharString(arg1, arg2)
}

var _wrap_new_Kerfuffle unsafe.Pointer

func _swig_wrap_new_Kerfuffle() (base SwigcptrKerfuffle) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Kerfuffle, _swig_p)
	return
}

func NewKerfuffle() (_swig_ret Kerfuffle) {
	return _swig_wrap_new_Kerfuffle()
}

var _wrap_delete_Kerfuffle unsafe.Pointer

func _swig_wrap_delete_Kerfuffle(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Kerfuffle, _swig_p)
	return
}

func DeleteKerfuffle(arg1 Kerfuffle) {
	_swig_wrap_delete_Kerfuffle(arg1.Swigcptr())
}

type Kerfuffle interface {
	Swigcptr() uintptr
	SwigIsKerfuffle()
	StdString(arg2 string) (_swig_ret string)
	CharString(arg2 string) (_swig_ret string)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

