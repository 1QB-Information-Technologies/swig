/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_boost_shared_ptr_bits.i

package li_boost_shared_ptr_bits

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrNonDynamic uintptr

func (p SwigcptrNonDynamic) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrNonDynamic) SwigIsNonDynamic() {
}

var _wrap_NonDynamic_i_set unsafe.Pointer

func _swig_wrap_NonDynamic_i_set(base SwigcptrNonDynamic, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_NonDynamic_i_set, _swig_p)
	return
}

func (arg1 SwigcptrNonDynamic) SetI(arg2 int) {
	_swig_wrap_NonDynamic_i_set(arg1, arg2)
}

var _wrap_NonDynamic_i_get unsafe.Pointer

func _swig_wrap_NonDynamic_i_get(base SwigcptrNonDynamic) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_NonDynamic_i_get, _swig_p)
	return
}

func (arg1 SwigcptrNonDynamic) GetI() (_swig_ret int) {
	return _swig_wrap_NonDynamic_i_get(arg1)
}

var _wrap_new_NonDynamic unsafe.Pointer

func _swig_wrap_new_NonDynamic() (base SwigcptrNonDynamic) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_NonDynamic, _swig_p)
	return
}

func NewNonDynamic() (_swig_ret NonDynamic) {
	return _swig_wrap_new_NonDynamic()
}

var _wrap_delete_NonDynamic unsafe.Pointer

func _swig_wrap_delete_NonDynamic(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_NonDynamic, _swig_p)
	return
}

func DeleteNonDynamic(arg1 NonDynamic) {
	_swig_wrap_delete_NonDynamic(arg1.Swigcptr())
}

type NonDynamic interface {
	Swigcptr() uintptr
	SwigIsNonDynamic()
	SetI(arg2 int)
	GetI() (_swig_ret int)
}

var _wrap_boing unsafe.Pointer

func _swig_wrap_boing(base uintptr) (_ SwigcptrBoost_shared_ptr_Sl_NonDynamic_Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_boing, _swig_p)
	return
}

func Boing(arg1 Boost_shared_ptr_Sl_NonDynamic_Sg_) (_swig_ret Boost_shared_ptr_Sl_NonDynamic_Sg_) {
	return _swig_wrap_boing(arg1.Swigcptr())
}

type SwigcptrIntHolder uintptr

func (p SwigcptrIntHolder) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntHolder) SwigIsIntHolder() {
}

var _wrap_IntHolder_val_set unsafe.Pointer

func _swig_wrap_IntHolder_val_set(base SwigcptrIntHolder, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntHolder_val_set, _swig_p)
	return
}

func (arg1 SwigcptrIntHolder) SetVal(arg2 int) {
	_swig_wrap_IntHolder_val_set(arg1, arg2)
}

var _wrap_IntHolder_val_get unsafe.Pointer

func _swig_wrap_IntHolder_val_get(base SwigcptrIntHolder) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntHolder_val_get, _swig_p)
	return
}

func (arg1 SwigcptrIntHolder) GetVal() (_swig_ret int) {
	return _swig_wrap_IntHolder_val_get(arg1)
}

var _wrap_new_IntHolder unsafe.Pointer

func _swig_wrap_new_IntHolder(base int) (_ SwigcptrIntHolder) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntHolder, _swig_p)
	return
}

func NewIntHolder(arg1 int) (_swig_ret IntHolder) {
	return _swig_wrap_new_IntHolder(arg1)
}

var _wrap_delete_IntHolder unsafe.Pointer

func _swig_wrap_delete_IntHolder(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntHolder, _swig_p)
	return
}

func DeleteIntHolder(arg1 IntHolder) {
	_swig_wrap_delete_IntHolder(arg1.Swigcptr())
}

type IntHolder interface {
	Swigcptr() uintptr
	SwigIsIntHolder()
	SetVal(arg2 int)
	GetVal() (_swig_ret int)
}

var _wrap_sum unsafe.Pointer

func _swig_wrap_sum(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_sum, _swig_p)
	return
}

func Sum(arg1 VectorIntHolder) (_swig_ret int) {
	return _swig_wrap_sum(arg1.Swigcptr())
}

type SwigcptrVectorIntHolder uintptr

func (p SwigcptrVectorIntHolder) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorIntHolder) SwigIsVectorIntHolder() {
}

var _wrap_new_VectorIntHolder__SWIG_0 unsafe.Pointer

func _swig_wrap_new_VectorIntHolder__SWIG_0() (base SwigcptrVectorIntHolder) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorIntHolder__SWIG_0, _swig_p)
	return
}

func NewVectorIntHolder__SWIG_0() (_swig_ret VectorIntHolder) {
	return _swig_wrap_new_VectorIntHolder__SWIG_0()
}

var _wrap_new_VectorIntHolder__SWIG_1 unsafe.Pointer

func _swig_wrap_new_VectorIntHolder__SWIG_1(base int64) (_ SwigcptrVectorIntHolder) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorIntHolder__SWIG_1, _swig_p)
	return
}

func NewVectorIntHolder__SWIG_1(arg1 int64) (_swig_ret VectorIntHolder) {
	return _swig_wrap_new_VectorIntHolder__SWIG_1(arg1)
}

func NewVectorIntHolder(a ...interface{}) VectorIntHolder {
	argc := len(a)
	if argc == 0 {
		return NewVectorIntHolder__SWIG_0()
	}
	if argc == 1 {
		return NewVectorIntHolder__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_VectorIntHolder_size unsafe.Pointer

func _swig_wrap_VectorIntHolder_size(base SwigcptrVectorIntHolder) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_size, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Size() (_swig_ret int64) {
	return _swig_wrap_VectorIntHolder_size(arg1)
}

var _wrap_VectorIntHolder_capacity unsafe.Pointer

func _swig_wrap_VectorIntHolder_capacity(base SwigcptrVectorIntHolder) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_capacity, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Capacity() (_swig_ret int64) {
	return _swig_wrap_VectorIntHolder_capacity(arg1)
}

var _wrap_VectorIntHolder_reserve unsafe.Pointer

func _swig_wrap_VectorIntHolder_reserve(base SwigcptrVectorIntHolder, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_reserve, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Reserve(arg2 int64) {
	_swig_wrap_VectorIntHolder_reserve(arg1, arg2)
}

var _wrap_VectorIntHolder_isEmpty unsafe.Pointer

func _swig_wrap_VectorIntHolder_isEmpty(base SwigcptrVectorIntHolder) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_VectorIntHolder_isEmpty(arg1)
}

var _wrap_VectorIntHolder_clear unsafe.Pointer

func _swig_wrap_VectorIntHolder_clear(base SwigcptrVectorIntHolder) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_clear, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Clear() {
	_swig_wrap_VectorIntHolder_clear(arg1)
}

var _wrap_VectorIntHolder_add unsafe.Pointer

func _swig_wrap_VectorIntHolder_add(base SwigcptrVectorIntHolder, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_add, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Add(arg2 Boost_shared_ptr_Sl_IntHolder_Sg_) {
	_swig_wrap_VectorIntHolder_add(arg1, arg2.Swigcptr())
}

var _wrap_VectorIntHolder_get unsafe.Pointer

func _swig_wrap_VectorIntHolder_get(base SwigcptrVectorIntHolder, _ int) (_ SwigcptrBoost_shared_ptr_Sl_IntHolder_Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_get, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Get(arg2 int) (_swig_ret Boost_shared_ptr_Sl_IntHolder_Sg_) {
	return _swig_wrap_VectorIntHolder_get(arg1, arg2)
}

var _wrap_VectorIntHolder_set unsafe.Pointer

func _swig_wrap_VectorIntHolder_set(base SwigcptrVectorIntHolder, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorIntHolder_set, _swig_p)
	return
}

func (arg1 SwigcptrVectorIntHolder) Set(arg2 int, arg3 Boost_shared_ptr_Sl_IntHolder_Sg_) {
	_swig_wrap_VectorIntHolder_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_VectorIntHolder unsafe.Pointer

func _swig_wrap_delete_VectorIntHolder(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_VectorIntHolder, _swig_p)
	return
}

func DeleteVectorIntHolder(arg1 VectorIntHolder) {
	_swig_wrap_delete_VectorIntHolder(arg1.Swigcptr())
}

type VectorIntHolder interface {
	Swigcptr() uintptr
	SwigIsVectorIntHolder()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Boost_shared_ptr_Sl_IntHolder_Sg_)
	Get(arg2 int) (_swig_ret Boost_shared_ptr_Sl_IntHolder_Sg_)
	Set(arg2 int, arg3 Boost_shared_ptr_Sl_IntHolder_Sg_)
}

type SwigcptrHiddenDestructor uintptr

func (p SwigcptrHiddenDestructor) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrHiddenDestructor) SwigIsHiddenDestructor() {
}

var _wrap_HiddenDestructor_create unsafe.Pointer

func _swig_wrap_HiddenDestructor_create() (base SwigcptrBoost_shared_ptr_Sl_HiddenDestructor_Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_HiddenDestructor_create, _swig_p)
	return
}

func HiddenDestructorCreate() (_swig_ret Boost_shared_ptr_Sl_HiddenDestructor_Sg_) {
	return _swig_wrap_HiddenDestructor_create()
}

var _wrap_HiddenDestructor_doit unsafe.Pointer

func _swig_wrap_HiddenDestructor_doit(base SwigcptrHiddenDestructor) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_HiddenDestructor_doit, _swig_p)
	return
}

func (arg1 SwigcptrHiddenDestructor) Doit() {
	_swig_wrap_HiddenDestructor_doit(arg1)
}

type HiddenDestructor interface {
	Swigcptr() uintptr
	SwigIsHiddenDestructor()
	Doit()
}


type SwigcptrBoost_shared_ptr_Sl_NonDynamic_Sg_ uintptr
type Boost_shared_ptr_Sl_NonDynamic_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrBoost_shared_ptr_Sl_NonDynamic_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBoost_shared_ptr_Sl_IntHolder_Sg_ uintptr
type Boost_shared_ptr_Sl_IntHolder_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrBoost_shared_ptr_Sl_IntHolder_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrBoost_shared_ptr_Sl_HiddenDestructor_Sg_ uintptr
type Boost_shared_ptr_Sl_HiddenDestructor_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrBoost_shared_ptr_Sl_HiddenDestructor_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

