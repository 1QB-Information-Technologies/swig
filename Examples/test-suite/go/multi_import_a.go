/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../multi_import_a.i

package multi_import_a

import "unsafe"
import _ "runtime/cgo"
import "multi_import_b"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrZZZ uintptr

func (p SwigcptrZZZ) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZZZ) SwigIsZZZ() {
}

var _wrap_ZZZ_testz unsafe.Pointer

func _swig_wrap_ZZZ_testz(base SwigcptrZZZ) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ZZZ_testz, _swig_p)
	return
}

func (arg1 SwigcptrZZZ) Testz() (_swig_ret int) {
	return _swig_wrap_ZZZ_testz(arg1)
}

var _wrap_new_ZZZ unsafe.Pointer

func _swig_wrap_new_ZZZ() (base SwigcptrZZZ) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ZZZ, _swig_p)
	return
}

func NewZZZ() (_swig_ret ZZZ) {
	return _swig_wrap_new_ZZZ()
}

var _wrap_delete_ZZZ unsafe.Pointer

func _swig_wrap_delete_ZZZ(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ZZZ, _swig_p)
	return
}

func DeleteZZZ(arg1 ZZZ) {
	_swig_wrap_delete_ZZZ(arg1.Swigcptr())
}

var _wrap_ZZZ_testx unsafe.Pointer

func _swig_wrap_ZZZ_testx(base SwigcptrZZZ) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ZZZ_testx, _swig_p)
	return
}

func (_swig_base SwigcptrZZZ) Testx() (_swig_ret int) {
	return _swig_wrap_ZZZ_testx(_swig_base)
}

func (p SwigcptrZZZ) SwigIsXXX() {
}

func (p SwigcptrZZZ) SwigGetXXX() multi_import_b.XXX {
	return multi_import_b.SwigcptrXXX(p.Swigcptr())
}

type ZZZ interface {
	Swigcptr() uintptr
	SwigIsZZZ()
	Testz() (_swig_ret int)
	Testx() (_swig_ret int)
	SwigIsXXX()
	SwigGetXXX() multi_import_b.XXX
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

