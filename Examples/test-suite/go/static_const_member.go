/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../static_const_member.i

package static_const_member

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrX uintptr

func (p SwigcptrX) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX) SwigIsX() {
}

var _wrap_X_PN_X unsafe.Pointer

func _swig_getX_X_PN_X() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_X_PN_X, _swig_p)
	return
}
var XPN int = _swig_getX_X_PN_X()
var _wrap_X_CN_X unsafe.Pointer

func _swig_getX_X_CN_X() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_X_CN_X, _swig_p)
	return
}
var XCN int = _swig_getX_X_CN_X()
var _wrap_X_EN_X unsafe.Pointer

func _swig_getX_X_EN_X() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_X_EN_X, _swig_p)
	return
}
var XEN int = _swig_getX_X_EN_X()
var _wrap_X_CHARTEST_X unsafe.Pointer

func _swig_getX_X_CHARTEST_X() (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_X_CHARTEST_X, _swig_p)
	return
}
var XCHARTEST byte = _swig_getX_X_CHARTEST_X()
var _wrap_new_X unsafe.Pointer

func _swig_wrap_new_X() (base SwigcptrX) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X, _swig_p)
	return
}

func NewX() (_swig_ret X) {
	return _swig_wrap_new_X()
}

var _wrap_delete_X unsafe.Pointer

func _swig_wrap_delete_X(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X, _swig_p)
	return
}

func DeleteX(arg1 X) {
	_swig_wrap_delete_X(arg1.Swigcptr())
}

type X interface {
	Swigcptr() uintptr
	SwigIsX()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

