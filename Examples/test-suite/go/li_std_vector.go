/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_std_vector.i

package li_std_vector

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrIntVector uintptr

func (p SwigcptrIntVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntVector) SwigIsIntVector() {
}

var _wrap_new_IntVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntVector__SWIG_0() (base SwigcptrIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntVector__SWIG_0, _swig_p)
	return
}

func NewIntVector__SWIG_0() (_swig_ret IntVector) {
	return _swig_wrap_new_IntVector__SWIG_0()
}

var _wrap_new_IntVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntVector__SWIG_1(base int64) (_ SwigcptrIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntVector__SWIG_1, _swig_p)
	return
}

func NewIntVector__SWIG_1(arg1 int64) (_swig_ret IntVector) {
	return _swig_wrap_new_IntVector__SWIG_1(arg1)
}

func NewIntVector(a ...interface{}) IntVector {
	argc := len(a)
	if argc == 0 {
		return NewIntVector__SWIG_0()
	}
	if argc == 1 {
		return NewIntVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntVector_size unsafe.Pointer

func _swig_wrap_IntVector_size(base SwigcptrIntVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_size, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Size() (_swig_ret int64) {
	return _swig_wrap_IntVector_size(arg1)
}

var _wrap_IntVector_capacity unsafe.Pointer

func _swig_wrap_IntVector_capacity(base SwigcptrIntVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_IntVector_capacity(arg1)
}

var _wrap_IntVector_reserve unsafe.Pointer

func _swig_wrap_IntVector_reserve(base SwigcptrIntVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Reserve(arg2 int64) {
	_swig_wrap_IntVector_reserve(arg1, arg2)
}

var _wrap_IntVector_isEmpty unsafe.Pointer

func _swig_wrap_IntVector_isEmpty(base SwigcptrIntVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_IntVector_isEmpty(arg1)
}

var _wrap_IntVector_clear unsafe.Pointer

func _swig_wrap_IntVector_clear(base SwigcptrIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Clear() {
	_swig_wrap_IntVector_clear(arg1)
}

var _wrap_IntVector_add unsafe.Pointer

func _swig_wrap_IntVector_add(base SwigcptrIntVector, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_add, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Add(arg2 int) {
	_swig_wrap_IntVector_add(arg1, arg2)
}

var _wrap_IntVector_get unsafe.Pointer

func _swig_wrap_IntVector_get(base SwigcptrIntVector, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_get, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Get(arg2 int) (_swig_ret int) {
	return _swig_wrap_IntVector_get(arg1, arg2)
}

var _wrap_IntVector_set unsafe.Pointer

func _swig_wrap_IntVector_set(base SwigcptrIntVector, _ int, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntVector_set, _swig_p)
	return
}

func (arg1 SwigcptrIntVector) Set(arg2 int, arg3 int) {
	_swig_wrap_IntVector_set(arg1, arg2, arg3)
}

var _wrap_delete_IntVector unsafe.Pointer

func _swig_wrap_delete_IntVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntVector, _swig_p)
	return
}

func DeleteIntVector(arg1 IntVector) {
	_swig_wrap_delete_IntVector(arg1.Swigcptr())
}

type IntVector interface {
	Swigcptr() uintptr
	SwigIsIntVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 int)
	Get(arg2 int) (_swig_ret int)
	Set(arg2 int, arg3 int)
}

type SwigcptrBoolVector uintptr

func (p SwigcptrBoolVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBoolVector) SwigIsBoolVector() {
}

var _wrap_new_BoolVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_BoolVector__SWIG_0() (base SwigcptrBoolVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_BoolVector__SWIG_0, _swig_p)
	return
}

func NewBoolVector__SWIG_0() (_swig_ret BoolVector) {
	return _swig_wrap_new_BoolVector__SWIG_0()
}

var _wrap_new_BoolVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_BoolVector__SWIG_1(base int64) (_ SwigcptrBoolVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_BoolVector__SWIG_1, _swig_p)
	return
}

func NewBoolVector__SWIG_1(arg1 int64) (_swig_ret BoolVector) {
	return _swig_wrap_new_BoolVector__SWIG_1(arg1)
}

func NewBoolVector(a ...interface{}) BoolVector {
	argc := len(a)
	if argc == 0 {
		return NewBoolVector__SWIG_0()
	}
	if argc == 1 {
		return NewBoolVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_BoolVector_size unsafe.Pointer

func _swig_wrap_BoolVector_size(base SwigcptrBoolVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_size, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Size() (_swig_ret int64) {
	return _swig_wrap_BoolVector_size(arg1)
}

var _wrap_BoolVector_capacity unsafe.Pointer

func _swig_wrap_BoolVector_capacity(base SwigcptrBoolVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_BoolVector_capacity(arg1)
}

var _wrap_BoolVector_reserve unsafe.Pointer

func _swig_wrap_BoolVector_reserve(base SwigcptrBoolVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Reserve(arg2 int64) {
	_swig_wrap_BoolVector_reserve(arg1, arg2)
}

var _wrap_BoolVector_isEmpty unsafe.Pointer

func _swig_wrap_BoolVector_isEmpty(base SwigcptrBoolVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_BoolVector_isEmpty(arg1)
}

var _wrap_BoolVector_clear unsafe.Pointer

func _swig_wrap_BoolVector_clear(base SwigcptrBoolVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Clear() {
	_swig_wrap_BoolVector_clear(arg1)
}

var _wrap_BoolVector_add unsafe.Pointer

func _swig_wrap_BoolVector_add(base SwigcptrBoolVector, _ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_add, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Add(arg2 bool) {
	_swig_wrap_BoolVector_add(arg1, arg2)
}

var _wrap_BoolVector_get unsafe.Pointer

func _swig_wrap_BoolVector_get(base SwigcptrBoolVector, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_get, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Get(arg2 int) (_swig_ret bool) {
	return _swig_wrap_BoolVector_get(arg1, arg2)
}

var _wrap_BoolVector_set unsafe.Pointer

func _swig_wrap_BoolVector_set(base SwigcptrBoolVector, _ int, _ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BoolVector_set, _swig_p)
	return
}

func (arg1 SwigcptrBoolVector) Set(arg2 int, arg3 bool) {
	_swig_wrap_BoolVector_set(arg1, arg2, arg3)
}

var _wrap_delete_BoolVector unsafe.Pointer

func _swig_wrap_delete_BoolVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_BoolVector, _swig_p)
	return
}

func DeleteBoolVector(arg1 BoolVector) {
	_swig_wrap_delete_BoolVector(arg1.Swigcptr())
}

type BoolVector interface {
	Swigcptr() uintptr
	SwigIsBoolVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 bool)
	Get(arg2 int) (_swig_ret bool)
	Set(arg2 int, arg3 bool)
}

type SwigcptrCharVector uintptr

func (p SwigcptrCharVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCharVector) SwigIsCharVector() {
}

var _wrap_new_CharVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_CharVector__SWIG_0() (base SwigcptrCharVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_CharVector__SWIG_0, _swig_p)
	return
}

func NewCharVector__SWIG_0() (_swig_ret CharVector) {
	return _swig_wrap_new_CharVector__SWIG_0()
}

var _wrap_new_CharVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_CharVector__SWIG_1(base int64) (_ SwigcptrCharVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_CharVector__SWIG_1, _swig_p)
	return
}

func NewCharVector__SWIG_1(arg1 int64) (_swig_ret CharVector) {
	return _swig_wrap_new_CharVector__SWIG_1(arg1)
}

func NewCharVector(a ...interface{}) CharVector {
	argc := len(a)
	if argc == 0 {
		return NewCharVector__SWIG_0()
	}
	if argc == 1 {
		return NewCharVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_CharVector_size unsafe.Pointer

func _swig_wrap_CharVector_size(base SwigcptrCharVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_size, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Size() (_swig_ret int64) {
	return _swig_wrap_CharVector_size(arg1)
}

var _wrap_CharVector_capacity unsafe.Pointer

func _swig_wrap_CharVector_capacity(base SwigcptrCharVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_CharVector_capacity(arg1)
}

var _wrap_CharVector_reserve unsafe.Pointer

func _swig_wrap_CharVector_reserve(base SwigcptrCharVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Reserve(arg2 int64) {
	_swig_wrap_CharVector_reserve(arg1, arg2)
}

var _wrap_CharVector_isEmpty unsafe.Pointer

func _swig_wrap_CharVector_isEmpty(base SwigcptrCharVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_CharVector_isEmpty(arg1)
}

var _wrap_CharVector_clear unsafe.Pointer

func _swig_wrap_CharVector_clear(base SwigcptrCharVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Clear() {
	_swig_wrap_CharVector_clear(arg1)
}

var _wrap_CharVector_add unsafe.Pointer

func _swig_wrap_CharVector_add(base SwigcptrCharVector, _ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_add, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Add(arg2 byte) {
	_swig_wrap_CharVector_add(arg1, arg2)
}

var _wrap_CharVector_get unsafe.Pointer

func _swig_wrap_CharVector_get(base SwigcptrCharVector, _ int) (_ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_get, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Get(arg2 int) (_swig_ret byte) {
	return _swig_wrap_CharVector_get(arg1, arg2)
}

var _wrap_CharVector_set unsafe.Pointer

func _swig_wrap_CharVector_set(base SwigcptrCharVector, _ int, _ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CharVector_set, _swig_p)
	return
}

func (arg1 SwigcptrCharVector) Set(arg2 int, arg3 byte) {
	_swig_wrap_CharVector_set(arg1, arg2, arg3)
}

var _wrap_delete_CharVector unsafe.Pointer

func _swig_wrap_delete_CharVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_CharVector, _swig_p)
	return
}

func DeleteCharVector(arg1 CharVector) {
	_swig_wrap_delete_CharVector(arg1.Swigcptr())
}

type CharVector interface {
	Swigcptr() uintptr
	SwigIsCharVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type SwigcptrShortVector uintptr

func (p SwigcptrShortVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrShortVector) SwigIsShortVector() {
}

var _wrap_new_ShortVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_ShortVector__SWIG_0() (base SwigcptrShortVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ShortVector__SWIG_0, _swig_p)
	return
}

func NewShortVector__SWIG_0() (_swig_ret ShortVector) {
	return _swig_wrap_new_ShortVector__SWIG_0()
}

var _wrap_new_ShortVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_ShortVector__SWIG_1(base int64) (_ SwigcptrShortVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ShortVector__SWIG_1, _swig_p)
	return
}

func NewShortVector__SWIG_1(arg1 int64) (_swig_ret ShortVector) {
	return _swig_wrap_new_ShortVector__SWIG_1(arg1)
}

func NewShortVector(a ...interface{}) ShortVector {
	argc := len(a)
	if argc == 0 {
		return NewShortVector__SWIG_0()
	}
	if argc == 1 {
		return NewShortVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_ShortVector_size unsafe.Pointer

func _swig_wrap_ShortVector_size(base SwigcptrShortVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_size, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Size() (_swig_ret int64) {
	return _swig_wrap_ShortVector_size(arg1)
}

var _wrap_ShortVector_capacity unsafe.Pointer

func _swig_wrap_ShortVector_capacity(base SwigcptrShortVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_ShortVector_capacity(arg1)
}

var _wrap_ShortVector_reserve unsafe.Pointer

func _swig_wrap_ShortVector_reserve(base SwigcptrShortVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Reserve(arg2 int64) {
	_swig_wrap_ShortVector_reserve(arg1, arg2)
}

var _wrap_ShortVector_isEmpty unsafe.Pointer

func _swig_wrap_ShortVector_isEmpty(base SwigcptrShortVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_ShortVector_isEmpty(arg1)
}

var _wrap_ShortVector_clear unsafe.Pointer

func _swig_wrap_ShortVector_clear(base SwigcptrShortVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Clear() {
	_swig_wrap_ShortVector_clear(arg1)
}

var _wrap_ShortVector_add unsafe.Pointer

func _swig_wrap_ShortVector_add(base SwigcptrShortVector, _ int16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_add, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Add(arg2 int16) {
	_swig_wrap_ShortVector_add(arg1, arg2)
}

var _wrap_ShortVector_get unsafe.Pointer

func _swig_wrap_ShortVector_get(base SwigcptrShortVector, _ int) (_ int16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_get, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Get(arg2 int) (_swig_ret int16) {
	return _swig_wrap_ShortVector_get(arg1, arg2)
}

var _wrap_ShortVector_set unsafe.Pointer

func _swig_wrap_ShortVector_set(base SwigcptrShortVector, _ int, _ int16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ShortVector_set, _swig_p)
	return
}

func (arg1 SwigcptrShortVector) Set(arg2 int, arg3 int16) {
	_swig_wrap_ShortVector_set(arg1, arg2, arg3)
}

var _wrap_delete_ShortVector unsafe.Pointer

func _swig_wrap_delete_ShortVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ShortVector, _swig_p)
	return
}

func DeleteShortVector(arg1 ShortVector) {
	_swig_wrap_delete_ShortVector(arg1.Swigcptr())
}

type ShortVector interface {
	Swigcptr() uintptr
	SwigIsShortVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 int16)
	Get(arg2 int) (_swig_ret int16)
	Set(arg2 int, arg3 int16)
}

type SwigcptrLongVector uintptr

func (p SwigcptrLongVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLongVector) SwigIsLongVector() {
}

var _wrap_new_LongVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_LongVector__SWIG_0() (base SwigcptrLongVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_LongVector__SWIG_0, _swig_p)
	return
}

func NewLongVector__SWIG_0() (_swig_ret LongVector) {
	return _swig_wrap_new_LongVector__SWIG_0()
}

var _wrap_new_LongVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_LongVector__SWIG_1(base int64) (_ SwigcptrLongVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_LongVector__SWIG_1, _swig_p)
	return
}

func NewLongVector__SWIG_1(arg1 int64) (_swig_ret LongVector) {
	return _swig_wrap_new_LongVector__SWIG_1(arg1)
}

func NewLongVector(a ...interface{}) LongVector {
	argc := len(a)
	if argc == 0 {
		return NewLongVector__SWIG_0()
	}
	if argc == 1 {
		return NewLongVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_LongVector_size unsafe.Pointer

func _swig_wrap_LongVector_size(base SwigcptrLongVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_size, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Size() (_swig_ret int64) {
	return _swig_wrap_LongVector_size(arg1)
}

var _wrap_LongVector_capacity unsafe.Pointer

func _swig_wrap_LongVector_capacity(base SwigcptrLongVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_LongVector_capacity(arg1)
}

var _wrap_LongVector_reserve unsafe.Pointer

func _swig_wrap_LongVector_reserve(base SwigcptrLongVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Reserve(arg2 int64) {
	_swig_wrap_LongVector_reserve(arg1, arg2)
}

var _wrap_LongVector_isEmpty unsafe.Pointer

func _swig_wrap_LongVector_isEmpty(base SwigcptrLongVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_LongVector_isEmpty(arg1)
}

var _wrap_LongVector_clear unsafe.Pointer

func _swig_wrap_LongVector_clear(base SwigcptrLongVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Clear() {
	_swig_wrap_LongVector_clear(arg1)
}

var _wrap_LongVector_add unsafe.Pointer

func _swig_wrap_LongVector_add(base SwigcptrLongVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_add, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Add(arg2 int64) {
	_swig_wrap_LongVector_add(arg1, arg2)
}

var _wrap_LongVector_get unsafe.Pointer

func _swig_wrap_LongVector_get(base SwigcptrLongVector, _ int) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_get, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Get(arg2 int) (_swig_ret int64) {
	return _swig_wrap_LongVector_get(arg1, arg2)
}

var _wrap_LongVector_set unsafe.Pointer

func _swig_wrap_LongVector_set(base SwigcptrLongVector, _ int, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_LongVector_set, _swig_p)
	return
}

func (arg1 SwigcptrLongVector) Set(arg2 int, arg3 int64) {
	_swig_wrap_LongVector_set(arg1, arg2, arg3)
}

var _wrap_delete_LongVector unsafe.Pointer

func _swig_wrap_delete_LongVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_LongVector, _swig_p)
	return
}

func DeleteLongVector(arg1 LongVector) {
	_swig_wrap_delete_LongVector(arg1.Swigcptr())
}

type LongVector interface {
	Swigcptr() uintptr
	SwigIsLongVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 int64)
	Get(arg2 int) (_swig_ret int64)
	Set(arg2 int, arg3 int64)
}

type SwigcptrUCharVector uintptr

func (p SwigcptrUCharVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUCharVector) SwigIsUCharVector() {
}

var _wrap_new_UCharVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_UCharVector__SWIG_0() (base SwigcptrUCharVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UCharVector__SWIG_0, _swig_p)
	return
}

func NewUCharVector__SWIG_0() (_swig_ret UCharVector) {
	return _swig_wrap_new_UCharVector__SWIG_0()
}

var _wrap_new_UCharVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_UCharVector__SWIG_1(base int64) (_ SwigcptrUCharVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UCharVector__SWIG_1, _swig_p)
	return
}

func NewUCharVector__SWIG_1(arg1 int64) (_swig_ret UCharVector) {
	return _swig_wrap_new_UCharVector__SWIG_1(arg1)
}

func NewUCharVector(a ...interface{}) UCharVector {
	argc := len(a)
	if argc == 0 {
		return NewUCharVector__SWIG_0()
	}
	if argc == 1 {
		return NewUCharVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_UCharVector_size unsafe.Pointer

func _swig_wrap_UCharVector_size(base SwigcptrUCharVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_size, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Size() (_swig_ret int64) {
	return _swig_wrap_UCharVector_size(arg1)
}

var _wrap_UCharVector_capacity unsafe.Pointer

func _swig_wrap_UCharVector_capacity(base SwigcptrUCharVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_UCharVector_capacity(arg1)
}

var _wrap_UCharVector_reserve unsafe.Pointer

func _swig_wrap_UCharVector_reserve(base SwigcptrUCharVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Reserve(arg2 int64) {
	_swig_wrap_UCharVector_reserve(arg1, arg2)
}

var _wrap_UCharVector_isEmpty unsafe.Pointer

func _swig_wrap_UCharVector_isEmpty(base SwigcptrUCharVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_UCharVector_isEmpty(arg1)
}

var _wrap_UCharVector_clear unsafe.Pointer

func _swig_wrap_UCharVector_clear(base SwigcptrUCharVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Clear() {
	_swig_wrap_UCharVector_clear(arg1)
}

var _wrap_UCharVector_add unsafe.Pointer

func _swig_wrap_UCharVector_add(base SwigcptrUCharVector, _ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_add, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Add(arg2 byte) {
	_swig_wrap_UCharVector_add(arg1, arg2)
}

var _wrap_UCharVector_get unsafe.Pointer

func _swig_wrap_UCharVector_get(base SwigcptrUCharVector, _ int) (_ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_get, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Get(arg2 int) (_swig_ret byte) {
	return _swig_wrap_UCharVector_get(arg1, arg2)
}

var _wrap_UCharVector_set unsafe.Pointer

func _swig_wrap_UCharVector_set(base SwigcptrUCharVector, _ int, _ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UCharVector_set, _swig_p)
	return
}

func (arg1 SwigcptrUCharVector) Set(arg2 int, arg3 byte) {
	_swig_wrap_UCharVector_set(arg1, arg2, arg3)
}

var _wrap_delete_UCharVector unsafe.Pointer

func _swig_wrap_delete_UCharVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_UCharVector, _swig_p)
	return
}

func DeleteUCharVector(arg1 UCharVector) {
	_swig_wrap_delete_UCharVector(arg1.Swigcptr())
}

type UCharVector interface {
	Swigcptr() uintptr
	SwigIsUCharVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type SwigcptrUIntVector uintptr

func (p SwigcptrUIntVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUIntVector) SwigIsUIntVector() {
}

var _wrap_new_UIntVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_UIntVector__SWIG_0() (base SwigcptrUIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UIntVector__SWIG_0, _swig_p)
	return
}

func NewUIntVector__SWIG_0() (_swig_ret UIntVector) {
	return _swig_wrap_new_UIntVector__SWIG_0()
}

var _wrap_new_UIntVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_UIntVector__SWIG_1(base int64) (_ SwigcptrUIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UIntVector__SWIG_1, _swig_p)
	return
}

func NewUIntVector__SWIG_1(arg1 int64) (_swig_ret UIntVector) {
	return _swig_wrap_new_UIntVector__SWIG_1(arg1)
}

func NewUIntVector(a ...interface{}) UIntVector {
	argc := len(a)
	if argc == 0 {
		return NewUIntVector__SWIG_0()
	}
	if argc == 1 {
		return NewUIntVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_UIntVector_size unsafe.Pointer

func _swig_wrap_UIntVector_size(base SwigcptrUIntVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_size, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Size() (_swig_ret int64) {
	return _swig_wrap_UIntVector_size(arg1)
}

var _wrap_UIntVector_capacity unsafe.Pointer

func _swig_wrap_UIntVector_capacity(base SwigcptrUIntVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_UIntVector_capacity(arg1)
}

var _wrap_UIntVector_reserve unsafe.Pointer

func _swig_wrap_UIntVector_reserve(base SwigcptrUIntVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Reserve(arg2 int64) {
	_swig_wrap_UIntVector_reserve(arg1, arg2)
}

var _wrap_UIntVector_isEmpty unsafe.Pointer

func _swig_wrap_UIntVector_isEmpty(base SwigcptrUIntVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_UIntVector_isEmpty(arg1)
}

var _wrap_UIntVector_clear unsafe.Pointer

func _swig_wrap_UIntVector_clear(base SwigcptrUIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Clear() {
	_swig_wrap_UIntVector_clear(arg1)
}

var _wrap_UIntVector_add unsafe.Pointer

func _swig_wrap_UIntVector_add(base SwigcptrUIntVector, _ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_add, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Add(arg2 uint) {
	_swig_wrap_UIntVector_add(arg1, arg2)
}

var _wrap_UIntVector_get unsafe.Pointer

func _swig_wrap_UIntVector_get(base SwigcptrUIntVector, _ int) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_get, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Get(arg2 int) (_swig_ret uint) {
	return _swig_wrap_UIntVector_get(arg1, arg2)
}

var _wrap_UIntVector_set unsafe.Pointer

func _swig_wrap_UIntVector_set(base SwigcptrUIntVector, _ int, _ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UIntVector_set, _swig_p)
	return
}

func (arg1 SwigcptrUIntVector) Set(arg2 int, arg3 uint) {
	_swig_wrap_UIntVector_set(arg1, arg2, arg3)
}

var _wrap_delete_UIntVector unsafe.Pointer

func _swig_wrap_delete_UIntVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_UIntVector, _swig_p)
	return
}

func DeleteUIntVector(arg1 UIntVector) {
	_swig_wrap_delete_UIntVector(arg1.Swigcptr())
}

type UIntVector interface {
	Swigcptr() uintptr
	SwigIsUIntVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 uint)
	Get(arg2 int) (_swig_ret uint)
	Set(arg2 int, arg3 uint)
}

type SwigcptrUShortVector uintptr

func (p SwigcptrUShortVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUShortVector) SwigIsUShortVector() {
}

var _wrap_new_UShortVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_UShortVector__SWIG_0() (base SwigcptrUShortVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UShortVector__SWIG_0, _swig_p)
	return
}

func NewUShortVector__SWIG_0() (_swig_ret UShortVector) {
	return _swig_wrap_new_UShortVector__SWIG_0()
}

var _wrap_new_UShortVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_UShortVector__SWIG_1(base int64) (_ SwigcptrUShortVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UShortVector__SWIG_1, _swig_p)
	return
}

func NewUShortVector__SWIG_1(arg1 int64) (_swig_ret UShortVector) {
	return _swig_wrap_new_UShortVector__SWIG_1(arg1)
}

func NewUShortVector(a ...interface{}) UShortVector {
	argc := len(a)
	if argc == 0 {
		return NewUShortVector__SWIG_0()
	}
	if argc == 1 {
		return NewUShortVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_UShortVector_size unsafe.Pointer

func _swig_wrap_UShortVector_size(base SwigcptrUShortVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_size, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Size() (_swig_ret int64) {
	return _swig_wrap_UShortVector_size(arg1)
}

var _wrap_UShortVector_capacity unsafe.Pointer

func _swig_wrap_UShortVector_capacity(base SwigcptrUShortVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_UShortVector_capacity(arg1)
}

var _wrap_UShortVector_reserve unsafe.Pointer

func _swig_wrap_UShortVector_reserve(base SwigcptrUShortVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Reserve(arg2 int64) {
	_swig_wrap_UShortVector_reserve(arg1, arg2)
}

var _wrap_UShortVector_isEmpty unsafe.Pointer

func _swig_wrap_UShortVector_isEmpty(base SwigcptrUShortVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_UShortVector_isEmpty(arg1)
}

var _wrap_UShortVector_clear unsafe.Pointer

func _swig_wrap_UShortVector_clear(base SwigcptrUShortVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Clear() {
	_swig_wrap_UShortVector_clear(arg1)
}

var _wrap_UShortVector_add unsafe.Pointer

func _swig_wrap_UShortVector_add(base SwigcptrUShortVector, _ uint16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_add, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Add(arg2 uint16) {
	_swig_wrap_UShortVector_add(arg1, arg2)
}

var _wrap_UShortVector_get unsafe.Pointer

func _swig_wrap_UShortVector_get(base SwigcptrUShortVector, _ int) (_ uint16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_get, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Get(arg2 int) (_swig_ret uint16) {
	return _swig_wrap_UShortVector_get(arg1, arg2)
}

var _wrap_UShortVector_set unsafe.Pointer

func _swig_wrap_UShortVector_set(base SwigcptrUShortVector, _ int, _ uint16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UShortVector_set, _swig_p)
	return
}

func (arg1 SwigcptrUShortVector) Set(arg2 int, arg3 uint16) {
	_swig_wrap_UShortVector_set(arg1, arg2, arg3)
}

var _wrap_delete_UShortVector unsafe.Pointer

func _swig_wrap_delete_UShortVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_UShortVector, _swig_p)
	return
}

func DeleteUShortVector(arg1 UShortVector) {
	_swig_wrap_delete_UShortVector(arg1.Swigcptr())
}

type UShortVector interface {
	Swigcptr() uintptr
	SwigIsUShortVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 uint16)
	Get(arg2 int) (_swig_ret uint16)
	Set(arg2 int, arg3 uint16)
}

type SwigcptrULongVector uintptr

func (p SwigcptrULongVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrULongVector) SwigIsULongVector() {
}

var _wrap_new_ULongVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_ULongVector__SWIG_0() (base SwigcptrULongVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ULongVector__SWIG_0, _swig_p)
	return
}

func NewULongVector__SWIG_0() (_swig_ret ULongVector) {
	return _swig_wrap_new_ULongVector__SWIG_0()
}

var _wrap_new_ULongVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_ULongVector__SWIG_1(base int64) (_ SwigcptrULongVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ULongVector__SWIG_1, _swig_p)
	return
}

func NewULongVector__SWIG_1(arg1 int64) (_swig_ret ULongVector) {
	return _swig_wrap_new_ULongVector__SWIG_1(arg1)
}

func NewULongVector(a ...interface{}) ULongVector {
	argc := len(a)
	if argc == 0 {
		return NewULongVector__SWIG_0()
	}
	if argc == 1 {
		return NewULongVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_ULongVector_size unsafe.Pointer

func _swig_wrap_ULongVector_size(base SwigcptrULongVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_size, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Size() (_swig_ret int64) {
	return _swig_wrap_ULongVector_size(arg1)
}

var _wrap_ULongVector_capacity unsafe.Pointer

func _swig_wrap_ULongVector_capacity(base SwigcptrULongVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_ULongVector_capacity(arg1)
}

var _wrap_ULongVector_reserve unsafe.Pointer

func _swig_wrap_ULongVector_reserve(base SwigcptrULongVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Reserve(arg2 int64) {
	_swig_wrap_ULongVector_reserve(arg1, arg2)
}

var _wrap_ULongVector_isEmpty unsafe.Pointer

func _swig_wrap_ULongVector_isEmpty(base SwigcptrULongVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_ULongVector_isEmpty(arg1)
}

var _wrap_ULongVector_clear unsafe.Pointer

func _swig_wrap_ULongVector_clear(base SwigcptrULongVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Clear() {
	_swig_wrap_ULongVector_clear(arg1)
}

var _wrap_ULongVector_add unsafe.Pointer

func _swig_wrap_ULongVector_add(base SwigcptrULongVector, _ uint64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_add, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Add(arg2 uint64) {
	_swig_wrap_ULongVector_add(arg1, arg2)
}

var _wrap_ULongVector_get unsafe.Pointer

func _swig_wrap_ULongVector_get(base SwigcptrULongVector, _ int) (_ uint64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_get, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Get(arg2 int) (_swig_ret uint64) {
	return _swig_wrap_ULongVector_get(arg1, arg2)
}

var _wrap_ULongVector_set unsafe.Pointer

func _swig_wrap_ULongVector_set(base SwigcptrULongVector, _ int, _ uint64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ULongVector_set, _swig_p)
	return
}

func (arg1 SwigcptrULongVector) Set(arg2 int, arg3 uint64) {
	_swig_wrap_ULongVector_set(arg1, arg2, arg3)
}

var _wrap_delete_ULongVector unsafe.Pointer

func _swig_wrap_delete_ULongVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ULongVector, _swig_p)
	return
}

func DeleteULongVector(arg1 ULongVector) {
	_swig_wrap_delete_ULongVector(arg1.Swigcptr())
}

type ULongVector interface {
	Swigcptr() uintptr
	SwigIsULongVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 uint64)
	Get(arg2 int) (_swig_ret uint64)
	Set(arg2 int, arg3 uint64)
}

type SwigcptrDoubleVector uintptr

func (p SwigcptrDoubleVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDoubleVector) SwigIsDoubleVector() {
}

var _wrap_new_DoubleVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_DoubleVector__SWIG_0() (base SwigcptrDoubleVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_DoubleVector__SWIG_0, _swig_p)
	return
}

func NewDoubleVector__SWIG_0() (_swig_ret DoubleVector) {
	return _swig_wrap_new_DoubleVector__SWIG_0()
}

var _wrap_new_DoubleVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_DoubleVector__SWIG_1(base int64) (_ SwigcptrDoubleVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_DoubleVector__SWIG_1, _swig_p)
	return
}

func NewDoubleVector__SWIG_1(arg1 int64) (_swig_ret DoubleVector) {
	return _swig_wrap_new_DoubleVector__SWIG_1(arg1)
}

func NewDoubleVector(a ...interface{}) DoubleVector {
	argc := len(a)
	if argc == 0 {
		return NewDoubleVector__SWIG_0()
	}
	if argc == 1 {
		return NewDoubleVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_DoubleVector_size unsafe.Pointer

func _swig_wrap_DoubleVector_size(base SwigcptrDoubleVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_size, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Size() (_swig_ret int64) {
	return _swig_wrap_DoubleVector_size(arg1)
}

var _wrap_DoubleVector_capacity unsafe.Pointer

func _swig_wrap_DoubleVector_capacity(base SwigcptrDoubleVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_DoubleVector_capacity(arg1)
}

var _wrap_DoubleVector_reserve unsafe.Pointer

func _swig_wrap_DoubleVector_reserve(base SwigcptrDoubleVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Reserve(arg2 int64) {
	_swig_wrap_DoubleVector_reserve(arg1, arg2)
}

var _wrap_DoubleVector_isEmpty unsafe.Pointer

func _swig_wrap_DoubleVector_isEmpty(base SwigcptrDoubleVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_DoubleVector_isEmpty(arg1)
}

var _wrap_DoubleVector_clear unsafe.Pointer

func _swig_wrap_DoubleVector_clear(base SwigcptrDoubleVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Clear() {
	_swig_wrap_DoubleVector_clear(arg1)
}

var _wrap_DoubleVector_add unsafe.Pointer

func _swig_wrap_DoubleVector_add(base SwigcptrDoubleVector, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_add, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Add(arg2 float64) {
	_swig_wrap_DoubleVector_add(arg1, arg2)
}

var _wrap_DoubleVector_get unsafe.Pointer

func _swig_wrap_DoubleVector_get(base SwigcptrDoubleVector, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_get, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Get(arg2 int) (_swig_ret float64) {
	return _swig_wrap_DoubleVector_get(arg1, arg2)
}

var _wrap_DoubleVector_set unsafe.Pointer

func _swig_wrap_DoubleVector_set(base SwigcptrDoubleVector, _ int, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleVector_set, _swig_p)
	return
}

func (arg1 SwigcptrDoubleVector) Set(arg2 int, arg3 float64) {
	_swig_wrap_DoubleVector_set(arg1, arg2, arg3)
}

var _wrap_delete_DoubleVector unsafe.Pointer

func _swig_wrap_delete_DoubleVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_DoubleVector, _swig_p)
	return
}

func DeleteDoubleVector(arg1 DoubleVector) {
	_swig_wrap_delete_DoubleVector(arg1.Swigcptr())
}

type DoubleVector interface {
	Swigcptr() uintptr
	SwigIsDoubleVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 float64)
	Get(arg2 int) (_swig_ret float64)
	Set(arg2 int, arg3 float64)
}

type SwigcptrStringVector uintptr

func (p SwigcptrStringVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringVector) SwigIsStringVector() {
}

var _wrap_new_StringVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StringVector__SWIG_0() (base SwigcptrStringVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringVector__SWIG_0, _swig_p)
	return
}

func NewStringVector__SWIG_0() (_swig_ret StringVector) {
	return _swig_wrap_new_StringVector__SWIG_0()
}

var _wrap_new_StringVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StringVector__SWIG_1(base int64) (_ SwigcptrStringVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringVector__SWIG_1, _swig_p)
	return
}

func NewStringVector__SWIG_1(arg1 int64) (_swig_ret StringVector) {
	return _swig_wrap_new_StringVector__SWIG_1(arg1)
}

func NewStringVector(a ...interface{}) StringVector {
	argc := len(a)
	if argc == 0 {
		return NewStringVector__SWIG_0()
	}
	if argc == 1 {
		return NewStringVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_StringVector_size unsafe.Pointer

func _swig_wrap_StringVector_size(base SwigcptrStringVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_size, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Size() (_swig_ret int64) {
	return _swig_wrap_StringVector_size(arg1)
}

var _wrap_StringVector_capacity unsafe.Pointer

func _swig_wrap_StringVector_capacity(base SwigcptrStringVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_StringVector_capacity(arg1)
}

var _wrap_StringVector_reserve unsafe.Pointer

func _swig_wrap_StringVector_reserve(base SwigcptrStringVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Reserve(arg2 int64) {
	_swig_wrap_StringVector_reserve(arg1, arg2)
}

var _wrap_StringVector_isEmpty unsafe.Pointer

func _swig_wrap_StringVector_isEmpty(base SwigcptrStringVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_StringVector_isEmpty(arg1)
}

var _wrap_StringVector_clear unsafe.Pointer

func _swig_wrap_StringVector_clear(base SwigcptrStringVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Clear() {
	_swig_wrap_StringVector_clear(arg1)
}

var _wrap_StringVector_add unsafe.Pointer

func _swig_wrap_StringVector_add(base SwigcptrStringVector, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_add, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Add(arg2 string) {
	_swig_wrap_StringVector_add(arg1, arg2)
}

var _wrap_StringVector_get unsafe.Pointer

func _swig_wrap_StringVector_get(base SwigcptrStringVector, _ int) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_get, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Get(arg2 int) (_swig_ret string) {
	return _swig_wrap_StringVector_get(arg1, arg2)
}

var _wrap_StringVector_set unsafe.Pointer

func _swig_wrap_StringVector_set(base SwigcptrStringVector, _ int, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringVector_set, _swig_p)
	return
}

func (arg1 SwigcptrStringVector) Set(arg2 int, arg3 string) {
	_swig_wrap_StringVector_set(arg1, arg2, arg3)
}

var _wrap_delete_StringVector unsafe.Pointer

func _swig_wrap_delete_StringVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StringVector, _swig_p)
	return
}

func DeleteStringVector(arg1 StringVector) {
	_swig_wrap_delete_StringVector(arg1.Swigcptr())
}

type StringVector interface {
	Swigcptr() uintptr
	SwigIsStringVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

var _wrap_typedef_test unsafe.Pointer

func Typedef_test(arg1 int64) (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_typedef_test, _swig_p)
	return
}
type SwigcptrRealVector uintptr

func (p SwigcptrRealVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRealVector) SwigIsRealVector() {
}

var _wrap_new_RealVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_RealVector__SWIG_0() (base SwigcptrRealVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_RealVector__SWIG_0, _swig_p)
	return
}

func NewRealVector__SWIG_0() (_swig_ret RealVector) {
	return _swig_wrap_new_RealVector__SWIG_0()
}

var _wrap_new_RealVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_RealVector__SWIG_1(base int64) (_ SwigcptrRealVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_RealVector__SWIG_1, _swig_p)
	return
}

func NewRealVector__SWIG_1(arg1 int64) (_swig_ret RealVector) {
	return _swig_wrap_new_RealVector__SWIG_1(arg1)
}

func NewRealVector(a ...interface{}) RealVector {
	argc := len(a)
	if argc == 0 {
		return NewRealVector__SWIG_0()
	}
	if argc == 1 {
		return NewRealVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_RealVector_size unsafe.Pointer

func _swig_wrap_RealVector_size(base SwigcptrRealVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_size, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Size() (_swig_ret int64) {
	return _swig_wrap_RealVector_size(arg1)
}

var _wrap_RealVector_capacity unsafe.Pointer

func _swig_wrap_RealVector_capacity(base SwigcptrRealVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_RealVector_capacity(arg1)
}

var _wrap_RealVector_reserve unsafe.Pointer

func _swig_wrap_RealVector_reserve(base SwigcptrRealVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Reserve(arg2 int64) {
	_swig_wrap_RealVector_reserve(arg1, arg2)
}

var _wrap_RealVector_isEmpty unsafe.Pointer

func _swig_wrap_RealVector_isEmpty(base SwigcptrRealVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_RealVector_isEmpty(arg1)
}

var _wrap_RealVector_clear unsafe.Pointer

func _swig_wrap_RealVector_clear(base SwigcptrRealVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Clear() {
	_swig_wrap_RealVector_clear(arg1)
}

var _wrap_RealVector_add unsafe.Pointer

func _swig_wrap_RealVector_add(base SwigcptrRealVector, _ float32) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_add, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Add(arg2 float32) {
	_swig_wrap_RealVector_add(arg1, arg2)
}

var _wrap_RealVector_get unsafe.Pointer

func _swig_wrap_RealVector_get(base SwigcptrRealVector, _ int) (_ float32) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_get, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Get(arg2 int) (_swig_ret float32) {
	return _swig_wrap_RealVector_get(arg1, arg2)
}

var _wrap_RealVector_set unsafe.Pointer

func _swig_wrap_RealVector_set(base SwigcptrRealVector, _ int, _ float32) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RealVector_set, _swig_p)
	return
}

func (arg1 SwigcptrRealVector) Set(arg2 int, arg3 float32) {
	_swig_wrap_RealVector_set(arg1, arg2, arg3)
}

var _wrap_delete_RealVector unsafe.Pointer

func _swig_wrap_delete_RealVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_RealVector, _swig_p)
	return
}

func DeleteRealVector(arg1 RealVector) {
	_swig_wrap_delete_RealVector(arg1.Swigcptr())
}

type RealVector interface {
	Swigcptr() uintptr
	SwigIsRealVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 float32)
	Get(arg2 int) (_swig_ret float32)
	Set(arg2 int, arg3 float32)
}

var _wrap_average unsafe.Pointer

func _swig_wrap_average(base uintptr) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_average, _swig_p)
	return
}

func Average(arg1 IntVector) (_swig_ret float64) {
	return _swig_wrap_average(arg1.Swigcptr())
}

var _wrap_half unsafe.Pointer

func _swig_wrap_half(base uintptr) (_ SwigcptrRealVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_half, _swig_p)
	return
}

func Half(arg1 RealVector) (_swig_ret RealVector) {
	return _swig_wrap_half(arg1.Swigcptr())
}

var _wrap_halve_in_place unsafe.Pointer

func _swig_wrap_halve_in_place(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_halve_in_place, _swig_p)
	return
}

func Halve_in_place(arg1 DoubleVector) {
	_swig_wrap_halve_in_place(arg1.Swigcptr())
}

type SwigcptrStruct uintptr

func (p SwigcptrStruct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStruct) SwigIsStruct() {
}

var _wrap_Struct_num_set unsafe.Pointer

func _swig_wrap_Struct_num_set(base SwigcptrStruct, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Struct_num_set, _swig_p)
	return
}

func (arg1 SwigcptrStruct) SetNum(arg2 float64) {
	_swig_wrap_Struct_num_set(arg1, arg2)
}

var _wrap_Struct_num_get unsafe.Pointer

func _swig_wrap_Struct_num_get(base SwigcptrStruct) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Struct_num_get, _swig_p)
	return
}

func (arg1 SwigcptrStruct) GetNum() (_swig_ret float64) {
	return _swig_wrap_Struct_num_get(arg1)
}

var _wrap_new_Struct__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Struct__SWIG_0() (base SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Struct__SWIG_0, _swig_p)
	return
}

func NewStruct__SWIG_0() (_swig_ret Struct) {
	return _swig_wrap_new_Struct__SWIG_0()
}

var _wrap_new_Struct__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Struct__SWIG_1(base float64) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Struct__SWIG_1, _swig_p)
	return
}

func NewStruct__SWIG_1(arg1 float64) (_swig_ret Struct) {
	return _swig_wrap_new_Struct__SWIG_1(arg1)
}

func NewStruct(a ...interface{}) Struct {
	argc := len(a)
	if argc == 0 {
		return NewStruct__SWIG_0()
	}
	if argc == 1 {
		return NewStruct__SWIG_1(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Struct unsafe.Pointer

func _swig_wrap_delete_Struct(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Struct, _swig_p)
	return
}

func DeleteStruct(arg1 Struct) {
	_swig_wrap_delete_Struct(arg1.Swigcptr())
}

type Struct interface {
	Swigcptr() uintptr
	SwigIsStruct()
	SetNum(arg2 float64)
	GetNum() (_swig_ret float64)
}

type SwigcptrStructure uintptr

func (p SwigcptrStructure) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStructure) SwigIsStructure() {
}

var _wrap_Structure_num_set unsafe.Pointer

func _swig_wrap_Structure_num_set(base SwigcptrStructure, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Structure_num_set, _swig_p)
	return
}

func (arg1 SwigcptrStructure) SetNum(arg2 float64) {
	_swig_wrap_Structure_num_set(arg1, arg2)
}

var _wrap_Structure_num_get unsafe.Pointer

func _swig_wrap_Structure_num_get(base SwigcptrStructure) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Structure_num_get, _swig_p)
	return
}

func (arg1 SwigcptrStructure) GetNum() (_swig_ret float64) {
	return _swig_wrap_Structure_num_get(arg1)
}

var _wrap_new_Structure__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Structure__SWIG_0() (base SwigcptrStructure) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Structure__SWIG_0, _swig_p)
	return
}

func NewStructure__SWIG_0() (_swig_ret Structure) {
	return _swig_wrap_new_Structure__SWIG_0()
}

var _wrap_new_Structure__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Structure__SWIG_1(base float64) (_ SwigcptrStructure) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Structure__SWIG_1, _swig_p)
	return
}

func NewStructure__SWIG_1(arg1 float64) (_swig_ret Structure) {
	return _swig_wrap_new_Structure__SWIG_1(arg1)
}

func NewStructure(a ...interface{}) Structure {
	argc := len(a)
	if argc == 0 {
		return NewStructure__SWIG_0()
	}
	if argc == 1 {
		return NewStructure__SWIG_1(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Structure unsafe.Pointer

func _swig_wrap_delete_Structure(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Structure, _swig_p)
	return
}

func DeleteStructure(arg1 Structure) {
	_swig_wrap_delete_Structure(arg1.Swigcptr())
}

type Structure interface {
	Swigcptr() uintptr
	SwigIsStructure()
	SetNum(arg2 float64)
	GetNum() (_swig_ret float64)
}

var _wrap_vecreal unsafe.Pointer

func _swig_wrap_vecreal(base uintptr) (_ SwigcptrRealVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecreal, _swig_p)
	return
}

func Vecreal(arg1 RealVector) (_swig_ret RealVector) {
	return _swig_wrap_vecreal(arg1.Swigcptr())
}

var _wrap_vecintptr__SWIG_0 unsafe.Pointer

func _swig_wrap_vecintptr__SWIG_0(base uintptr) (_ SwigcptrIntVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecintptr__SWIG_0, _swig_p)
	return
}

func Vecintptr__SWIG_0(arg1 IntVector) (_swig_ret IntVector) {
	return _swig_wrap_vecintptr__SWIG_0(arg1.Swigcptr())
}

var _wrap_vecintptr__SWIG_1 unsafe.Pointer

func _swig_wrap_vecintptr__SWIG_1(base uintptr) (_ SwigcptrIntPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecintptr__SWIG_1, _swig_p)
	return
}

func Vecintptr__SWIG_1(arg1 IntPtrVector) (_swig_ret IntPtrVector) {
	return _swig_wrap_vecintptr__SWIG_1(arg1.Swigcptr())
}

func Vecintptr(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(IntVector); !ok {
			goto check_1
		}
		return Vecintptr__SWIG_0(a[0].(IntVector))
	}
check_1:
	if argc == 1 {
		return Vecintptr__SWIG_1(a[0].(IntPtrVector))
	}
	panic("No match for overloaded function call")
}

var _wrap_vecintconstptr unsafe.Pointer

func _swig_wrap_vecintconstptr(base uintptr) (_ SwigcptrIntConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecintconstptr, _swig_p)
	return
}

func Vecintconstptr(arg1 IntConstPtrVector) (_swig_ret IntConstPtrVector) {
	return _swig_wrap_vecintconstptr(arg1.Swigcptr())
}

var _wrap_vecstruct unsafe.Pointer

func _swig_wrap_vecstruct(base uintptr) (_ SwigcptrStructVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecstruct, _swig_p)
	return
}

func Vecstruct(arg1 StructVector) (_swig_ret StructVector) {
	return _swig_wrap_vecstruct(arg1.Swigcptr())
}

var _wrap_vecstructptr unsafe.Pointer

func _swig_wrap_vecstructptr(base uintptr) (_ SwigcptrStructPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecstructptr, _swig_p)
	return
}

func Vecstructptr(arg1 StructPtrVector) (_swig_ret StructPtrVector) {
	return _swig_wrap_vecstructptr(arg1.Swigcptr())
}

var _wrap_vecstructconstptr unsafe.Pointer

func _swig_wrap_vecstructconstptr(base uintptr) (_ SwigcptrStructConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecstructconstptr, _swig_p)
	return
}

func Vecstructconstptr(arg1 StructConstPtrVector) (_swig_ret StructConstPtrVector) {
	return _swig_wrap_vecstructconstptr(arg1.Swigcptr())
}

type SwigcptrIntPtrVector uintptr

func (p SwigcptrIntPtrVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntPtrVector) SwigIsIntPtrVector() {
}

var _wrap_new_IntPtrVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntPtrVector__SWIG_0() (base SwigcptrIntPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntPtrVector__SWIG_0, _swig_p)
	return
}

func NewIntPtrVector__SWIG_0() (_swig_ret IntPtrVector) {
	return _swig_wrap_new_IntPtrVector__SWIG_0()
}

var _wrap_new_IntPtrVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntPtrVector__SWIG_1(base int64) (_ SwigcptrIntPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntPtrVector__SWIG_1, _swig_p)
	return
}

func NewIntPtrVector__SWIG_1(arg1 int64) (_swig_ret IntPtrVector) {
	return _swig_wrap_new_IntPtrVector__SWIG_1(arg1)
}

func NewIntPtrVector(a ...interface{}) IntPtrVector {
	argc := len(a)
	if argc == 0 {
		return NewIntPtrVector__SWIG_0()
	}
	if argc == 1 {
		return NewIntPtrVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntPtrVector_size unsafe.Pointer

func _swig_wrap_IntPtrVector_size(base SwigcptrIntPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_size, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Size() (_swig_ret int64) {
	return _swig_wrap_IntPtrVector_size(arg1)
}

var _wrap_IntPtrVector_capacity unsafe.Pointer

func _swig_wrap_IntPtrVector_capacity(base SwigcptrIntPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_IntPtrVector_capacity(arg1)
}

var _wrap_IntPtrVector_reserve unsafe.Pointer

func _swig_wrap_IntPtrVector_reserve(base SwigcptrIntPtrVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Reserve(arg2 int64) {
	_swig_wrap_IntPtrVector_reserve(arg1, arg2)
}

var _wrap_IntPtrVector_isEmpty unsafe.Pointer

func _swig_wrap_IntPtrVector_isEmpty(base SwigcptrIntPtrVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_IntPtrVector_isEmpty(arg1)
}

var _wrap_IntPtrVector_clear unsafe.Pointer

func _swig_wrap_IntPtrVector_clear(base SwigcptrIntPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Clear() {
	_swig_wrap_IntPtrVector_clear(arg1)
}

var _wrap_IntPtrVector_add unsafe.Pointer

func _swig_wrap_IntPtrVector_add(base SwigcptrIntPtrVector, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_add, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Add(arg2 *int) {
	_swig_wrap_IntPtrVector_add(arg1, arg2)
}

var _wrap_IntPtrVector_get unsafe.Pointer

func _swig_wrap_IntPtrVector_get(base SwigcptrIntPtrVector, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_get, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Get(arg2 int) (_swig_ret *int) {
	return _swig_wrap_IntPtrVector_get(arg1, arg2)
}

var _wrap_IntPtrVector_set unsafe.Pointer

func _swig_wrap_IntPtrVector_set(base SwigcptrIntPtrVector, _ int, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntPtrVector_set, _swig_p)
	return
}

func (arg1 SwigcptrIntPtrVector) Set(arg2 int, arg3 *int) {
	_swig_wrap_IntPtrVector_set(arg1, arg2, arg3)
}

var _wrap_delete_IntPtrVector unsafe.Pointer

func _swig_wrap_delete_IntPtrVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntPtrVector, _swig_p)
	return
}

func DeleteIntPtrVector(arg1 IntPtrVector) {
	_swig_wrap_delete_IntPtrVector(arg1.Swigcptr())
}

type IntPtrVector interface {
	Swigcptr() uintptr
	SwigIsIntPtrVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 *int)
	Get(arg2 int) (_swig_ret *int)
	Set(arg2 int, arg3 *int)
}

type SwigcptrIntConstPtrVector uintptr

func (p SwigcptrIntConstPtrVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntConstPtrVector) SwigIsIntConstPtrVector() {
}

var _wrap_new_IntConstPtrVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntConstPtrVector__SWIG_0() (base SwigcptrIntConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntConstPtrVector__SWIG_0, _swig_p)
	return
}

func NewIntConstPtrVector__SWIG_0() (_swig_ret IntConstPtrVector) {
	return _swig_wrap_new_IntConstPtrVector__SWIG_0()
}

var _wrap_new_IntConstPtrVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntConstPtrVector__SWIG_1(base int64) (_ SwigcptrIntConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntConstPtrVector__SWIG_1, _swig_p)
	return
}

func NewIntConstPtrVector__SWIG_1(arg1 int64) (_swig_ret IntConstPtrVector) {
	return _swig_wrap_new_IntConstPtrVector__SWIG_1(arg1)
}

func NewIntConstPtrVector(a ...interface{}) IntConstPtrVector {
	argc := len(a)
	if argc == 0 {
		return NewIntConstPtrVector__SWIG_0()
	}
	if argc == 1 {
		return NewIntConstPtrVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntConstPtrVector_size unsafe.Pointer

func _swig_wrap_IntConstPtrVector_size(base SwigcptrIntConstPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_size, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Size() (_swig_ret int64) {
	return _swig_wrap_IntConstPtrVector_size(arg1)
}

var _wrap_IntConstPtrVector_capacity unsafe.Pointer

func _swig_wrap_IntConstPtrVector_capacity(base SwigcptrIntConstPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_IntConstPtrVector_capacity(arg1)
}

var _wrap_IntConstPtrVector_reserve unsafe.Pointer

func _swig_wrap_IntConstPtrVector_reserve(base SwigcptrIntConstPtrVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Reserve(arg2 int64) {
	_swig_wrap_IntConstPtrVector_reserve(arg1, arg2)
}

var _wrap_IntConstPtrVector_isEmpty unsafe.Pointer

func _swig_wrap_IntConstPtrVector_isEmpty(base SwigcptrIntConstPtrVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_IntConstPtrVector_isEmpty(arg1)
}

var _wrap_IntConstPtrVector_clear unsafe.Pointer

func _swig_wrap_IntConstPtrVector_clear(base SwigcptrIntConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Clear() {
	_swig_wrap_IntConstPtrVector_clear(arg1)
}

var _wrap_IntConstPtrVector_add unsafe.Pointer

func _swig_wrap_IntConstPtrVector_add(base SwigcptrIntConstPtrVector, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_add, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Add(arg2 *int) {
	_swig_wrap_IntConstPtrVector_add(arg1, arg2)
}

var _wrap_IntConstPtrVector_get unsafe.Pointer

func _swig_wrap_IntConstPtrVector_get(base SwigcptrIntConstPtrVector, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_get, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Get(arg2 int) (_swig_ret *int) {
	return _swig_wrap_IntConstPtrVector_get(arg1, arg2)
}

var _wrap_IntConstPtrVector_set unsafe.Pointer

func _swig_wrap_IntConstPtrVector_set(base SwigcptrIntConstPtrVector, _ int, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstPtrVector_set, _swig_p)
	return
}

func (arg1 SwigcptrIntConstPtrVector) Set(arg2 int, arg3 *int) {
	_swig_wrap_IntConstPtrVector_set(arg1, arg2, arg3)
}

var _wrap_delete_IntConstPtrVector unsafe.Pointer

func _swig_wrap_delete_IntConstPtrVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntConstPtrVector, _swig_p)
	return
}

func DeleteIntConstPtrVector(arg1 IntConstPtrVector) {
	_swig_wrap_delete_IntConstPtrVector(arg1.Swigcptr())
}

type IntConstPtrVector interface {
	Swigcptr() uintptr
	SwigIsIntConstPtrVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 *int)
	Get(arg2 int) (_swig_ret *int)
	Set(arg2 int, arg3 *int)
}

type SwigcptrStructVector uintptr

func (p SwigcptrStructVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStructVector) SwigIsStructVector() {
}

var _wrap_new_StructVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StructVector__SWIG_0() (base SwigcptrStructVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructVector__SWIG_0, _swig_p)
	return
}

func NewStructVector__SWIG_0() (_swig_ret StructVector) {
	return _swig_wrap_new_StructVector__SWIG_0()
}

var _wrap_new_StructVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StructVector__SWIG_1(base int64) (_ SwigcptrStructVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructVector__SWIG_1, _swig_p)
	return
}

func NewStructVector__SWIG_1(arg1 int64) (_swig_ret StructVector) {
	return _swig_wrap_new_StructVector__SWIG_1(arg1)
}

func NewStructVector(a ...interface{}) StructVector {
	argc := len(a)
	if argc == 0 {
		return NewStructVector__SWIG_0()
	}
	if argc == 1 {
		return NewStructVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_StructVector_size unsafe.Pointer

func _swig_wrap_StructVector_size(base SwigcptrStructVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_size, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Size() (_swig_ret int64) {
	return _swig_wrap_StructVector_size(arg1)
}

var _wrap_StructVector_capacity unsafe.Pointer

func _swig_wrap_StructVector_capacity(base SwigcptrStructVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_StructVector_capacity(arg1)
}

var _wrap_StructVector_reserve unsafe.Pointer

func _swig_wrap_StructVector_reserve(base SwigcptrStructVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Reserve(arg2 int64) {
	_swig_wrap_StructVector_reserve(arg1, arg2)
}

var _wrap_StructVector_isEmpty unsafe.Pointer

func _swig_wrap_StructVector_isEmpty(base SwigcptrStructVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_StructVector_isEmpty(arg1)
}

var _wrap_StructVector_clear unsafe.Pointer

func _swig_wrap_StructVector_clear(base SwigcptrStructVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Clear() {
	_swig_wrap_StructVector_clear(arg1)
}

var _wrap_StructVector_add unsafe.Pointer

func _swig_wrap_StructVector_add(base SwigcptrStructVector, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_add, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Add(arg2 Struct) {
	_swig_wrap_StructVector_add(arg1, arg2.Swigcptr())
}

var _wrap_StructVector_get unsafe.Pointer

func _swig_wrap_StructVector_get(base SwigcptrStructVector, _ int) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_get, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Get(arg2 int) (_swig_ret Struct) {
	return _swig_wrap_StructVector_get(arg1, arg2)
}

var _wrap_StructVector_set unsafe.Pointer

func _swig_wrap_StructVector_set(base SwigcptrStructVector, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructVector_set, _swig_p)
	return
}

func (arg1 SwigcptrStructVector) Set(arg2 int, arg3 Struct) {
	_swig_wrap_StructVector_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_StructVector unsafe.Pointer

func _swig_wrap_delete_StructVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StructVector, _swig_p)
	return
}

func DeleteStructVector(arg1 StructVector) {
	_swig_wrap_delete_StructVector(arg1.Swigcptr())
}

type StructVector interface {
	Swigcptr() uintptr
	SwigIsStructVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Struct)
	Get(arg2 int) (_swig_ret Struct)
	Set(arg2 int, arg3 Struct)
}

type SwigcptrStructPtrVector uintptr

func (p SwigcptrStructPtrVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStructPtrVector) SwigIsStructPtrVector() {
}

var _wrap_new_StructPtrVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StructPtrVector__SWIG_0() (base SwigcptrStructPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructPtrVector__SWIG_0, _swig_p)
	return
}

func NewStructPtrVector__SWIG_0() (_swig_ret StructPtrVector) {
	return _swig_wrap_new_StructPtrVector__SWIG_0()
}

var _wrap_new_StructPtrVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StructPtrVector__SWIG_1(base int64) (_ SwigcptrStructPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructPtrVector__SWIG_1, _swig_p)
	return
}

func NewStructPtrVector__SWIG_1(arg1 int64) (_swig_ret StructPtrVector) {
	return _swig_wrap_new_StructPtrVector__SWIG_1(arg1)
}

func NewStructPtrVector(a ...interface{}) StructPtrVector {
	argc := len(a)
	if argc == 0 {
		return NewStructPtrVector__SWIG_0()
	}
	if argc == 1 {
		return NewStructPtrVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_StructPtrVector_size unsafe.Pointer

func _swig_wrap_StructPtrVector_size(base SwigcptrStructPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_size, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Size() (_swig_ret int64) {
	return _swig_wrap_StructPtrVector_size(arg1)
}

var _wrap_StructPtrVector_capacity unsafe.Pointer

func _swig_wrap_StructPtrVector_capacity(base SwigcptrStructPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_StructPtrVector_capacity(arg1)
}

var _wrap_StructPtrVector_reserve unsafe.Pointer

func _swig_wrap_StructPtrVector_reserve(base SwigcptrStructPtrVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Reserve(arg2 int64) {
	_swig_wrap_StructPtrVector_reserve(arg1, arg2)
}

var _wrap_StructPtrVector_isEmpty unsafe.Pointer

func _swig_wrap_StructPtrVector_isEmpty(base SwigcptrStructPtrVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_StructPtrVector_isEmpty(arg1)
}

var _wrap_StructPtrVector_clear unsafe.Pointer

func _swig_wrap_StructPtrVector_clear(base SwigcptrStructPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Clear() {
	_swig_wrap_StructPtrVector_clear(arg1)
}

var _wrap_StructPtrVector_add unsafe.Pointer

func _swig_wrap_StructPtrVector_add(base SwigcptrStructPtrVector, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_add, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Add(arg2 Struct) {
	_swig_wrap_StructPtrVector_add(arg1, arg2.Swigcptr())
}

var _wrap_StructPtrVector_get unsafe.Pointer

func _swig_wrap_StructPtrVector_get(base SwigcptrStructPtrVector, _ int) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_get, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Get(arg2 int) (_swig_ret Struct) {
	return _swig_wrap_StructPtrVector_get(arg1, arg2)
}

var _wrap_StructPtrVector_set unsafe.Pointer

func _swig_wrap_StructPtrVector_set(base SwigcptrStructPtrVector, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrVector_set, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrVector) Set(arg2 int, arg3 Struct) {
	_swig_wrap_StructPtrVector_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_StructPtrVector unsafe.Pointer

func _swig_wrap_delete_StructPtrVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StructPtrVector, _swig_p)
	return
}

func DeleteStructPtrVector(arg1 StructPtrVector) {
	_swig_wrap_delete_StructPtrVector(arg1.Swigcptr())
}

type StructPtrVector interface {
	Swigcptr() uintptr
	SwigIsStructPtrVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Struct)
	Get(arg2 int) (_swig_ret Struct)
	Set(arg2 int, arg3 Struct)
}

type SwigcptrStructConstPtrVector uintptr

func (p SwigcptrStructConstPtrVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStructConstPtrVector) SwigIsStructConstPtrVector() {
}

var _wrap_new_StructConstPtrVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StructConstPtrVector__SWIG_0() (base SwigcptrStructConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructConstPtrVector__SWIG_0, _swig_p)
	return
}

func NewStructConstPtrVector__SWIG_0() (_swig_ret StructConstPtrVector) {
	return _swig_wrap_new_StructConstPtrVector__SWIG_0()
}

var _wrap_new_StructConstPtrVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StructConstPtrVector__SWIG_1(base int64) (_ SwigcptrStructConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructConstPtrVector__SWIG_1, _swig_p)
	return
}

func NewStructConstPtrVector__SWIG_1(arg1 int64) (_swig_ret StructConstPtrVector) {
	return _swig_wrap_new_StructConstPtrVector__SWIG_1(arg1)
}

func NewStructConstPtrVector(a ...interface{}) StructConstPtrVector {
	argc := len(a)
	if argc == 0 {
		return NewStructConstPtrVector__SWIG_0()
	}
	if argc == 1 {
		return NewStructConstPtrVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_StructConstPtrVector_size unsafe.Pointer

func _swig_wrap_StructConstPtrVector_size(base SwigcptrStructConstPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_size, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Size() (_swig_ret int64) {
	return _swig_wrap_StructConstPtrVector_size(arg1)
}

var _wrap_StructConstPtrVector_capacity unsafe.Pointer

func _swig_wrap_StructConstPtrVector_capacity(base SwigcptrStructConstPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_StructConstPtrVector_capacity(arg1)
}

var _wrap_StructConstPtrVector_reserve unsafe.Pointer

func _swig_wrap_StructConstPtrVector_reserve(base SwigcptrStructConstPtrVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Reserve(arg2 int64) {
	_swig_wrap_StructConstPtrVector_reserve(arg1, arg2)
}

var _wrap_StructConstPtrVector_isEmpty unsafe.Pointer

func _swig_wrap_StructConstPtrVector_isEmpty(base SwigcptrStructConstPtrVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_StructConstPtrVector_isEmpty(arg1)
}

var _wrap_StructConstPtrVector_clear unsafe.Pointer

func _swig_wrap_StructConstPtrVector_clear(base SwigcptrStructConstPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Clear() {
	_swig_wrap_StructConstPtrVector_clear(arg1)
}

var _wrap_StructConstPtrVector_add unsafe.Pointer

func _swig_wrap_StructConstPtrVector_add(base SwigcptrStructConstPtrVector, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_add, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Add(arg2 Struct) {
	_swig_wrap_StructConstPtrVector_add(arg1, arg2.Swigcptr())
}

var _wrap_StructConstPtrVector_get unsafe.Pointer

func _swig_wrap_StructConstPtrVector_get(base SwigcptrStructConstPtrVector, _ int) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_get, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Get(arg2 int) (_swig_ret Struct) {
	return _swig_wrap_StructConstPtrVector_get(arg1, arg2)
}

var _wrap_StructConstPtrVector_set unsafe.Pointer

func _swig_wrap_StructConstPtrVector_set(base SwigcptrStructConstPtrVector, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructConstPtrVector_set, _swig_p)
	return
}

func (arg1 SwigcptrStructConstPtrVector) Set(arg2 int, arg3 Struct) {
	_swig_wrap_StructConstPtrVector_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_StructConstPtrVector unsafe.Pointer

func _swig_wrap_delete_StructConstPtrVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StructConstPtrVector, _swig_p)
	return
}

func DeleteStructConstPtrVector(arg1 StructConstPtrVector) {
	_swig_wrap_delete_StructConstPtrVector(arg1.Swigcptr())
}

type StructConstPtrVector interface {
	Swigcptr() uintptr
	SwigIsStructConstPtrVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Struct)
	Get(arg2 int) (_swig_ret Struct)
	Set(arg2 int, arg3 Struct)
}

type SwigcptrMyClass uintptr

func (p SwigcptrMyClass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyClass) SwigIsMyClass() {
}

var _wrap_new_MyClass unsafe.Pointer

func _swig_wrap_new_MyClass() (base SwigcptrMyClass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyClass, _swig_p)
	return
}

func NewMyClass() (_swig_ret MyClass) {
	return _swig_wrap_new_MyClass()
}

var _wrap_delete_MyClass unsafe.Pointer

func _swig_wrap_delete_MyClass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyClass, _swig_p)
	return
}

func DeleteMyClass(arg1 MyClass) {
	_swig_wrap_delete_MyClass(arg1.Swigcptr())
}

type MyClass interface {
	Swigcptr() uintptr
	SwigIsMyClass()
}

type SwigcptrMyClassPtrVector uintptr

func (p SwigcptrMyClassPtrVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyClassPtrVector) SwigIsMyClassPtrVector() {
}

var _wrap_new_MyClassPtrVector__SWIG_0 unsafe.Pointer

func _swig_wrap_new_MyClassPtrVector__SWIG_0() (base SwigcptrMyClassPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyClassPtrVector__SWIG_0, _swig_p)
	return
}

func NewMyClassPtrVector__SWIG_0() (_swig_ret MyClassPtrVector) {
	return _swig_wrap_new_MyClassPtrVector__SWIG_0()
}

var _wrap_new_MyClassPtrVector__SWIG_1 unsafe.Pointer

func _swig_wrap_new_MyClassPtrVector__SWIG_1(base int64) (_ SwigcptrMyClassPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyClassPtrVector__SWIG_1, _swig_p)
	return
}

func NewMyClassPtrVector__SWIG_1(arg1 int64) (_swig_ret MyClassPtrVector) {
	return _swig_wrap_new_MyClassPtrVector__SWIG_1(arg1)
}

func NewMyClassPtrVector(a ...interface{}) MyClassPtrVector {
	argc := len(a)
	if argc == 0 {
		return NewMyClassPtrVector__SWIG_0()
	}
	if argc == 1 {
		return NewMyClassPtrVector__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_MyClassPtrVector_size unsafe.Pointer

func _swig_wrap_MyClassPtrVector_size(base SwigcptrMyClassPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_size, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Size() (_swig_ret int64) {
	return _swig_wrap_MyClassPtrVector_size(arg1)
}

var _wrap_MyClassPtrVector_capacity unsafe.Pointer

func _swig_wrap_MyClassPtrVector_capacity(base SwigcptrMyClassPtrVector) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_capacity, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Capacity() (_swig_ret int64) {
	return _swig_wrap_MyClassPtrVector_capacity(arg1)
}

var _wrap_MyClassPtrVector_reserve unsafe.Pointer

func _swig_wrap_MyClassPtrVector_reserve(base SwigcptrMyClassPtrVector, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_reserve, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Reserve(arg2 int64) {
	_swig_wrap_MyClassPtrVector_reserve(arg1, arg2)
}

var _wrap_MyClassPtrVector_isEmpty unsafe.Pointer

func _swig_wrap_MyClassPtrVector_isEmpty(base SwigcptrMyClassPtrVector) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_MyClassPtrVector_isEmpty(arg1)
}

var _wrap_MyClassPtrVector_clear unsafe.Pointer

func _swig_wrap_MyClassPtrVector_clear(base SwigcptrMyClassPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_clear, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Clear() {
	_swig_wrap_MyClassPtrVector_clear(arg1)
}

var _wrap_MyClassPtrVector_add unsafe.Pointer

func _swig_wrap_MyClassPtrVector_add(base SwigcptrMyClassPtrVector, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_add, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Add(arg2 MyClass) {
	_swig_wrap_MyClassPtrVector_add(arg1, arg2.Swigcptr())
}

var _wrap_MyClassPtrVector_get unsafe.Pointer

func _swig_wrap_MyClassPtrVector_get(base SwigcptrMyClassPtrVector, _ int) (_ SwigcptrMyClass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_get, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Get(arg2 int) (_swig_ret MyClass) {
	return _swig_wrap_MyClassPtrVector_get(arg1, arg2)
}

var _wrap_MyClassPtrVector_set unsafe.Pointer

func _swig_wrap_MyClassPtrVector_set(base SwigcptrMyClassPtrVector, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClassPtrVector_set, _swig_p)
	return
}

func (arg1 SwigcptrMyClassPtrVector) Set(arg2 int, arg3 MyClass) {
	_swig_wrap_MyClassPtrVector_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_MyClassPtrVector unsafe.Pointer

func _swig_wrap_delete_MyClassPtrVector(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyClassPtrVector, _swig_p)
	return
}

func DeleteMyClassPtrVector(arg1 MyClassPtrVector) {
	_swig_wrap_delete_MyClassPtrVector(arg1.Swigcptr())
}

type MyClassPtrVector interface {
	Swigcptr() uintptr
	SwigIsMyClassPtrVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 MyClass)
	Get(arg2 int) (_swig_ret MyClass)
	Set(arg2 int, arg3 MyClass)
}

type SwigcptrRetsMetadata uintptr

func (p SwigcptrRetsMetadata) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRetsMetadata) SwigIsRetsMetadata() {
}

var _wrap_RetsMetadata_GetAllResources unsafe.Pointer

func _swig_wrap_RetsMetadata_GetAllResources(base SwigcptrRetsMetadata, _ int64) (_ SwigcptrMyClassPtrVector) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RetsMetadata_GetAllResources, _swig_p)
	return
}

func (arg1 SwigcptrRetsMetadata) GetAllResources(arg2 int64) (_swig_ret MyClassPtrVector) {
	return _swig_wrap_RetsMetadata_GetAllResources(arg1, arg2)
}

var _wrap_new_RetsMetadata unsafe.Pointer

func _swig_wrap_new_RetsMetadata() (base SwigcptrRetsMetadata) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_RetsMetadata, _swig_p)
	return
}

func NewRetsMetadata() (_swig_ret RetsMetadata) {
	return _swig_wrap_new_RetsMetadata()
}

var _wrap_delete_RetsMetadata unsafe.Pointer

func _swig_wrap_delete_RetsMetadata(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_RetsMetadata, _swig_p)
	return
}

func DeleteRetsMetadata(arg1 RetsMetadata) {
	_swig_wrap_delete_RetsMetadata(arg1.Swigcptr())
}

type RetsMetadata interface {
	Swigcptr() uintptr
	SwigIsRetsMetadata()
	GetAllResources(arg2 int64) (_swig_ret MyClassPtrVector)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

