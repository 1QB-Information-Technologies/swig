/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../packageoption_a.i

package packageoption_a

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_A_testInt unsafe.Pointer

func _swig_wrap_A_testInt(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_testInt, _swig_p)
	return
}

func (arg1 SwigcptrA) TestInt() (_swig_ret int) {
	return _swig_wrap_A_testInt(arg1)
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA() (_swig_ret A) {
	return _swig_wrap_new_A()
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	TestInt() (_swig_ret int)
}

type SwigcptrBase uintptr

func (p SwigcptrBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBase) SwigIsBase() {
}

var _wrap_Base_vmethod unsafe.Pointer

func _swig_wrap_Base_vmethod(base SwigcptrBase) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_vmethod, _swig_p)
	return
}

func (arg1 SwigcptrBase) Vmethod() (_swig_ret int) {
	return _swig_wrap_Base_vmethod(arg1)
}

var _wrap_Base_basemethod unsafe.Pointer

func _swig_wrap_Base_basemethod(base SwigcptrBase) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_basemethod, _swig_p)
	return
}

func (arg1 SwigcptrBase) Basemethod() (_swig_ret int) {
	return _swig_wrap_Base_basemethod(arg1)
}

var _wrap_delete_Base unsafe.Pointer

func _swig_wrap_delete_Base(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Base, _swig_p)
	return
}

func DeleteBase(arg1 Base) {
	_swig_wrap_delete_Base(arg1.Swigcptr())
}

var _wrap_new_Base unsafe.Pointer

func _swig_wrap_new_Base() (base SwigcptrBase) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Base, _swig_p)
	return
}

func NewBase() (_swig_ret Base) {
	return _swig_wrap_new_Base()
}

type Base interface {
	Swigcptr() uintptr
	SwigIsBase()
	Vmethod() (_swig_ret int)
	Basemethod() (_swig_ret int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

