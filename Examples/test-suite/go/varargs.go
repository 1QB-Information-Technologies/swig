/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../varargs.i

package varargs

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_test unsafe.Pointer

func Test(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test, _swig_p)
	return
}
var _wrap_test_def__SWIG_0 unsafe.Pointer

func Test_def__SWIG_0(arg1 string, arg2 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test_def__SWIG_0, _swig_p)
	return
}
var _wrap_test_def__SWIG_1 unsafe.Pointer

func Test_def__SWIG_1(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test_def__SWIG_1, _swig_p)
	return
}
func Test_def(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return Test_def__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return Test_def__SWIG_0(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

type SwigcptrFoo uintptr

func (p SwigcptrFoo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo) SwigIsFoo() {
}

var _wrap_Foo_str_set unsafe.Pointer

func _swig_wrap_Foo_str_set(base SwigcptrFoo, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_str_set, _swig_p)
	return
}

func (arg1 SwigcptrFoo) SetStr(arg2 string) {
	_swig_wrap_Foo_str_set(arg1, arg2)
}

var _wrap_Foo_str_get unsafe.Pointer

func _swig_wrap_Foo_str_get(base SwigcptrFoo) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_str_get, _swig_p)
	return
}

func (arg1 SwigcptrFoo) GetStr() (_swig_ret string) {
	return _swig_wrap_Foo_str_get(arg1)
}

var _wrap_new_Foo__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo__SWIG_0() (base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo__SWIG_0, _swig_p)
	return
}

func NewFoo__SWIG_0() (_swig_ret Foo) {
	return _swig_wrap_new_Foo__SWIG_0()
}

var _wrap_new_Foo__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo__SWIG_1(base string, _ int) (_ SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo__SWIG_1, _swig_p)
	return
}

func NewFoo__SWIG_1(arg1 string, arg2 int) (_swig_ret Foo) {
	return _swig_wrap_new_Foo__SWIG_1(arg1, arg2)
}

var _wrap_new_Foo__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Foo__SWIG_2(base string) (_ SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo__SWIG_2, _swig_p)
	return
}

func NewFoo__SWIG_2(arg1 string) (_swig_ret Foo) {
	return _swig_wrap_new_Foo__SWIG_2(arg1)
}

func NewFoo(a ...interface{}) Foo {
	argc := len(a)
	if argc == 0 {
		return NewFoo__SWIG_0()
	}
	if argc == 1 {
		return NewFoo__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return NewFoo__SWIG_1(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo unsafe.Pointer

func _swig_wrap_delete_Foo(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo, _swig_p)
	return
}

func DeleteFoo(arg1 Foo) {
	_swig_wrap_delete_Foo(arg1.Swigcptr())
}

var _wrap_Foo_test unsafe.Pointer

func _swig_wrap_Foo_test(base SwigcptrFoo, _ string) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_test, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Test(arg2 string) (_swig_ret string) {
	return _swig_wrap_Foo_test(arg1, arg2)
}

var _wrap_Foo_statictest__SWIG_0 unsafe.Pointer

func FooStatictest__SWIG_0(arg1 string, arg2 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Foo_statictest__SWIG_0, _swig_p)
	return
}
var _wrap_Foo_statictest__SWIG_1 unsafe.Pointer

func FooStatictest__SWIG_1(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Foo_statictest__SWIG_1, _swig_p)
	return
}
func FooStatictest(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return FooStatictest__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return FooStatictest__SWIG_0(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

type Foo interface {
	Swigcptr() uintptr
	SwigIsFoo()
	SetStr(arg2 string)
	GetStr() (_swig_ret string)
	Test(arg2 string) (_swig_ret string)
}

var _wrap_test_plenty__SWIG_0 unsafe.Pointer

func Test_plenty__SWIG_0(arg1 string, arg2 int, arg3 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test_plenty__SWIG_0, _swig_p)
	return
}
var _wrap_test_plenty__SWIG_1 unsafe.Pointer

func Test_plenty__SWIG_1(arg1 string, arg2 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test_plenty__SWIG_1, _swig_p)
	return
}
var _wrap_test_plenty__SWIG_2 unsafe.Pointer

func Test_plenty__SWIG_2(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test_plenty__SWIG_2, _swig_p)
	return
}
func Test_plenty(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		return Test_plenty__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return Test_plenty__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return Test_plenty__SWIG_0(a[0].(string), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

