/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../constructor_copy.i

package constructor_copy

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrFoo1 uintptr

func (p SwigcptrFoo1) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo1) SwigIsFoo1() {
}

var _wrap_Foo1_x_set unsafe.Pointer

func _swig_wrap_Foo1_x_set(base SwigcptrFoo1, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo1_x_set, _swig_p)
	return
}

func (arg1 SwigcptrFoo1) SetX(arg2 int) {
	_swig_wrap_Foo1_x_set(arg1, arg2)
}

var _wrap_Foo1_x_get unsafe.Pointer

func _swig_wrap_Foo1_x_get(base SwigcptrFoo1) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo1_x_get, _swig_p)
	return
}

func (arg1 SwigcptrFoo1) GetX() (_swig_ret int) {
	return _swig_wrap_Foo1_x_get(arg1)
}

var _wrap_new_Foo1__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo1__SWIG_0(base int) (_ SwigcptrFoo1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo1__SWIG_0, _swig_p)
	return
}

func NewFoo1__SWIG_0(arg1 int) (_swig_ret Foo1) {
	return _swig_wrap_new_Foo1__SWIG_0(arg1)
}

var _wrap_new_Foo1__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo1__SWIG_1() (base SwigcptrFoo1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo1__SWIG_1, _swig_p)
	return
}

func NewFoo1__SWIG_1() (_swig_ret Foo1) {
	return _swig_wrap_new_Foo1__SWIG_1()
}

var _wrap_new_Foo1__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Foo1__SWIG_2(base uintptr) (_ SwigcptrFoo1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo1__SWIG_2, _swig_p)
	return
}

func NewFoo1__SWIG_2(arg1 Foo1) (_swig_ret Foo1) {
	return _swig_wrap_new_Foo1__SWIG_2(arg1.Swigcptr())
}

func NewFoo1(a ...interface{}) Foo1 {
	argc := len(a)
	if argc == 0 {
		return NewFoo1__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo1); !ok {
			goto check_2
		}
		return NewFoo1__SWIG_2(a[0].(Foo1))
	}
check_2:
	if argc == 1 {
		return NewFoo1__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo1 unsafe.Pointer

func _swig_wrap_delete_Foo1(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo1, _swig_p)
	return
}

func DeleteFoo1(arg1 Foo1) {
	_swig_wrap_delete_Foo1(arg1.Swigcptr())
}

type Foo1 interface {
	Swigcptr() uintptr
	SwigIsFoo1()
	SetX(arg2 int)
	GetX() (_swig_ret int)
}

type SwigcptrFoo2 uintptr

func (p SwigcptrFoo2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo2) SwigIsFoo2() {
}

var _wrap_new_Foo2__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo2__SWIG_0() (base SwigcptrFoo2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo2__SWIG_0, _swig_p)
	return
}

func NewFoo2__SWIG_0() (_swig_ret Foo2) {
	return _swig_wrap_new_Foo2__SWIG_0()
}

var _wrap_new_Foo2__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo2__SWIG_1(base uintptr) (_ SwigcptrFoo2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo2__SWIG_1, _swig_p)
	return
}

func NewFoo2__SWIG_1(arg1 Foo2) (_swig_ret Foo2) {
	return _swig_wrap_new_Foo2__SWIG_1(arg1.Swigcptr())
}

func NewFoo2(a ...interface{}) Foo2 {
	argc := len(a)
	if argc == 0 {
		return NewFoo2__SWIG_0()
	}
	if argc == 1 {
		return NewFoo2__SWIG_1(a[0].(Foo2))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo2 unsafe.Pointer

func _swig_wrap_delete_Foo2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo2, _swig_p)
	return
}

func DeleteFoo2(arg1 Foo2) {
	_swig_wrap_delete_Foo2(arg1.Swigcptr())
}

type Foo2 interface {
	Swigcptr() uintptr
	SwigIsFoo2()
}

type SwigcptrFoo3 uintptr

func (p SwigcptrFoo3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo3) SwigIsFoo3() {
}

var _wrap_new_Foo3__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo3__SWIG_0() (base SwigcptrFoo3) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo3__SWIG_0, _swig_p)
	return
}

func NewFoo3__SWIG_0() (_swig_ret Foo3) {
	return _swig_wrap_new_Foo3__SWIG_0()
}

var _wrap_new_Foo3__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo3__SWIG_1(base uintptr) (_ SwigcptrFoo3) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo3__SWIG_1, _swig_p)
	return
}

func NewFoo3__SWIG_1(arg1 Foo3) (_swig_ret Foo3) {
	return _swig_wrap_new_Foo3__SWIG_1(arg1.Swigcptr())
}

func NewFoo3(a ...interface{}) Foo3 {
	argc := len(a)
	if argc == 0 {
		return NewFoo3__SWIG_0()
	}
	if argc == 1 {
		return NewFoo3__SWIG_1(a[0].(Foo3))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo3 unsafe.Pointer

func _swig_wrap_delete_Foo3(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo3, _swig_p)
	return
}

func DeleteFoo3(arg1 Foo3) {
	_swig_wrap_delete_Foo3(arg1.Swigcptr())
}

type Foo3 interface {
	Swigcptr() uintptr
	SwigIsFoo3()
}

type SwigcptrFoo4 uintptr

func (p SwigcptrFoo4) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo4) SwigIsFoo4() {
}

var _wrap_new_Foo4 unsafe.Pointer

func _swig_wrap_new_Foo4() (base SwigcptrFoo4) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo4, _swig_p)
	return
}

func NewFoo4() (_swig_ret Foo4) {
	return _swig_wrap_new_Foo4()
}

var _wrap_delete_Foo4 unsafe.Pointer

func _swig_wrap_delete_Foo4(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo4, _swig_p)
	return
}

func DeleteFoo4(arg1 Foo4) {
	_swig_wrap_delete_Foo4(arg1.Swigcptr())
}

type Foo4 interface {
	Swigcptr() uintptr
	SwigIsFoo4()
}

type SwigcptrFoo4a uintptr

func (p SwigcptrFoo4a) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo4a) SwigIsFoo4a() {
}

var _wrap_new_Foo4a unsafe.Pointer

func _swig_wrap_new_Foo4a() (base SwigcptrFoo4a) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo4a, _swig_p)
	return
}

func NewFoo4a() (_swig_ret Foo4a) {
	return _swig_wrap_new_Foo4a()
}

var _wrap_delete_Foo4a unsafe.Pointer

func _swig_wrap_delete_Foo4a(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo4a, _swig_p)
	return
}

func DeleteFoo4a(arg1 Foo4a) {
	_swig_wrap_delete_Foo4a(arg1.Swigcptr())
}

type Foo4a interface {
	Swigcptr() uintptr
	SwigIsFoo4a()
}

type SwigcptrFoo5 uintptr

func (p SwigcptrFoo5) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo5) SwigIsFoo5() {
}

var _wrap_new_Foo5__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo5__SWIG_0() (base SwigcptrFoo5) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo5__SWIG_0, _swig_p)
	return
}

func NewFoo5__SWIG_0() (_swig_ret Foo5) {
	return _swig_wrap_new_Foo5__SWIG_0()
}

var _wrap_new_Foo5__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo5__SWIG_1(base uintptr) (_ SwigcptrFoo5) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo5__SWIG_1, _swig_p)
	return
}

func NewFoo5__SWIG_1(arg1 Foo5) (_swig_ret Foo5) {
	return _swig_wrap_new_Foo5__SWIG_1(arg1.Swigcptr())
}

func NewFoo5(a ...interface{}) Foo5 {
	argc := len(a)
	if argc == 0 {
		return NewFoo5__SWIG_0()
	}
	if argc == 1 {
		return NewFoo5__SWIG_1(a[0].(Foo5))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo5 unsafe.Pointer

func _swig_wrap_delete_Foo5(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo5, _swig_p)
	return
}

func DeleteFoo5(arg1 Foo5) {
	_swig_wrap_delete_Foo5(arg1.Swigcptr())
}

func (p SwigcptrFoo5) SwigIsFoo4() {
}

func (p SwigcptrFoo5) SwigGetFoo4() Foo4 {
	return SwigcptrFoo4(p.Swigcptr())
}

type Foo5 interface {
	Swigcptr() uintptr
	SwigIsFoo5()
	SwigIsFoo4()
	SwigGetFoo4() Foo4
}

type SwigcptrFoo6 uintptr

func (p SwigcptrFoo6) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo6) SwigIsFoo6() {
}

var _wrap_new_Foo6 unsafe.Pointer

func _swig_wrap_new_Foo6(base uintptr) (_ SwigcptrFoo6) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo6, _swig_p)
	return
}

func NewFoo6(arg1 Foo6) (_swig_ret Foo6) {
	return _swig_wrap_new_Foo6(arg1.Swigcptr())
}

var _wrap_delete_Foo6 unsafe.Pointer

func _swig_wrap_delete_Foo6(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo6, _swig_p)
	return
}

func DeleteFoo6(arg1 Foo6) {
	_swig_wrap_delete_Foo6(arg1.Swigcptr())
}

func (p SwigcptrFoo6) SwigIsFoo4() {
}

func (p SwigcptrFoo6) SwigGetFoo4() Foo4 {
	return SwigcptrFoo4(p.Swigcptr())
}

type Foo6 interface {
	Swigcptr() uintptr
	SwigIsFoo6()
	SwigIsFoo4()
	SwigGetFoo4() Foo4
}

type SwigcptrFoo7 uintptr

func (p SwigcptrFoo7) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo7) SwigIsFoo7() {
}

var _wrap_new_Foo7__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo7__SWIG_0() (base SwigcptrFoo7) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo7__SWIG_0, _swig_p)
	return
}

func NewFoo7__SWIG_0() (_swig_ret Foo7) {
	return _swig_wrap_new_Foo7__SWIG_0()
}

var _wrap_new_Foo7__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo7__SWIG_1(base uintptr) (_ SwigcptrFoo7) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo7__SWIG_1, _swig_p)
	return
}

func NewFoo7__SWIG_1(arg1 Foo7) (_swig_ret Foo7) {
	return _swig_wrap_new_Foo7__SWIG_1(arg1.Swigcptr())
}

func NewFoo7(a ...interface{}) Foo7 {
	argc := len(a)
	if argc == 0 {
		return NewFoo7__SWIG_0()
	}
	if argc == 1 {
		return NewFoo7__SWIG_1(a[0].(Foo7))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo7 unsafe.Pointer

func _swig_wrap_delete_Foo7(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo7, _swig_p)
	return
}

func DeleteFoo7(arg1 Foo7) {
	_swig_wrap_delete_Foo7(arg1.Swigcptr())
}

func (p SwigcptrFoo7) SwigIsFoo5() {
}

func (p SwigcptrFoo7) SwigGetFoo5() Foo5 {
	return SwigcptrFoo5(p.Swigcptr())
}

func (p SwigcptrFoo7) SwigIsFoo4() {
}

func (p SwigcptrFoo7) SwigGetFoo4() Foo4 {
	return SwigcptrFoo4(p.Swigcptr())
}

type Foo7 interface {
	Swigcptr() uintptr
	SwigIsFoo7()
	SwigIsFoo5()
	SwigGetFoo5() Foo5
	SwigIsFoo4()
	SwigGetFoo4() Foo4
}

type SwigcptrFoo8 uintptr

func (p SwigcptrFoo8) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo8) SwigIsFoo8() {
}

var _wrap_new_Foo8 unsafe.Pointer

func _swig_wrap_new_Foo8() (base SwigcptrFoo8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo8, _swig_p)
	return
}

func NewFoo8() (_swig_ret Foo8) {
	return _swig_wrap_new_Foo8()
}

var _wrap_delete_Foo8 unsafe.Pointer

func _swig_wrap_delete_Foo8(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo8, _swig_p)
	return
}

func DeleteFoo8(arg1 Foo8) {
	_swig_wrap_delete_Foo8(arg1.Swigcptr())
}

type Foo8 interface {
	Swigcptr() uintptr
	SwigIsFoo8()
}

type SwigcptrBari uintptr

func (p SwigcptrBari) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBari) SwigIsBari() {
}

var _wrap_Bari_x_set unsafe.Pointer

func _swig_wrap_Bari_x_set(base SwigcptrBari, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bari_x_set, _swig_p)
	return
}

func (arg1 SwigcptrBari) SetX(arg2 int) {
	_swig_wrap_Bari_x_set(arg1, arg2)
}

var _wrap_Bari_x_get unsafe.Pointer

func _swig_wrap_Bari_x_get(base SwigcptrBari) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bari_x_get, _swig_p)
	return
}

func (arg1 SwigcptrBari) GetX() (_swig_ret int) {
	return _swig_wrap_Bari_x_get(arg1)
}

var _wrap_new_Bari__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Bari__SWIG_0(base int) (_ SwigcptrBari) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bari__SWIG_0, _swig_p)
	return
}

func NewBari__SWIG_0(arg1 int) (_swig_ret Bari) {
	return _swig_wrap_new_Bari__SWIG_0(arg1)
}

var _wrap_new_Bari__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Bari__SWIG_1() (base SwigcptrBari) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bari__SWIG_1, _swig_p)
	return
}

func NewBari__SWIG_1() (_swig_ret Bari) {
	return _swig_wrap_new_Bari__SWIG_1()
}

var _wrap_new_Bari__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Bari__SWIG_2(base uintptr) (_ SwigcptrBari) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bari__SWIG_2, _swig_p)
	return
}

func NewBari__SWIG_2(arg1 Bari) (_swig_ret Bari) {
	return _swig_wrap_new_Bari__SWIG_2(arg1.Swigcptr())
}

func NewBari(a ...interface{}) Bari {
	argc := len(a)
	if argc == 0 {
		return NewBari__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(Bari); !ok {
			goto check_2
		}
		return NewBari__SWIG_2(a[0].(Bari))
	}
check_2:
	if argc == 1 {
		return NewBari__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Bari unsafe.Pointer

func _swig_wrap_delete_Bari(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Bari, _swig_p)
	return
}

func DeleteBari(arg1 Bari) {
	_swig_wrap_delete_Bari(arg1.Swigcptr())
}

type Bari interface {
	Swigcptr() uintptr
	SwigIsBari()
	SetX(arg2 int)
	GetX() (_swig_ret int)
}

type SwigcptrBard uintptr

func (p SwigcptrBard) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBard) SwigIsBard() {
}

var _wrap_Bard_x_set unsafe.Pointer

func _swig_wrap_Bard_x_set(base SwigcptrBard, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bard_x_set, _swig_p)
	return
}

func (arg1 SwigcptrBard) SetX(arg2 int) {
	_swig_wrap_Bard_x_set(arg1, arg2)
}

var _wrap_Bard_x_get unsafe.Pointer

func _swig_wrap_Bard_x_get(base SwigcptrBard) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bard_x_get, _swig_p)
	return
}

func (arg1 SwigcptrBard) GetX() (_swig_ret int) {
	return _swig_wrap_Bard_x_get(arg1)
}

var _wrap_new_Bard__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Bard__SWIG_0(base int) (_ SwigcptrBard) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bard__SWIG_0, _swig_p)
	return
}

func NewBard__SWIG_0(arg1 int) (_swig_ret Bard) {
	return _swig_wrap_new_Bard__SWIG_0(arg1)
}

var _wrap_new_Bard__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Bard__SWIG_1() (base SwigcptrBard) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bard__SWIG_1, _swig_p)
	return
}

func NewBard__SWIG_1() (_swig_ret Bard) {
	return _swig_wrap_new_Bard__SWIG_1()
}

func NewBard(a ...interface{}) Bard {
	argc := len(a)
	if argc == 0 {
		return NewBard__SWIG_1()
	}
	if argc == 1 {
		return NewBard__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Bard unsafe.Pointer

func _swig_wrap_delete_Bard(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Bard, _swig_p)
	return
}

func DeleteBard(arg1 Bard) {
	_swig_wrap_delete_Bard(arg1.Swigcptr())
}

type Bard interface {
	Swigcptr() uintptr
	SwigIsBard()
	SetX(arg2 int)
	GetX() (_swig_ret int)
}

type SwigcptrABC_Libor_ModelUtils uintptr

func (p SwigcptrABC_Libor_ModelUtils) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrABC_Libor_ModelUtils) SwigIsABC_Libor_ModelUtils() {
}

var _wrap_new_ABC_Libor_ModelUtils__SWIG_0 unsafe.Pointer

func _swig_wrap_new_ABC_Libor_ModelUtils__SWIG_0() (base SwigcptrABC_Libor_ModelUtils) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ABC_Libor_ModelUtils__SWIG_0, _swig_p)
	return
}

func NewABC_Libor_ModelUtils__SWIG_0() (_swig_ret ABC_Libor_ModelUtils) {
	return _swig_wrap_new_ABC_Libor_ModelUtils__SWIG_0()
}

var _wrap_new_ABC_Libor_ModelUtils__SWIG_1 unsafe.Pointer

func _swig_wrap_new_ABC_Libor_ModelUtils__SWIG_1(base uintptr) (_ SwigcptrABC_Libor_ModelUtils) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ABC_Libor_ModelUtils__SWIG_1, _swig_p)
	return
}

func NewABC_Libor_ModelUtils__SWIG_1(arg1 ABC_Libor_ModelUtils) (_swig_ret ABC_Libor_ModelUtils) {
	return _swig_wrap_new_ABC_Libor_ModelUtils__SWIG_1(arg1.Swigcptr())
}

func NewABC_Libor_ModelUtils(a ...interface{}) ABC_Libor_ModelUtils {
	argc := len(a)
	if argc == 0 {
		return NewABC_Libor_ModelUtils__SWIG_0()
	}
	if argc == 1 {
		return NewABC_Libor_ModelUtils__SWIG_1(a[0].(ABC_Libor_ModelUtils))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_ABC_Libor_ModelUtils unsafe.Pointer

func _swig_wrap_delete_ABC_Libor_ModelUtils(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ABC_Libor_ModelUtils, _swig_p)
	return
}

func DeleteABC_Libor_ModelUtils(arg1 ABC_Libor_ModelUtils) {
	_swig_wrap_delete_ABC_Libor_ModelUtils(arg1.Swigcptr())
}

type ABC_Libor_ModelUtils interface {
	Swigcptr() uintptr
	SwigIsABC_Libor_ModelUtils()
}

type SwigcptrModelUtils_i uintptr

func (p SwigcptrModelUtils_i) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrModelUtils_i) SwigIsModelUtils_i() {
}

var _wrap_new_ModelUtils_i__SWIG_0 unsafe.Pointer

func _swig_wrap_new_ModelUtils_i__SWIG_0() (base SwigcptrModelUtils_i) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ModelUtils_i__SWIG_0, _swig_p)
	return
}

func NewModelUtils_i__SWIG_0() (_swig_ret ModelUtils_i) {
	return _swig_wrap_new_ModelUtils_i__SWIG_0()
}

var _wrap_new_ModelUtils_i__SWIG_1 unsafe.Pointer

func _swig_wrap_new_ModelUtils_i__SWIG_1(base uintptr) (_ SwigcptrModelUtils_i) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ModelUtils_i__SWIG_1, _swig_p)
	return
}

func NewModelUtils_i__SWIG_1(arg1 ModelUtils_i) (_swig_ret ModelUtils_i) {
	return _swig_wrap_new_ModelUtils_i__SWIG_1(arg1.Swigcptr())
}

func NewModelUtils_i(a ...interface{}) ModelUtils_i {
	argc := len(a)
	if argc == 0 {
		return NewModelUtils_i__SWIG_0()
	}
	if argc == 1 {
		return NewModelUtils_i__SWIG_1(a[0].(ModelUtils_i))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_ModelUtils_i unsafe.Pointer

func _swig_wrap_delete_ModelUtils_i(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ModelUtils_i, _swig_p)
	return
}

func DeleteModelUtils_i(arg1 ModelUtils_i) {
	_swig_wrap_delete_ModelUtils_i(arg1.Swigcptr())
}

type ModelUtils_i interface {
	Swigcptr() uintptr
	SwigIsModelUtils_i()
}

type SwigcptrSpace1Space2_TotalReturnSwap uintptr

func (p SwigcptrSpace1Space2_TotalReturnSwap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSpace1Space2_TotalReturnSwap) SwigIsSpace1Space2_TotalReturnSwap() {
}

var _wrap_new_Space1Space2_TotalReturnSwap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Space1Space2_TotalReturnSwap__SWIG_0() (base SwigcptrSpace1Space2_TotalReturnSwap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Space1Space2_TotalReturnSwap__SWIG_0, _swig_p)
	return
}

func NewSpace1Space2_TotalReturnSwap__SWIG_0() (_swig_ret Space1Space2_TotalReturnSwap) {
	return _swig_wrap_new_Space1Space2_TotalReturnSwap__SWIG_0()
}

var _wrap_new_Space1Space2_TotalReturnSwap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Space1Space2_TotalReturnSwap__SWIG_1(base uintptr) (_ SwigcptrSpace1Space2_TotalReturnSwap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Space1Space2_TotalReturnSwap__SWIG_1, _swig_p)
	return
}

func NewSpace1Space2_TotalReturnSwap__SWIG_1(arg1 Space1Space2_TotalReturnSwap) (_swig_ret Space1Space2_TotalReturnSwap) {
	return _swig_wrap_new_Space1Space2_TotalReturnSwap__SWIG_1(arg1.Swigcptr())
}

func NewSpace1Space2_TotalReturnSwap(a ...interface{}) Space1Space2_TotalReturnSwap {
	argc := len(a)
	if argc == 0 {
		return NewSpace1Space2_TotalReturnSwap__SWIG_0()
	}
	if argc == 1 {
		return NewSpace1Space2_TotalReturnSwap__SWIG_1(a[0].(Space1Space2_TotalReturnSwap))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Space1Space2_TotalReturnSwap unsafe.Pointer

func _swig_wrap_delete_Space1Space2_TotalReturnSwap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Space1Space2_TotalReturnSwap, _swig_p)
	return
}

func DeleteSpace1Space2_TotalReturnSwap(arg1 Space1Space2_TotalReturnSwap) {
	_swig_wrap_delete_Space1Space2_TotalReturnSwap(arg1.Swigcptr())
}

type Space1Space2_TotalReturnSwap interface {
	Swigcptr() uintptr
	SwigIsSpace1Space2_TotalReturnSwap()
}

type SwigcptrTotal_i uintptr

func (p SwigcptrTotal_i) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTotal_i) SwigIsTotal_i() {
}

var _wrap_new_Total_i__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Total_i__SWIG_0() (base SwigcptrTotal_i) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Total_i__SWIG_0, _swig_p)
	return
}

func NewTotal_i__SWIG_0() (_swig_ret Total_i) {
	return _swig_wrap_new_Total_i__SWIG_0()
}

var _wrap_new_Total_i__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Total_i__SWIG_1(base uintptr) (_ SwigcptrTotal_i) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Total_i__SWIG_1, _swig_p)
	return
}

func NewTotal_i__SWIG_1(arg1 Total_i) (_swig_ret Total_i) {
	return _swig_wrap_new_Total_i__SWIG_1(arg1.Swigcptr())
}

func NewTotal_i(a ...interface{}) Total_i {
	argc := len(a)
	if argc == 0 {
		return NewTotal_i__SWIG_0()
	}
	if argc == 1 {
		return NewTotal_i__SWIG_1(a[0].(Total_i))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Total_i unsafe.Pointer

func _swig_wrap_delete_Total_i(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Total_i, _swig_p)
	return
}

func DeleteTotal_i(arg1 Total_i) {
	_swig_wrap_delete_Total_i(arg1.Swigcptr())
}

type Total_i interface {
	Swigcptr() uintptr
	SwigIsTotal_i()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

