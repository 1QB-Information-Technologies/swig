/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_basic.i

package template_basic

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_maxint unsafe.Pointer

func Maxint(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maxint, _swig_p)
	return
}
var _wrap_maxdouble unsafe.Pointer

func Maxdouble(arg1 float64, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maxdouble, _swig_p)
	return
}
type SwigcptrVecint uintptr

func (p SwigcptrVecint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVecint) SwigIsVecint() {
}

var _wrap_new_vecint unsafe.Pointer

func _swig_wrap_new_vecint(base int) (_ SwigcptrVecint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_vecint, _swig_p)
	return
}

func NewVecint(arg1 int) (_swig_ret Vecint) {
	return _swig_wrap_new_vecint(arg1)
}

var _wrap_vecint_get unsafe.Pointer

func _swig_wrap_vecint_get(base SwigcptrVecint, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecint_get, _swig_p)
	return
}

func (arg1 SwigcptrVecint) Get(arg2 int) (_swig_ret *int) {
	return _swig_wrap_vecint_get(arg1, arg2)
}

var _wrap_vecint_set unsafe.Pointer

func _swig_wrap_vecint_set(base SwigcptrVecint, _ int, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecint_set, _swig_p)
	return
}

func (arg1 SwigcptrVecint) Set(arg2 int, arg3 *int) {
	_swig_wrap_vecint_set(arg1, arg2, arg3)
}

var _wrap_vecint_testconst unsafe.Pointer

func _swig_wrap_vecint_testconst(base SwigcptrVecint, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecint_testconst, _swig_p)
	return
}

func (arg1 SwigcptrVecint) Testconst(arg2 int) {
	_swig_wrap_vecint_testconst(arg1, arg2)
}

var _wrap_delete_vecint unsafe.Pointer

func _swig_wrap_delete_vecint(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_vecint, _swig_p)
	return
}

func DeleteVecint(arg1 Vecint) {
	_swig_wrap_delete_vecint(arg1.Swigcptr())
}

type Vecint interface {
	Swigcptr() uintptr
	SwigIsVecint()
	Get(arg2 int) (_swig_ret *int)
	Set(arg2 int, arg3 *int)
	Testconst(arg2 int)
}

type SwigcptrVecdouble uintptr

func (p SwigcptrVecdouble) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVecdouble) SwigIsVecdouble() {
}

var _wrap_new_vecdouble unsafe.Pointer

func _swig_wrap_new_vecdouble(base int) (_ SwigcptrVecdouble) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_vecdouble, _swig_p)
	return
}

func NewVecdouble(arg1 int) (_swig_ret Vecdouble) {
	return _swig_wrap_new_vecdouble(arg1)
}

var _wrap_vecdouble_get unsafe.Pointer

func _swig_wrap_vecdouble_get(base SwigcptrVecdouble, _ int) (_ *float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecdouble_get, _swig_p)
	return
}

func (arg1 SwigcptrVecdouble) Get(arg2 int) (_swig_ret *float64) {
	return _swig_wrap_vecdouble_get(arg1, arg2)
}

var _wrap_vecdouble_set unsafe.Pointer

func _swig_wrap_vecdouble_set(base SwigcptrVecdouble, _ int, _ *float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecdouble_set, _swig_p)
	return
}

func (arg1 SwigcptrVecdouble) Set(arg2 int, arg3 *float64) {
	_swig_wrap_vecdouble_set(arg1, arg2, arg3)
}

var _wrap_vecdouble_testconst unsafe.Pointer

func _swig_wrap_vecdouble_testconst(base SwigcptrVecdouble, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecdouble_testconst, _swig_p)
	return
}

func (arg1 SwigcptrVecdouble) Testconst(arg2 float64) {
	_swig_wrap_vecdouble_testconst(arg1, arg2)
}

var _wrap_delete_vecdouble unsafe.Pointer

func _swig_wrap_delete_vecdouble(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_vecdouble, _swig_p)
	return
}

func DeleteVecdouble(arg1 Vecdouble) {
	_swig_wrap_delete_vecdouble(arg1.Swigcptr())
}

type Vecdouble interface {
	Swigcptr() uintptr
	SwigIsVecdouble()
	Get(arg2 int) (_swig_ret *float64)
	Set(arg2 int, arg3 *float64)
	Testconst(arg2 float64)
}

var _wrap_maxintp unsafe.Pointer

func Maxintp(arg1 **int, arg2 **int) (_swig_ret **int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maxintp, _swig_p)
	return
}
type SwigcptrVecintp uintptr

func (p SwigcptrVecintp) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVecintp) SwigIsVecintp() {
}

var _wrap_new_vecintp unsafe.Pointer

func _swig_wrap_new_vecintp(base int) (_ SwigcptrVecintp) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_vecintp, _swig_p)
	return
}

func NewVecintp(arg1 int) (_swig_ret Vecintp) {
	return _swig_wrap_new_vecintp(arg1)
}

var _wrap_vecintp_get unsafe.Pointer

func _swig_wrap_vecintp_get(base SwigcptrVecintp, _ int) (_ ***int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecintp_get, _swig_p)
	return
}

func (arg1 SwigcptrVecintp) Get(arg2 int) (_swig_ret ***int) {
	return _swig_wrap_vecintp_get(arg1, arg2)
}

var _wrap_vecintp_set unsafe.Pointer

func _swig_wrap_vecintp_set(base SwigcptrVecintp, _ int, _ ***int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecintp_set, _swig_p)
	return
}

func (arg1 SwigcptrVecintp) Set(arg2 int, arg3 ***int) {
	_swig_wrap_vecintp_set(arg1, arg2, arg3)
}

var _wrap_vecintp_testconst unsafe.Pointer

func _swig_wrap_vecintp_testconst(base SwigcptrVecintp, _ **int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_vecintp_testconst, _swig_p)
	return
}

func (arg1 SwigcptrVecintp) Testconst(arg2 **int) {
	_swig_wrap_vecintp_testconst(arg1, arg2)
}

var _wrap_delete_vecintp unsafe.Pointer

func _swig_wrap_delete_vecintp(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_vecintp, _swig_p)
	return
}

func DeleteVecintp(arg1 Vecintp) {
	_swig_wrap_delete_vecintp(arg1.Swigcptr())
}

type Vecintp interface {
	Swigcptr() uintptr
	SwigIsVecintp()
	Get(arg2 int) (_swig_ret ***int)
	Set(arg2 int, arg3 ***int)
	Testconst(arg2 **int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

