/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_math.i

package li_math

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_cos unsafe.Pointer

func Cos(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_cos, _swig_p)
	return
}
var _wrap_sin unsafe.Pointer

func Sin(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_sin, _swig_p)
	return
}
var _wrap_tan unsafe.Pointer

func Tan(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_tan, _swig_p)
	return
}
var _wrap_acos unsafe.Pointer

func Acos(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_acos, _swig_p)
	return
}
var _wrap_asin unsafe.Pointer

func Asin(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_asin, _swig_p)
	return
}
var _wrap_atan unsafe.Pointer

func Atan(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_atan, _swig_p)
	return
}
var _wrap_atan2 unsafe.Pointer

func Atan2(arg1 float64, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_atan2, _swig_p)
	return
}
var _wrap_cosh unsafe.Pointer

func Cosh(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_cosh, _swig_p)
	return
}
var _wrap_sinh unsafe.Pointer

func Sinh(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_sinh, _swig_p)
	return
}
var _wrap_tanh unsafe.Pointer

func Tanh(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_tanh, _swig_p)
	return
}
var _wrap_exp unsafe.Pointer

func Exp(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_exp, _swig_p)
	return
}
var _wrap_log unsafe.Pointer

func Log(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_log, _swig_p)
	return
}
var _wrap_log10 unsafe.Pointer

func Log10(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_log10, _swig_p)
	return
}
var _wrap_pow unsafe.Pointer

func Pow(arg1 float64, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_pow, _swig_p)
	return
}
var _wrap_sqrt unsafe.Pointer

func Sqrt(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_sqrt, _swig_p)
	return
}
var _wrap_fabs unsafe.Pointer

func Fabs(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fabs, _swig_p)
	return
}
var _wrap_ceil unsafe.Pointer

func Ceil(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ceil, _swig_p)
	return
}
var _wrap_floor unsafe.Pointer

func Floor(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_floor, _swig_p)
	return
}
var _wrap_fmod unsafe.Pointer

func Fmod(arg1 float64, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fmod, _swig_p)
	return
}
const M_E float64 = 2.7182818284590452354
const M_LOG2E float64 = 1.4426950408889634074
const M_LOG10E float64 = 0.43429448190325182765
const M_LN2 float64 = 0.69314718055994530942
const M_LN10 float64 = 2.30258509299404568402
const M_PI float64 = 3.14159265358979323846
const M_PI_2 float64 = 1.57079632679489661923
const M_PI_4 float64 = 0.78539816339744830962
const M_1_PI float64 = 0.31830988618379067154
const M_2_PI float64 = 0.63661977236758134308
const M_2_SQRTPI float64 = 1.12837916709551257390
const M_SQRT2 float64 = 1.41421356237309504880
const M_SQRT1_2 float64 = 0.70710678118654752440

