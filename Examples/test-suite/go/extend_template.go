/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../extend_template.i

package extend_template

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrFoo_0 uintptr

func (p SwigcptrFoo_0) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo_0) SwigIsFoo_0() {
}

var _wrap_Foo_0_test1 unsafe.Pointer

func _swig_wrap_Foo_0_test1(base SwigcptrFoo_0, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_0_test1, _swig_p)
	return
}

func (arg1 SwigcptrFoo_0) Test1(arg2 int) (_swig_ret int) {
	return _swig_wrap_Foo_0_test1(arg1, arg2)
}

var _wrap_Foo_0_test2 unsafe.Pointer

func _swig_wrap_Foo_0_test2(base SwigcptrFoo_0, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_0_test2, _swig_p)
	return
}

func (arg1 SwigcptrFoo_0) Test2(arg2 int) (_swig_ret int) {
	return _swig_wrap_Foo_0_test2(arg1, arg2)
}

var _wrap_new_Foo_0 unsafe.Pointer

func _swig_wrap_new_Foo_0() (base SwigcptrFoo_0) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo_0, _swig_p)
	return
}

func NewFoo_0() (_swig_ret Foo_0) {
	return _swig_wrap_new_Foo_0()
}

var _wrap_delete_Foo_0 unsafe.Pointer

func _swig_wrap_delete_Foo_0(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo_0, _swig_p)
	return
}

func DeleteFoo_0(arg1 Foo_0) {
	_swig_wrap_delete_Foo_0(arg1.Swigcptr())
}

type Foo_0 interface {
	Swigcptr() uintptr
	SwigIsFoo_0()
	Test1(arg2 int) (_swig_ret int)
	Test2(arg2 int) (_swig_ret int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

