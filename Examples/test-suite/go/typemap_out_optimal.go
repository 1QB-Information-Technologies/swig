/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../typemap_out_optimal.i

package typemap_out_optimal

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrXX uintptr

func (p SwigcptrXX) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrXX) SwigIsXX() {
}

var _wrap_new_XX__SWIG_0 unsafe.Pointer

func _swig_wrap_new_XX__SWIG_0() (base SwigcptrXX) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_XX__SWIG_0, _swig_p)
	return
}

func NewXX__SWIG_0() (_swig_ret XX) {
	return _swig_wrap_new_XX__SWIG_0()
}

var _wrap_new_XX__SWIG_1 unsafe.Pointer

func _swig_wrap_new_XX__SWIG_1(base int) (_ SwigcptrXX) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_XX__SWIG_1, _swig_p)
	return
}

func NewXX__SWIG_1(arg1 int) (_swig_ret XX) {
	return _swig_wrap_new_XX__SWIG_1(arg1)
}

var _wrap_new_XX__SWIG_2 unsafe.Pointer

func _swig_wrap_new_XX__SWIG_2(base uintptr) (_ SwigcptrXX) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_XX__SWIG_2, _swig_p)
	return
}

func NewXX__SWIG_2(arg1 XX) (_swig_ret XX) {
	return _swig_wrap_new_XX__SWIG_2(arg1.Swigcptr())
}

func NewXX(a ...interface{}) XX {
	argc := len(a)
	if argc == 0 {
		return NewXX__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(XX); !ok {
			goto check_2
		}
		return NewXX__SWIG_2(a[0].(XX))
	}
check_2:
	if argc == 1 {
		return NewXX__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_XX unsafe.Pointer

func _swig_wrap_delete_XX(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_XX, _swig_p)
	return
}

func DeleteXX(arg1 XX) {
	_swig_wrap_delete_XX(arg1.Swigcptr())
}

var _wrap_XX_create unsafe.Pointer

func _swig_wrap_XX_create() (base SwigcptrXX) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_XX_create, _swig_p)
	return
}

func XXCreate() (_swig_ret XX) {
	return _swig_wrap_XX_create()
}

var _wrap_XX_debug_set unsafe.Pointer

func _swig_wrap_XX_debug_set(base bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_XX_debug_set, _swig_p)
	return
}

func SetXXDebug(arg1 bool) {
	_swig_wrap_XX_debug_set(arg1)
}

var _wrap_XX_debug_get unsafe.Pointer

func GetXXDebug() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_XX_debug_get, _swig_p)
	return
}
type XX interface {
	Swigcptr() uintptr
	SwigIsXX()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

