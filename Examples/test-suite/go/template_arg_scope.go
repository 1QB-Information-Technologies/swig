/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_arg_scope.i

package template_arg_scope

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrBar uintptr

func (p SwigcptrBar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBar) SwigIsBar() {
}

var _wrap_new_Bar unsafe.Pointer

func _swig_wrap_new_Bar() (base SwigcptrBar) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bar, _swig_p)
	return
}

func NewBar() (_swig_ret Bar) {
	return _swig_wrap_new_Bar()
}

var _wrap_Bar_spam unsafe.Pointer

func _swig_wrap_Bar_spam(base SwigcptrBar, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_spam, _swig_p)
	return
}

func (arg1 SwigcptrBar) Spam(arg2 Foo_Sl_Bar_Sg_) {
	_swig_wrap_Bar_spam(arg1, arg2.Swigcptr())
}

var _wrap_delete_Bar unsafe.Pointer

func _swig_wrap_delete_Bar(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Bar, _swig_p)
	return
}

func DeleteBar(arg1 Bar) {
	_swig_wrap_delete_Bar(arg1.Swigcptr())
}

type Bar interface {
	Swigcptr() uintptr
	SwigIsBar()
	Spam(arg2 Foo_Sl_Bar_Sg_)
}


type SwigcptrFoo_Sl_Bar_Sg_ uintptr
type Foo_Sl_Bar_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrFoo_Sl_Bar_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

