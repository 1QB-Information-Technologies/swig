/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../funcptr_cpp.i

package funcptr_cpp

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_addByValue unsafe.Pointer

func AddByValue(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_addByValue, _swig_p)
	return
}
var _wrap_addByPointer unsafe.Pointer

func AddByPointer(arg1 int, arg2 int) (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_addByPointer, _swig_p)
	return
}
var _wrap_addByReference unsafe.Pointer

func AddByReference(arg1 int, arg2 int) (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_addByReference, _swig_p)
	return
}
var _wrap_call1 unsafe.Pointer

func Call1(arg1 _swig_fnptr, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_call1, _swig_p)
	return
}
var _wrap_call2 unsafe.Pointer

func Call2(arg1 _swig_fnptr, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_call2, _swig_p)
	return
}
var _wrap_call3 unsafe.Pointer

func Call3(arg1 _swig_fnptr, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_call3, _swig_p)
	return
}
var _wrap_ADD_BY_VALUE unsafe.Pointer

func _swig_getADD_BY_VALUE() (_swig_ret _swig_fnptr) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_ADD_BY_VALUE, _swig_p)
	return
}
var ADD_BY_VALUE _swig_fnptr = _swig_getADD_BY_VALUE()
var _wrap_ADD_BY_POINTER unsafe.Pointer

func _swig_getADD_BY_POINTER() (_swig_ret _swig_fnptr) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_ADD_BY_POINTER, _swig_p)
	return
}
var ADD_BY_POINTER _swig_fnptr = _swig_getADD_BY_POINTER()
var _wrap_ADD_BY_REFERENCE unsafe.Pointer

func _swig_getADD_BY_REFERENCE() (_swig_ret _swig_fnptr) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_ADD_BY_REFERENCE, _swig_p)
	return
}
var ADD_BY_REFERENCE _swig_fnptr = _swig_getADD_BY_REFERENCE()
var _wrap_typedef_call1 unsafe.Pointer

func Typedef_call1(arg1 *_swig_fnptr, arg2 *_swig_fnptr) (_swig_ret uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_typedef_call1, _swig_p)
	return
}
var _wrap_typedef_call2 unsafe.Pointer

func Typedef_call2(arg1 *_swig_fnptr, arg2 *_swig_fnptr) (_swig_ret uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_typedef_call2, _swig_p)
	return
}
var _wrap_typedef_call3 unsafe.Pointer

func Typedef_call3(arg1 *_swig_fnptr, arg2 *_swig_fnptr) (_swig_ret uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_typedef_call3, _swig_p)
	return
}

