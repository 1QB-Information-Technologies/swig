/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_std_map.i

package li_std_map

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrMap uintptr

func (p SwigcptrMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMap) SwigIsMap() {
}

var _wrap_map_val_set unsafe.Pointer

func _swig_wrap_map_val_set(base SwigcptrMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_map_val_set, _swig_p)
	return
}

func (arg1 SwigcptrMap) SetVal(arg2 int) {
	_swig_wrap_map_val_set(arg1, arg2)
}

var _wrap_map_val_get unsafe.Pointer

func _swig_wrap_map_val_get(base SwigcptrMap) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_map_val_get, _swig_p)
	return
}

func (arg1 SwigcptrMap) GetVal() (_swig_ret int) {
	return _swig_wrap_map_val_get(arg1)
}

var _wrap_new_map unsafe.Pointer

func _swig_wrap_new_map(base int) (_ SwigcptrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_map, _swig_p)
	return
}

func NewMap(arg1 int) (_swig_ret Map) {
	return _swig_wrap_new_map(arg1)
}

var _wrap_delete_map unsafe.Pointer

func _swig_wrap_delete_map(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_map, _swig_p)
	return
}

func DeleteMap(arg1 Map) {
	_swig_wrap_delete_map(arg1.Swigcptr())
}

type Map interface {
	Swigcptr() uintptr
	SwigIsMap()
	SetVal(arg2 int)
	GetVal() (_swig_ret int)
}

type SwigcptrIntIntMap uintptr

func (p SwigcptrIntIntMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntIntMap) SwigIsIntIntMap() {
}

var _wrap_new_IntIntMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntIntMap__SWIG_0() (base SwigcptrIntIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntIntMap__SWIG_0, _swig_p)
	return
}

func NewIntIntMap__SWIG_0() (_swig_ret IntIntMap) {
	return _swig_wrap_new_IntIntMap__SWIG_0()
}

var _wrap_new_IntIntMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntIntMap__SWIG_1(base uintptr) (_ SwigcptrIntIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntIntMap__SWIG_1, _swig_p)
	return
}

func NewIntIntMap__SWIG_1(arg1 IntIntMap) (_swig_ret IntIntMap) {
	return _swig_wrap_new_IntIntMap__SWIG_1(arg1.Swigcptr())
}

func NewIntIntMap(a ...interface{}) IntIntMap {
	argc := len(a)
	if argc == 0 {
		return NewIntIntMap__SWIG_0()
	}
	if argc == 1 {
		return NewIntIntMap__SWIG_1(a[0].(IntIntMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntIntMap_size unsafe.Pointer

func _swig_wrap_IntIntMap_size(base SwigcptrIntIntMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_size, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Size() (_swig_ret uint) {
	return _swig_wrap_IntIntMap_size(arg1)
}

var _wrap_IntIntMap_empty unsafe.Pointer

func _swig_wrap_IntIntMap_empty(base SwigcptrIntIntMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Empty() (_swig_ret bool) {
	return _swig_wrap_IntIntMap_empty(arg1)
}

var _wrap_IntIntMap_clear unsafe.Pointer

func _swig_wrap_IntIntMap_clear(base SwigcptrIntIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Clear() {
	_swig_wrap_IntIntMap_clear(arg1)
}

var _wrap_IntIntMap_get unsafe.Pointer

func _swig_wrap_IntIntMap_get(base SwigcptrIntIntMap, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_get, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Get(arg2 int) (_swig_ret int) {
	return _swig_wrap_IntIntMap_get(arg1, arg2)
}

var _wrap_IntIntMap_set unsafe.Pointer

func _swig_wrap_IntIntMap_set(base SwigcptrIntIntMap, _ int, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_set, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Set(arg2 int, arg3 int) {
	_swig_wrap_IntIntMap_set(arg1, arg2, arg3)
}

var _wrap_IntIntMap_del unsafe.Pointer

func _swig_wrap_IntIntMap_del(base SwigcptrIntIntMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_del, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Del(arg2 int) {
	_swig_wrap_IntIntMap_del(arg1, arg2)
}

var _wrap_IntIntMap_has_key unsafe.Pointer

func _swig_wrap_IntIntMap_has_key(base SwigcptrIntIntMap, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrIntIntMap) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_IntIntMap_has_key(arg1, arg2)
}

var _wrap_delete_IntIntMap unsafe.Pointer

func _swig_wrap_delete_IntIntMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntIntMap, _swig_p)
	return
}

func DeleteIntIntMap(arg1 IntIntMap) {
	_swig_wrap_delete_IntIntMap(arg1.Swigcptr())
}

type IntIntMap interface {
	Swigcptr() uintptr
	SwigIsIntIntMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret int)
	Set(arg2 int, arg3 int)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrStringIntMap uintptr

func (p SwigcptrStringIntMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringIntMap) SwigIsStringIntMap() {
}

var _wrap_new_StringIntMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StringIntMap__SWIG_0() (base SwigcptrStringIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringIntMap__SWIG_0, _swig_p)
	return
}

func NewStringIntMap__SWIG_0() (_swig_ret StringIntMap) {
	return _swig_wrap_new_StringIntMap__SWIG_0()
}

var _wrap_new_StringIntMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StringIntMap__SWIG_1(base uintptr) (_ SwigcptrStringIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringIntMap__SWIG_1, _swig_p)
	return
}

func NewStringIntMap__SWIG_1(arg1 StringIntMap) (_swig_ret StringIntMap) {
	return _swig_wrap_new_StringIntMap__SWIG_1(arg1.Swigcptr())
}

func NewStringIntMap(a ...interface{}) StringIntMap {
	argc := len(a)
	if argc == 0 {
		return NewStringIntMap__SWIG_0()
	}
	if argc == 1 {
		return NewStringIntMap__SWIG_1(a[0].(StringIntMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_StringIntMap_size unsafe.Pointer

func _swig_wrap_StringIntMap_size(base SwigcptrStringIntMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_size, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Size() (_swig_ret uint) {
	return _swig_wrap_StringIntMap_size(arg1)
}

var _wrap_StringIntMap_empty unsafe.Pointer

func _swig_wrap_StringIntMap_empty(base SwigcptrStringIntMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Empty() (_swig_ret bool) {
	return _swig_wrap_StringIntMap_empty(arg1)
}

var _wrap_StringIntMap_clear unsafe.Pointer

func _swig_wrap_StringIntMap_clear(base SwigcptrStringIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Clear() {
	_swig_wrap_StringIntMap_clear(arg1)
}

var _wrap_StringIntMap_get unsafe.Pointer

func _swig_wrap_StringIntMap_get(base SwigcptrStringIntMap, _ string) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_get, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Get(arg2 string) (_swig_ret int) {
	return _swig_wrap_StringIntMap_get(arg1, arg2)
}

var _wrap_StringIntMap_set unsafe.Pointer

func _swig_wrap_StringIntMap_set(base SwigcptrStringIntMap, _ string, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_set, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Set(arg2 string, arg3 int) {
	_swig_wrap_StringIntMap_set(arg1, arg2, arg3)
}

var _wrap_StringIntMap_del unsafe.Pointer

func _swig_wrap_StringIntMap_del(base SwigcptrStringIntMap, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_del, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Del(arg2 string) {
	_swig_wrap_StringIntMap_del(arg1, arg2)
}

var _wrap_StringIntMap_has_key unsafe.Pointer

func _swig_wrap_StringIntMap_has_key(base SwigcptrStringIntMap, _ string) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrStringIntMap) Has_key(arg2 string) (_swig_ret bool) {
	return _swig_wrap_StringIntMap_has_key(arg1, arg2)
}

var _wrap_delete_StringIntMap unsafe.Pointer

func _swig_wrap_delete_StringIntMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StringIntMap, _swig_p)
	return
}

func DeleteStringIntMap(arg1 StringIntMap) {
	_swig_wrap_delete_StringIntMap(arg1.Swigcptr())
}

type StringIntMap interface {
	Swigcptr() uintptr
	SwigIsStringIntMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret int)
	Set(arg2 string, arg3 int)
	Del(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

var _wrap_valueAverage unsafe.Pointer

func _swig_wrap_valueAverage(base uintptr) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_valueAverage, _swig_p)
	return
}

func ValueAverage(arg1 StringIntMap) (_swig_ret float64) {
	return _swig_wrap_valueAverage(arg1.Swigcptr())
}

var _wrap_stringifyKeys unsafe.Pointer

func _swig_wrap_stringifyKeys(base uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_stringifyKeys, _swig_p)
	return
}

func StringifyKeys(arg1 StringIntMap) (_swig_ret string) {
	return _swig_wrap_stringifyKeys(arg1.Swigcptr())
}

type SwigcptrStruct uintptr

func (p SwigcptrStruct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStruct) SwigIsStruct() {
}

var _wrap_Struct_num_set unsafe.Pointer

func _swig_wrap_Struct_num_set(base SwigcptrStruct, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Struct_num_set, _swig_p)
	return
}

func (arg1 SwigcptrStruct) SetNum(arg2 float64) {
	_swig_wrap_Struct_num_set(arg1, arg2)
}

var _wrap_Struct_num_get unsafe.Pointer

func _swig_wrap_Struct_num_get(base SwigcptrStruct) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Struct_num_get, _swig_p)
	return
}

func (arg1 SwigcptrStruct) GetNum() (_swig_ret float64) {
	return _swig_wrap_Struct_num_get(arg1)
}

var _wrap_new_Struct__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Struct__SWIG_0() (base SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Struct__SWIG_0, _swig_p)
	return
}

func NewStruct__SWIG_0() (_swig_ret Struct) {
	return _swig_wrap_new_Struct__SWIG_0()
}

var _wrap_new_Struct__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Struct__SWIG_1(base float64) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Struct__SWIG_1, _swig_p)
	return
}

func NewStruct__SWIG_1(arg1 float64) (_swig_ret Struct) {
	return _swig_wrap_new_Struct__SWIG_1(arg1)
}

func NewStruct(a ...interface{}) Struct {
	argc := len(a)
	if argc == 0 {
		return NewStruct__SWIG_0()
	}
	if argc == 1 {
		return NewStruct__SWIG_1(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Struct unsafe.Pointer

func _swig_wrap_delete_Struct(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Struct, _swig_p)
	return
}

func DeleteStruct(arg1 Struct) {
	_swig_wrap_delete_Struct(arg1.Swigcptr())
}

type Struct interface {
	Swigcptr() uintptr
	SwigIsStruct()
	SetNum(arg2 float64)
	GetNum() (_swig_ret float64)
}

type SwigcptrIntIntPtrMap uintptr

func (p SwigcptrIntIntPtrMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntIntPtrMap) SwigIsIntIntPtrMap() {
}

var _wrap_new_IntIntPtrMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntIntPtrMap__SWIG_0() (base SwigcptrIntIntPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntIntPtrMap__SWIG_0, _swig_p)
	return
}

func NewIntIntPtrMap__SWIG_0() (_swig_ret IntIntPtrMap) {
	return _swig_wrap_new_IntIntPtrMap__SWIG_0()
}

var _wrap_new_IntIntPtrMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntIntPtrMap__SWIG_1(base uintptr) (_ SwigcptrIntIntPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntIntPtrMap__SWIG_1, _swig_p)
	return
}

func NewIntIntPtrMap__SWIG_1(arg1 IntIntPtrMap) (_swig_ret IntIntPtrMap) {
	return _swig_wrap_new_IntIntPtrMap__SWIG_1(arg1.Swigcptr())
}

func NewIntIntPtrMap(a ...interface{}) IntIntPtrMap {
	argc := len(a)
	if argc == 0 {
		return NewIntIntPtrMap__SWIG_0()
	}
	if argc == 1 {
		return NewIntIntPtrMap__SWIG_1(a[0].(IntIntPtrMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntIntPtrMap_size unsafe.Pointer

func _swig_wrap_IntIntPtrMap_size(base SwigcptrIntIntPtrMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_size, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Size() (_swig_ret uint) {
	return _swig_wrap_IntIntPtrMap_size(arg1)
}

var _wrap_IntIntPtrMap_empty unsafe.Pointer

func _swig_wrap_IntIntPtrMap_empty(base SwigcptrIntIntPtrMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Empty() (_swig_ret bool) {
	return _swig_wrap_IntIntPtrMap_empty(arg1)
}

var _wrap_IntIntPtrMap_clear unsafe.Pointer

func _swig_wrap_IntIntPtrMap_clear(base SwigcptrIntIntPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Clear() {
	_swig_wrap_IntIntPtrMap_clear(arg1)
}

var _wrap_IntIntPtrMap_get unsafe.Pointer

func _swig_wrap_IntIntPtrMap_get(base SwigcptrIntIntPtrMap, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_get, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Get(arg2 int) (_swig_ret *int) {
	return _swig_wrap_IntIntPtrMap_get(arg1, arg2)
}

var _wrap_IntIntPtrMap_set unsafe.Pointer

func _swig_wrap_IntIntPtrMap_set(base SwigcptrIntIntPtrMap, _ int, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_set, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Set(arg2 int, arg3 *int) {
	_swig_wrap_IntIntPtrMap_set(arg1, arg2, arg3)
}

var _wrap_IntIntPtrMap_del unsafe.Pointer

func _swig_wrap_IntIntPtrMap_del(base SwigcptrIntIntPtrMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_del, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Del(arg2 int) {
	_swig_wrap_IntIntPtrMap_del(arg1, arg2)
}

var _wrap_IntIntPtrMap_has_key unsafe.Pointer

func _swig_wrap_IntIntPtrMap_has_key(base SwigcptrIntIntPtrMap, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntIntPtrMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrIntIntPtrMap) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_IntIntPtrMap_has_key(arg1, arg2)
}

var _wrap_delete_IntIntPtrMap unsafe.Pointer

func _swig_wrap_delete_IntIntPtrMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntIntPtrMap, _swig_p)
	return
}

func DeleteIntIntPtrMap(arg1 IntIntPtrMap) {
	_swig_wrap_delete_IntIntPtrMap(arg1.Swigcptr())
}

type IntIntPtrMap interface {
	Swigcptr() uintptr
	SwigIsIntIntPtrMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret *int)
	Set(arg2 int, arg3 *int)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrIntConstIntPtrMap uintptr

func (p SwigcptrIntConstIntPtrMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntConstIntPtrMap) SwigIsIntConstIntPtrMap() {
}

var _wrap_new_IntConstIntPtrMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntConstIntPtrMap__SWIG_0() (base SwigcptrIntConstIntPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntConstIntPtrMap__SWIG_0, _swig_p)
	return
}

func NewIntConstIntPtrMap__SWIG_0() (_swig_ret IntConstIntPtrMap) {
	return _swig_wrap_new_IntConstIntPtrMap__SWIG_0()
}

var _wrap_new_IntConstIntPtrMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntConstIntPtrMap__SWIG_1(base uintptr) (_ SwigcptrIntConstIntPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntConstIntPtrMap__SWIG_1, _swig_p)
	return
}

func NewIntConstIntPtrMap__SWIG_1(arg1 IntConstIntPtrMap) (_swig_ret IntConstIntPtrMap) {
	return _swig_wrap_new_IntConstIntPtrMap__SWIG_1(arg1.Swigcptr())
}

func NewIntConstIntPtrMap(a ...interface{}) IntConstIntPtrMap {
	argc := len(a)
	if argc == 0 {
		return NewIntConstIntPtrMap__SWIG_0()
	}
	if argc == 1 {
		return NewIntConstIntPtrMap__SWIG_1(a[0].(IntConstIntPtrMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntConstIntPtrMap_size unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_size(base SwigcptrIntConstIntPtrMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_size, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Size() (_swig_ret uint) {
	return _swig_wrap_IntConstIntPtrMap_size(arg1)
}

var _wrap_IntConstIntPtrMap_empty unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_empty(base SwigcptrIntConstIntPtrMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Empty() (_swig_ret bool) {
	return _swig_wrap_IntConstIntPtrMap_empty(arg1)
}

var _wrap_IntConstIntPtrMap_clear unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_clear(base SwigcptrIntConstIntPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Clear() {
	_swig_wrap_IntConstIntPtrMap_clear(arg1)
}

var _wrap_IntConstIntPtrMap_get unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_get(base SwigcptrIntConstIntPtrMap, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_get, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Get(arg2 int) (_swig_ret *int) {
	return _swig_wrap_IntConstIntPtrMap_get(arg1, arg2)
}

var _wrap_IntConstIntPtrMap_set unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_set(base SwigcptrIntConstIntPtrMap, _ int, _ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_set, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Set(arg2 int, arg3 *int) {
	_swig_wrap_IntConstIntPtrMap_set(arg1, arg2, arg3)
}

var _wrap_IntConstIntPtrMap_del unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_del(base SwigcptrIntConstIntPtrMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_del, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Del(arg2 int) {
	_swig_wrap_IntConstIntPtrMap_del(arg1, arg2)
}

var _wrap_IntConstIntPtrMap_has_key unsafe.Pointer

func _swig_wrap_IntConstIntPtrMap_has_key(base SwigcptrIntConstIntPtrMap, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntConstIntPtrMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrIntConstIntPtrMap) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_IntConstIntPtrMap_has_key(arg1, arg2)
}

var _wrap_delete_IntConstIntPtrMap unsafe.Pointer

func _swig_wrap_delete_IntConstIntPtrMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntConstIntPtrMap, _swig_p)
	return
}

func DeleteIntConstIntPtrMap(arg1 IntConstIntPtrMap) {
	_swig_wrap_delete_IntConstIntPtrMap(arg1.Swigcptr())
}

type IntConstIntPtrMap interface {
	Swigcptr() uintptr
	SwigIsIntConstIntPtrMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret *int)
	Set(arg2 int, arg3 *int)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrIntStructMap uintptr

func (p SwigcptrIntStructMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntStructMap) SwigIsIntStructMap() {
}

var _wrap_new_IntStructMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntStructMap__SWIG_0() (base SwigcptrIntStructMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntStructMap__SWIG_0, _swig_p)
	return
}

func NewIntStructMap__SWIG_0() (_swig_ret IntStructMap) {
	return _swig_wrap_new_IntStructMap__SWIG_0()
}

var _wrap_new_IntStructMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntStructMap__SWIG_1(base uintptr) (_ SwigcptrIntStructMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntStructMap__SWIG_1, _swig_p)
	return
}

func NewIntStructMap__SWIG_1(arg1 IntStructMap) (_swig_ret IntStructMap) {
	return _swig_wrap_new_IntStructMap__SWIG_1(arg1.Swigcptr())
}

func NewIntStructMap(a ...interface{}) IntStructMap {
	argc := len(a)
	if argc == 0 {
		return NewIntStructMap__SWIG_0()
	}
	if argc == 1 {
		return NewIntStructMap__SWIG_1(a[0].(IntStructMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntStructMap_size unsafe.Pointer

func _swig_wrap_IntStructMap_size(base SwigcptrIntStructMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_size, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Size() (_swig_ret uint) {
	return _swig_wrap_IntStructMap_size(arg1)
}

var _wrap_IntStructMap_empty unsafe.Pointer

func _swig_wrap_IntStructMap_empty(base SwigcptrIntStructMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Empty() (_swig_ret bool) {
	return _swig_wrap_IntStructMap_empty(arg1)
}

var _wrap_IntStructMap_clear unsafe.Pointer

func _swig_wrap_IntStructMap_clear(base SwigcptrIntStructMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Clear() {
	_swig_wrap_IntStructMap_clear(arg1)
}

var _wrap_IntStructMap_get unsafe.Pointer

func _swig_wrap_IntStructMap_get(base SwigcptrIntStructMap, _ int) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_get, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Get(arg2 int) (_swig_ret Struct) {
	return _swig_wrap_IntStructMap_get(arg1, arg2)
}

var _wrap_IntStructMap_set unsafe.Pointer

func _swig_wrap_IntStructMap_set(base SwigcptrIntStructMap, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_set, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Set(arg2 int, arg3 Struct) {
	_swig_wrap_IntStructMap_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_IntStructMap_del unsafe.Pointer

func _swig_wrap_IntStructMap_del(base SwigcptrIntStructMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_del, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Del(arg2 int) {
	_swig_wrap_IntStructMap_del(arg1, arg2)
}

var _wrap_IntStructMap_has_key unsafe.Pointer

func _swig_wrap_IntStructMap_has_key(base SwigcptrIntStructMap, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrIntStructMap) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_IntStructMap_has_key(arg1, arg2)
}

var _wrap_delete_IntStructMap unsafe.Pointer

func _swig_wrap_delete_IntStructMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntStructMap, _swig_p)
	return
}

func DeleteIntStructMap(arg1 IntStructMap) {
	_swig_wrap_delete_IntStructMap(arg1.Swigcptr())
}

type IntStructMap interface {
	Swigcptr() uintptr
	SwigIsIntStructMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret Struct)
	Set(arg2 int, arg3 Struct)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrIntStructPtrMap uintptr

func (p SwigcptrIntStructPtrMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntStructPtrMap) SwigIsIntStructPtrMap() {
}

var _wrap_new_IntStructPtrMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntStructPtrMap__SWIG_0() (base SwigcptrIntStructPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntStructPtrMap__SWIG_0, _swig_p)
	return
}

func NewIntStructPtrMap__SWIG_0() (_swig_ret IntStructPtrMap) {
	return _swig_wrap_new_IntStructPtrMap__SWIG_0()
}

var _wrap_new_IntStructPtrMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntStructPtrMap__SWIG_1(base uintptr) (_ SwigcptrIntStructPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntStructPtrMap__SWIG_1, _swig_p)
	return
}

func NewIntStructPtrMap__SWIG_1(arg1 IntStructPtrMap) (_swig_ret IntStructPtrMap) {
	return _swig_wrap_new_IntStructPtrMap__SWIG_1(arg1.Swigcptr())
}

func NewIntStructPtrMap(a ...interface{}) IntStructPtrMap {
	argc := len(a)
	if argc == 0 {
		return NewIntStructPtrMap__SWIG_0()
	}
	if argc == 1 {
		return NewIntStructPtrMap__SWIG_1(a[0].(IntStructPtrMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntStructPtrMap_size unsafe.Pointer

func _swig_wrap_IntStructPtrMap_size(base SwigcptrIntStructPtrMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_size, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Size() (_swig_ret uint) {
	return _swig_wrap_IntStructPtrMap_size(arg1)
}

var _wrap_IntStructPtrMap_empty unsafe.Pointer

func _swig_wrap_IntStructPtrMap_empty(base SwigcptrIntStructPtrMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Empty() (_swig_ret bool) {
	return _swig_wrap_IntStructPtrMap_empty(arg1)
}

var _wrap_IntStructPtrMap_clear unsafe.Pointer

func _swig_wrap_IntStructPtrMap_clear(base SwigcptrIntStructPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Clear() {
	_swig_wrap_IntStructPtrMap_clear(arg1)
}

var _wrap_IntStructPtrMap_get unsafe.Pointer

func _swig_wrap_IntStructPtrMap_get(base SwigcptrIntStructPtrMap, _ int) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_get, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Get(arg2 int) (_swig_ret Struct) {
	return _swig_wrap_IntStructPtrMap_get(arg1, arg2)
}

var _wrap_IntStructPtrMap_set unsafe.Pointer

func _swig_wrap_IntStructPtrMap_set(base SwigcptrIntStructPtrMap, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_set, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Set(arg2 int, arg3 Struct) {
	_swig_wrap_IntStructPtrMap_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_IntStructPtrMap_del unsafe.Pointer

func _swig_wrap_IntStructPtrMap_del(base SwigcptrIntStructPtrMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_del, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Del(arg2 int) {
	_swig_wrap_IntStructPtrMap_del(arg1, arg2)
}

var _wrap_IntStructPtrMap_has_key unsafe.Pointer

func _swig_wrap_IntStructPtrMap_has_key(base SwigcptrIntStructPtrMap, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructPtrMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrIntStructPtrMap) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_IntStructPtrMap_has_key(arg1, arg2)
}

var _wrap_delete_IntStructPtrMap unsafe.Pointer

func _swig_wrap_delete_IntStructPtrMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntStructPtrMap, _swig_p)
	return
}

func DeleteIntStructPtrMap(arg1 IntStructPtrMap) {
	_swig_wrap_delete_IntStructPtrMap(arg1.Swigcptr())
}

type IntStructPtrMap interface {
	Swigcptr() uintptr
	SwigIsIntStructPtrMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret Struct)
	Set(arg2 int, arg3 Struct)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrIntStructConstPtrMap uintptr

func (p SwigcptrIntStructConstPtrMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntStructConstPtrMap) SwigIsIntStructConstPtrMap() {
}

var _wrap_new_IntStructConstPtrMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_IntStructConstPtrMap__SWIG_0() (base SwigcptrIntStructConstPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntStructConstPtrMap__SWIG_0, _swig_p)
	return
}

func NewIntStructConstPtrMap__SWIG_0() (_swig_ret IntStructConstPtrMap) {
	return _swig_wrap_new_IntStructConstPtrMap__SWIG_0()
}

var _wrap_new_IntStructConstPtrMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_IntStructConstPtrMap__SWIG_1(base uintptr) (_ SwigcptrIntStructConstPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_IntStructConstPtrMap__SWIG_1, _swig_p)
	return
}

func NewIntStructConstPtrMap__SWIG_1(arg1 IntStructConstPtrMap) (_swig_ret IntStructConstPtrMap) {
	return _swig_wrap_new_IntStructConstPtrMap__SWIG_1(arg1.Swigcptr())
}

func NewIntStructConstPtrMap(a ...interface{}) IntStructConstPtrMap {
	argc := len(a)
	if argc == 0 {
		return NewIntStructConstPtrMap__SWIG_0()
	}
	if argc == 1 {
		return NewIntStructConstPtrMap__SWIG_1(a[0].(IntStructConstPtrMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_IntStructConstPtrMap_size unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_size(base SwigcptrIntStructConstPtrMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_size, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Size() (_swig_ret uint) {
	return _swig_wrap_IntStructConstPtrMap_size(arg1)
}

var _wrap_IntStructConstPtrMap_empty unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_empty(base SwigcptrIntStructConstPtrMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Empty() (_swig_ret bool) {
	return _swig_wrap_IntStructConstPtrMap_empty(arg1)
}

var _wrap_IntStructConstPtrMap_clear unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_clear(base SwigcptrIntStructConstPtrMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Clear() {
	_swig_wrap_IntStructConstPtrMap_clear(arg1)
}

var _wrap_IntStructConstPtrMap_get unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_get(base SwigcptrIntStructConstPtrMap, _ int) (_ SwigcptrStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_get, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Get(arg2 int) (_swig_ret Struct) {
	return _swig_wrap_IntStructConstPtrMap_get(arg1, arg2)
}

var _wrap_IntStructConstPtrMap_set unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_set(base SwigcptrIntStructConstPtrMap, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_set, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Set(arg2 int, arg3 Struct) {
	_swig_wrap_IntStructConstPtrMap_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_IntStructConstPtrMap_del unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_del(base SwigcptrIntStructConstPtrMap, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_del, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Del(arg2 int) {
	_swig_wrap_IntStructConstPtrMap_del(arg1, arg2)
}

var _wrap_IntStructConstPtrMap_has_key unsafe.Pointer

func _swig_wrap_IntStructConstPtrMap_has_key(base SwigcptrIntStructConstPtrMap, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_IntStructConstPtrMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrIntStructConstPtrMap) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_IntStructConstPtrMap_has_key(arg1, arg2)
}

var _wrap_delete_IntStructConstPtrMap unsafe.Pointer

func _swig_wrap_delete_IntStructConstPtrMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_IntStructConstPtrMap, _swig_p)
	return
}

func DeleteIntStructConstPtrMap(arg1 IntStructConstPtrMap) {
	_swig_wrap_delete_IntStructConstPtrMap(arg1.Swigcptr())
}

type IntStructConstPtrMap interface {
	Swigcptr() uintptr
	SwigIsIntStructConstPtrMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret Struct)
	Set(arg2 int, arg3 Struct)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrStructPtrIntMap uintptr

func (p SwigcptrStructPtrIntMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStructPtrIntMap) SwigIsStructPtrIntMap() {
}

var _wrap_new_StructPtrIntMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StructPtrIntMap__SWIG_0() (base SwigcptrStructPtrIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructPtrIntMap__SWIG_0, _swig_p)
	return
}

func NewStructPtrIntMap__SWIG_0() (_swig_ret StructPtrIntMap) {
	return _swig_wrap_new_StructPtrIntMap__SWIG_0()
}

var _wrap_new_StructPtrIntMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StructPtrIntMap__SWIG_1(base uintptr) (_ SwigcptrStructPtrIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructPtrIntMap__SWIG_1, _swig_p)
	return
}

func NewStructPtrIntMap__SWIG_1(arg1 StructPtrIntMap) (_swig_ret StructPtrIntMap) {
	return _swig_wrap_new_StructPtrIntMap__SWIG_1(arg1.Swigcptr())
}

func NewStructPtrIntMap(a ...interface{}) StructPtrIntMap {
	argc := len(a)
	if argc == 0 {
		return NewStructPtrIntMap__SWIG_0()
	}
	if argc == 1 {
		return NewStructPtrIntMap__SWIG_1(a[0].(StructPtrIntMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_StructPtrIntMap_size unsafe.Pointer

func _swig_wrap_StructPtrIntMap_size(base SwigcptrStructPtrIntMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_size, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Size() (_swig_ret uint) {
	return _swig_wrap_StructPtrIntMap_size(arg1)
}

var _wrap_StructPtrIntMap_empty unsafe.Pointer

func _swig_wrap_StructPtrIntMap_empty(base SwigcptrStructPtrIntMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Empty() (_swig_ret bool) {
	return _swig_wrap_StructPtrIntMap_empty(arg1)
}

var _wrap_StructPtrIntMap_clear unsafe.Pointer

func _swig_wrap_StructPtrIntMap_clear(base SwigcptrStructPtrIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Clear() {
	_swig_wrap_StructPtrIntMap_clear(arg1)
}

var _wrap_StructPtrIntMap_get unsafe.Pointer

func _swig_wrap_StructPtrIntMap_get(base SwigcptrStructPtrIntMap, _ uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_get, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Get(arg2 Struct) (_swig_ret int) {
	return _swig_wrap_StructPtrIntMap_get(arg1, arg2.Swigcptr())
}

var _wrap_StructPtrIntMap_set unsafe.Pointer

func _swig_wrap_StructPtrIntMap_set(base SwigcptrStructPtrIntMap, _ uintptr, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_set, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Set(arg2 Struct, arg3 int) {
	_swig_wrap_StructPtrIntMap_set(arg1, arg2.Swigcptr(), arg3)
}

var _wrap_StructPtrIntMap_del unsafe.Pointer

func _swig_wrap_StructPtrIntMap_del(base SwigcptrStructPtrIntMap, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_del, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Del(arg2 Struct) {
	_swig_wrap_StructPtrIntMap_del(arg1, arg2.Swigcptr())
}

var _wrap_StructPtrIntMap_has_key unsafe.Pointer

func _swig_wrap_StructPtrIntMap_has_key(base SwigcptrStructPtrIntMap, _ uintptr) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructPtrIntMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrStructPtrIntMap) Has_key(arg2 Struct) (_swig_ret bool) {
	return _swig_wrap_StructPtrIntMap_has_key(arg1, arg2.Swigcptr())
}

var _wrap_delete_StructPtrIntMap unsafe.Pointer

func _swig_wrap_delete_StructPtrIntMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StructPtrIntMap, _swig_p)
	return
}

func DeleteStructPtrIntMap(arg1 StructPtrIntMap) {
	_swig_wrap_delete_StructPtrIntMap(arg1.Swigcptr())
}

type StructPtrIntMap interface {
	Swigcptr() uintptr
	SwigIsStructPtrIntMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 Struct) (_swig_ret int)
	Set(arg2 Struct, arg3 int)
	Del(arg2 Struct)
	Has_key(arg2 Struct) (_swig_ret bool)
}

type SwigcptrStructIntMap uintptr

func (p SwigcptrStructIntMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStructIntMap) SwigIsStructIntMap() {
}

var _wrap_new_StructIntMap__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StructIntMap__SWIG_0() (base SwigcptrStructIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructIntMap__SWIG_0, _swig_p)
	return
}

func NewStructIntMap__SWIG_0() (_swig_ret StructIntMap) {
	return _swig_wrap_new_StructIntMap__SWIG_0()
}

var _wrap_new_StructIntMap__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StructIntMap__SWIG_1(base uintptr) (_ SwigcptrStructIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StructIntMap__SWIG_1, _swig_p)
	return
}

func NewStructIntMap__SWIG_1(arg1 StructIntMap) (_swig_ret StructIntMap) {
	return _swig_wrap_new_StructIntMap__SWIG_1(arg1.Swigcptr())
}

func NewStructIntMap(a ...interface{}) StructIntMap {
	argc := len(a)
	if argc == 0 {
		return NewStructIntMap__SWIG_0()
	}
	if argc == 1 {
		return NewStructIntMap__SWIG_1(a[0].(StructIntMap))
	}
	panic("No match for overloaded function call")
}

var _wrap_StructIntMap_size unsafe.Pointer

func _swig_wrap_StructIntMap_size(base SwigcptrStructIntMap) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_size, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Size() (_swig_ret uint) {
	return _swig_wrap_StructIntMap_size(arg1)
}

var _wrap_StructIntMap_empty unsafe.Pointer

func _swig_wrap_StructIntMap_empty(base SwigcptrStructIntMap) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_empty, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Empty() (_swig_ret bool) {
	return _swig_wrap_StructIntMap_empty(arg1)
}

var _wrap_StructIntMap_clear unsafe.Pointer

func _swig_wrap_StructIntMap_clear(base SwigcptrStructIntMap) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_clear, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Clear() {
	_swig_wrap_StructIntMap_clear(arg1)
}

var _wrap_StructIntMap_get unsafe.Pointer

func _swig_wrap_StructIntMap_get(base SwigcptrStructIntMap, _ uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_get, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Get(arg2 Struct) (_swig_ret int) {
	return _swig_wrap_StructIntMap_get(arg1, arg2.Swigcptr())
}

var _wrap_StructIntMap_set unsafe.Pointer

func _swig_wrap_StructIntMap_set(base SwigcptrStructIntMap, _ uintptr, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_set, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Set(arg2 Struct, arg3 int) {
	_swig_wrap_StructIntMap_set(arg1, arg2.Swigcptr(), arg3)
}

var _wrap_StructIntMap_del unsafe.Pointer

func _swig_wrap_StructIntMap_del(base SwigcptrStructIntMap, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_del, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Del(arg2 Struct) {
	_swig_wrap_StructIntMap_del(arg1, arg2.Swigcptr())
}

var _wrap_StructIntMap_has_key unsafe.Pointer

func _swig_wrap_StructIntMap_has_key(base SwigcptrStructIntMap, _ uintptr) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StructIntMap_has_key, _swig_p)
	return
}

func (arg1 SwigcptrStructIntMap) Has_key(arg2 Struct) (_swig_ret bool) {
	return _swig_wrap_StructIntMap_has_key(arg1, arg2.Swigcptr())
}

var _wrap_delete_StructIntMap unsafe.Pointer

func _swig_wrap_delete_StructIntMap(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StructIntMap, _swig_p)
	return
}

func DeleteStructIntMap(arg1 StructIntMap) {
	_swig_wrap_delete_StructIntMap(arg1.Swigcptr())
}

type StructIntMap interface {
	Swigcptr() uintptr
	SwigIsStructIntMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 Struct) (_swig_ret int)
	Set(arg2 Struct, arg3 int)
	Del(arg2 Struct)
	Has_key(arg2 Struct) (_swig_ret bool)
}

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_A_val_set unsafe.Pointer

func _swig_wrap_A_val_set(base SwigcptrA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_val_set, _swig_p)
	return
}

func (arg1 SwigcptrA) SetVal(arg2 int) {
	_swig_wrap_A_val_set(arg1, arg2)
}

var _wrap_A_val_get unsafe.Pointer

func _swig_wrap_A_val_get(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_val_get, _swig_p)
	return
}

func (arg1 SwigcptrA) GetVal() (_swig_ret int) {
	return _swig_wrap_A_val_get(arg1)
}

var _wrap_new_A__SWIG_0 unsafe.Pointer

func _swig_wrap_new_A__SWIG_0(base int) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_0, _swig_p)
	return
}

func NewA__SWIG_0(arg1 int) (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_0(arg1)
}

var _wrap_new_A__SWIG_1 unsafe.Pointer

func _swig_wrap_new_A__SWIG_1() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_1, _swig_p)
	return
}

func NewA__SWIG_1() (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_1()
}

func NewA(a ...interface{}) A {
	argc := len(a)
	if argc == 0 {
		return NewA__SWIG_1()
	}
	if argc == 1 {
		return NewA__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	SetVal(arg2 int)
	GetVal() (_swig_ret int)
}

type SwigcptrPairii uintptr

func (p SwigcptrPairii) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairii) SwigIsPairii() {
}

var _wrap_new_pairii__SWIG_0 unsafe.Pointer

func _swig_wrap_new_pairii__SWIG_0() (base SwigcptrPairii) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairii__SWIG_0, _swig_p)
	return
}

func NewPairii__SWIG_0() (_swig_ret Pairii) {
	return _swig_wrap_new_pairii__SWIG_0()
}

var _wrap_new_pairii__SWIG_1 unsafe.Pointer

func _swig_wrap_new_pairii__SWIG_1(base int, _ int) (_ SwigcptrPairii) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairii__SWIG_1, _swig_p)
	return
}

func NewPairii__SWIG_1(arg1 int, arg2 int) (_swig_ret Pairii) {
	return _swig_wrap_new_pairii__SWIG_1(arg1, arg2)
}

var _wrap_new_pairii__SWIG_2 unsafe.Pointer

func _swig_wrap_new_pairii__SWIG_2(base uintptr) (_ SwigcptrPairii) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairii__SWIG_2, _swig_p)
	return
}

func NewPairii__SWIG_2(arg1 Pairii) (_swig_ret Pairii) {
	return _swig_wrap_new_pairii__SWIG_2(arg1.Swigcptr())
}

func NewPairii(a ...interface{}) Pairii {
	argc := len(a)
	if argc == 0 {
		return NewPairii__SWIG_0()
	}
	if argc == 1 {
		return NewPairii__SWIG_2(a[0].(Pairii))
	}
	if argc == 2 {
		return NewPairii__SWIG_1(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_pairii_first_set unsafe.Pointer

func _swig_wrap_pairii_first_set(base SwigcptrPairii, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairii_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairii) SetFirst(arg2 int) {
	_swig_wrap_pairii_first_set(arg1, arg2)
}

var _wrap_pairii_first_get unsafe.Pointer

func _swig_wrap_pairii_first_get(base SwigcptrPairii) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairii_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairii) GetFirst() (_swig_ret int) {
	return _swig_wrap_pairii_first_get(arg1)
}

var _wrap_pairii_second_set unsafe.Pointer

func _swig_wrap_pairii_second_set(base SwigcptrPairii, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairii_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairii) SetSecond(arg2 int) {
	_swig_wrap_pairii_second_set(arg1, arg2)
}

var _wrap_pairii_second_get unsafe.Pointer

func _swig_wrap_pairii_second_get(base SwigcptrPairii) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairii_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairii) GetSecond() (_swig_ret int) {
	return _swig_wrap_pairii_second_get(arg1)
}

var _wrap_delete_pairii unsafe.Pointer

func _swig_wrap_delete_pairii(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_pairii, _swig_p)
	return
}

func DeletePairii(arg1 Pairii) {
	_swig_wrap_delete_pairii(arg1.Swigcptr())
}

type Pairii interface {
	Swigcptr() uintptr
	SwigIsPairii()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 int)
	GetSecond() (_swig_ret int)
}

type SwigcptrPairAA uintptr

func (p SwigcptrPairAA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairAA) SwigIsPairAA() {
}

var _wrap_new_pairAA__SWIG_0 unsafe.Pointer

func _swig_wrap_new_pairAA__SWIG_0() (base SwigcptrPairAA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairAA__SWIG_0, _swig_p)
	return
}

func NewPairAA__SWIG_0() (_swig_ret PairAA) {
	return _swig_wrap_new_pairAA__SWIG_0()
}

var _wrap_new_pairAA__SWIG_1 unsafe.Pointer

func _swig_wrap_new_pairAA__SWIG_1(base int, _ uintptr) (_ SwigcptrPairAA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairAA__SWIG_1, _swig_p)
	return
}

func NewPairAA__SWIG_1(arg1 int, arg2 A) (_swig_ret PairAA) {
	return _swig_wrap_new_pairAA__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_pairAA__SWIG_2 unsafe.Pointer

func _swig_wrap_new_pairAA__SWIG_2(base uintptr) (_ SwigcptrPairAA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairAA__SWIG_2, _swig_p)
	return
}

func NewPairAA__SWIG_2(arg1 PairAA) (_swig_ret PairAA) {
	return _swig_wrap_new_pairAA__SWIG_2(arg1.Swigcptr())
}

func NewPairAA(a ...interface{}) PairAA {
	argc := len(a)
	if argc == 0 {
		return NewPairAA__SWIG_0()
	}
	if argc == 1 {
		return NewPairAA__SWIG_2(a[0].(PairAA))
	}
	if argc == 2 {
		return NewPairAA__SWIG_1(a[0].(int), a[1].(A))
	}
	panic("No match for overloaded function call")
}

var _wrap_pairAA_first_set unsafe.Pointer

func _swig_wrap_pairAA_first_set(base SwigcptrPairAA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairAA_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairAA) SetFirst(arg2 int) {
	_swig_wrap_pairAA_first_set(arg1, arg2)
}

var _wrap_pairAA_first_get unsafe.Pointer

func _swig_wrap_pairAA_first_get(base SwigcptrPairAA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairAA_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairAA) GetFirst() (_swig_ret int) {
	return _swig_wrap_pairAA_first_get(arg1)
}

var _wrap_pairAA_second_set unsafe.Pointer

func _swig_wrap_pairAA_second_set(base SwigcptrPairAA, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairAA_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairAA) SetSecond(arg2 A) {
	_swig_wrap_pairAA_second_set(arg1, arg2.Swigcptr())
}

var _wrap_pairAA_second_get unsafe.Pointer

func _swig_wrap_pairAA_second_get(base SwigcptrPairAA) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairAA_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairAA) GetSecond() (_swig_ret A) {
	return _swig_wrap_pairAA_second_get(arg1)
}

var _wrap_delete_pairAA unsafe.Pointer

func _swig_wrap_delete_pairAA(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_pairAA, _swig_p)
	return
}

func DeletePairAA(arg1 PairAA) {
	_swig_wrap_delete_pairAA(arg1.Swigcptr())
}

type PairAA interface {
	Swigcptr() uintptr
	SwigIsPairAA()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 A)
	GetSecond() (_swig_ret A)
}

type SwigcptrPairA uintptr

func (p SwigcptrPairA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairA) SwigIsPairA() {
}

var _wrap_new_pairA__SWIG_0 unsafe.Pointer

func _swig_wrap_new_pairA__SWIG_0() (base SwigcptrPairA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairA__SWIG_0, _swig_p)
	return
}

func NewPairA__SWIG_0() (_swig_ret PairA) {
	return _swig_wrap_new_pairA__SWIG_0()
}

var _wrap_new_pairA__SWIG_1 unsafe.Pointer

func _swig_wrap_new_pairA__SWIG_1(base int, _ uintptr) (_ SwigcptrPairA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairA__SWIG_1, _swig_p)
	return
}

func NewPairA__SWIG_1(arg1 int, arg2 A) (_swig_ret PairA) {
	return _swig_wrap_new_pairA__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_pairA__SWIG_2 unsafe.Pointer

func _swig_wrap_new_pairA__SWIG_2(base uintptr) (_ SwigcptrPairA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairA__SWIG_2, _swig_p)
	return
}

func NewPairA__SWIG_2(arg1 PairA) (_swig_ret PairA) {
	return _swig_wrap_new_pairA__SWIG_2(arg1.Swigcptr())
}

func NewPairA(a ...interface{}) PairA {
	argc := len(a)
	if argc == 0 {
		return NewPairA__SWIG_0()
	}
	if argc == 1 {
		return NewPairA__SWIG_2(a[0].(PairA))
	}
	if argc == 2 {
		return NewPairA__SWIG_1(a[0].(int), a[1].(A))
	}
	panic("No match for overloaded function call")
}

var _wrap_pairA_first_set unsafe.Pointer

func _swig_wrap_pairA_first_set(base SwigcptrPairA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairA_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairA) SetFirst(arg2 int) {
	_swig_wrap_pairA_first_set(arg1, arg2)
}

var _wrap_pairA_first_get unsafe.Pointer

func _swig_wrap_pairA_first_get(base SwigcptrPairA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairA_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairA) GetFirst() (_swig_ret int) {
	return _swig_wrap_pairA_first_get(arg1)
}

var _wrap_pairA_second_set unsafe.Pointer

func _swig_wrap_pairA_second_set(base SwigcptrPairA, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairA_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairA) SetSecond(arg2 A) {
	_swig_wrap_pairA_second_set(arg1, arg2.Swigcptr())
}

var _wrap_pairA_second_get unsafe.Pointer

func _swig_wrap_pairA_second_get(base SwigcptrPairA) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairA_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairA) GetSecond() (_swig_ret A) {
	return _swig_wrap_pairA_second_get(arg1)
}

var _wrap_delete_pairA unsafe.Pointer

func _swig_wrap_delete_pairA(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_pairA, _swig_p)
	return
}

func DeletePairA(arg1 PairA) {
	_swig_wrap_delete_pairA(arg1.Swigcptr())
}

type PairA interface {
	Swigcptr() uintptr
	SwigIsPairA()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 A)
	GetSecond() (_swig_ret A)
}

type SwigcptrMapA uintptr

func (p SwigcptrMapA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapA) SwigIsMapA() {
}

var _wrap_new_mapA__SWIG_0 unsafe.Pointer

func _swig_wrap_new_mapA__SWIG_0() (base SwigcptrMapA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_mapA__SWIG_0, _swig_p)
	return
}

func NewMapA__SWIG_0() (_swig_ret MapA) {
	return _swig_wrap_new_mapA__SWIG_0()
}

var _wrap_new_mapA__SWIG_1 unsafe.Pointer

func _swig_wrap_new_mapA__SWIG_1(base uintptr) (_ SwigcptrMapA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_mapA__SWIG_1, _swig_p)
	return
}

func NewMapA__SWIG_1(arg1 MapA) (_swig_ret MapA) {
	return _swig_wrap_new_mapA__SWIG_1(arg1.Swigcptr())
}

func NewMapA(a ...interface{}) MapA {
	argc := len(a)
	if argc == 0 {
		return NewMapA__SWIG_0()
	}
	if argc == 1 {
		return NewMapA__SWIG_1(a[0].(MapA))
	}
	panic("No match for overloaded function call")
}

var _wrap_mapA_size unsafe.Pointer

func _swig_wrap_mapA_size(base SwigcptrMapA) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_size, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Size() (_swig_ret uint) {
	return _swig_wrap_mapA_size(arg1)
}

var _wrap_mapA_empty unsafe.Pointer

func _swig_wrap_mapA_empty(base SwigcptrMapA) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_empty, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Empty() (_swig_ret bool) {
	return _swig_wrap_mapA_empty(arg1)
}

var _wrap_mapA_clear unsafe.Pointer

func _swig_wrap_mapA_clear(base SwigcptrMapA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_clear, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Clear() {
	_swig_wrap_mapA_clear(arg1)
}

var _wrap_mapA_get unsafe.Pointer

func _swig_wrap_mapA_get(base SwigcptrMapA, _ int) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_get, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Get(arg2 int) (_swig_ret A) {
	return _swig_wrap_mapA_get(arg1, arg2)
}

var _wrap_mapA_set unsafe.Pointer

func _swig_wrap_mapA_set(base SwigcptrMapA, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_set, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Set(arg2 int, arg3 A) {
	_swig_wrap_mapA_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_mapA_del unsafe.Pointer

func _swig_wrap_mapA_del(base SwigcptrMapA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_del, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Del(arg2 int) {
	_swig_wrap_mapA_del(arg1, arg2)
}

var _wrap_mapA_has_key unsafe.Pointer

func _swig_wrap_mapA_has_key(base SwigcptrMapA, _ int) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mapA_has_key, _swig_p)
	return
}

func (arg1 SwigcptrMapA) Has_key(arg2 int) (_swig_ret bool) {
	return _swig_wrap_mapA_has_key(arg1, arg2)
}

var _wrap_delete_mapA unsafe.Pointer

func _swig_wrap_delete_mapA(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_mapA, _swig_p)
	return
}

func DeleteMapA(arg1 MapA) {
	_swig_wrap_delete_mapA(arg1.Swigcptr())
}

type MapA interface {
	Swigcptr() uintptr
	SwigIsMapA()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret A)
	Set(arg2 int, arg3 A)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrPaircA1 uintptr

func (p SwigcptrPaircA1) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPaircA1) SwigIsPaircA1() {
}

var _wrap_new_paircA1__SWIG_0 unsafe.Pointer

func _swig_wrap_new_paircA1__SWIG_0() (base SwigcptrPaircA1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_paircA1__SWIG_0, _swig_p)
	return
}

func NewPaircA1__SWIG_0() (_swig_ret PaircA1) {
	return _swig_wrap_new_paircA1__SWIG_0()
}

var _wrap_new_paircA1__SWIG_1 unsafe.Pointer

func _swig_wrap_new_paircA1__SWIG_1(base int, _ uintptr) (_ SwigcptrPaircA1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_paircA1__SWIG_1, _swig_p)
	return
}

func NewPaircA1__SWIG_1(arg1 int, arg2 A) (_swig_ret PaircA1) {
	return _swig_wrap_new_paircA1__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_paircA1__SWIG_2 unsafe.Pointer

func _swig_wrap_new_paircA1__SWIG_2(base uintptr) (_ SwigcptrPaircA1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_paircA1__SWIG_2, _swig_p)
	return
}

func NewPaircA1__SWIG_2(arg1 PaircA1) (_swig_ret PaircA1) {
	return _swig_wrap_new_paircA1__SWIG_2(arg1.Swigcptr())
}

func NewPaircA1(a ...interface{}) PaircA1 {
	argc := len(a)
	if argc == 0 {
		return NewPaircA1__SWIG_0()
	}
	if argc == 1 {
		return NewPaircA1__SWIG_2(a[0].(PaircA1))
	}
	if argc == 2 {
		return NewPaircA1__SWIG_1(a[0].(int), a[1].(A))
	}
	panic("No match for overloaded function call")
}

var _wrap_paircA1_first_get unsafe.Pointer

func _swig_wrap_paircA1_first_get(base SwigcptrPaircA1) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_paircA1_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPaircA1) GetFirst() (_swig_ret int) {
	return _swig_wrap_paircA1_first_get(arg1)
}

var _wrap_paircA1_second_set unsafe.Pointer

func _swig_wrap_paircA1_second_set(base SwigcptrPaircA1, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_paircA1_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPaircA1) SetSecond(arg2 A) {
	_swig_wrap_paircA1_second_set(arg1, arg2.Swigcptr())
}

var _wrap_paircA1_second_get unsafe.Pointer

func _swig_wrap_paircA1_second_get(base SwigcptrPaircA1) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_paircA1_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPaircA1) GetSecond() (_swig_ret A) {
	return _swig_wrap_paircA1_second_get(arg1)
}

var _wrap_delete_paircA1 unsafe.Pointer

func _swig_wrap_delete_paircA1(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_paircA1, _swig_p)
	return
}

func DeletePaircA1(arg1 PaircA1) {
	_swig_wrap_delete_paircA1(arg1.Swigcptr())
}

type PaircA1 interface {
	Swigcptr() uintptr
	SwigIsPaircA1()
	GetFirst() (_swig_ret int)
	SetSecond(arg2 A)
	GetSecond() (_swig_ret A)
}

type SwigcptrPaircA2 uintptr

func (p SwigcptrPaircA2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPaircA2) SwigIsPaircA2() {
}

var _wrap_new_paircA2__SWIG_0 unsafe.Pointer

func _swig_wrap_new_paircA2__SWIG_0() (base SwigcptrPaircA2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_paircA2__SWIG_0, _swig_p)
	return
}

func NewPaircA2__SWIG_0() (_swig_ret PaircA2) {
	return _swig_wrap_new_paircA2__SWIG_0()
}

var _wrap_new_paircA2__SWIG_1 unsafe.Pointer

func _swig_wrap_new_paircA2__SWIG_1(base int, _ uintptr) (_ SwigcptrPaircA2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_paircA2__SWIG_1, _swig_p)
	return
}

func NewPaircA2__SWIG_1(arg1 int, arg2 A) (_swig_ret PaircA2) {
	return _swig_wrap_new_paircA2__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_paircA2__SWIG_2 unsafe.Pointer

func _swig_wrap_new_paircA2__SWIG_2(base uintptr) (_ SwigcptrPaircA2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_paircA2__SWIG_2, _swig_p)
	return
}

func NewPaircA2__SWIG_2(arg1 PaircA2) (_swig_ret PaircA2) {
	return _swig_wrap_new_paircA2__SWIG_2(arg1.Swigcptr())
}

func NewPaircA2(a ...interface{}) PaircA2 {
	argc := len(a)
	if argc == 0 {
		return NewPaircA2__SWIG_0()
	}
	if argc == 1 {
		return NewPaircA2__SWIG_2(a[0].(PaircA2))
	}
	if argc == 2 {
		return NewPaircA2__SWIG_1(a[0].(int), a[1].(A))
	}
	panic("No match for overloaded function call")
}

var _wrap_paircA2_first_get unsafe.Pointer

func _swig_wrap_paircA2_first_get(base SwigcptrPaircA2) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_paircA2_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPaircA2) GetFirst() (_swig_ret int) {
	return _swig_wrap_paircA2_first_get(arg1)
}

var _wrap_paircA2_second_set unsafe.Pointer

func _swig_wrap_paircA2_second_set(base SwigcptrPaircA2, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_paircA2_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPaircA2) SetSecond(arg2 A) {
	_swig_wrap_paircA2_second_set(arg1, arg2.Swigcptr())
}

var _wrap_paircA2_second_get unsafe.Pointer

func _swig_wrap_paircA2_second_get(base SwigcptrPaircA2) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_paircA2_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPaircA2) GetSecond() (_swig_ret A) {
	return _swig_wrap_paircA2_second_get(arg1)
}

var _wrap_delete_paircA2 unsafe.Pointer

func _swig_wrap_delete_paircA2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_paircA2, _swig_p)
	return
}

func DeletePaircA2(arg1 PaircA2) {
	_swig_wrap_delete_paircA2(arg1.Swigcptr())
}

type PaircA2 interface {
	Swigcptr() uintptr
	SwigIsPaircA2()
	GetFirst() (_swig_ret int)
	SetSecond(arg2 A)
	GetSecond() (_swig_ret A)
}

type SwigcptrPairiiA uintptr

func (p SwigcptrPairiiA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairiiA) SwigIsPairiiA() {
}

var _wrap_new_pairiiA__SWIG_0 unsafe.Pointer

func _swig_wrap_new_pairiiA__SWIG_0() (base SwigcptrPairiiA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairiiA__SWIG_0, _swig_p)
	return
}

func NewPairiiA__SWIG_0() (_swig_ret PairiiA) {
	return _swig_wrap_new_pairiiA__SWIG_0()
}

var _wrap_new_pairiiA__SWIG_1 unsafe.Pointer

func _swig_wrap_new_pairiiA__SWIG_1(base int, _ uintptr) (_ SwigcptrPairiiA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairiiA__SWIG_1, _swig_p)
	return
}

func NewPairiiA__SWIG_1(arg1 int, arg2 PairA) (_swig_ret PairiiA) {
	return _swig_wrap_new_pairiiA__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_pairiiA__SWIG_2 unsafe.Pointer

func _swig_wrap_new_pairiiA__SWIG_2(base uintptr) (_ SwigcptrPairiiA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairiiA__SWIG_2, _swig_p)
	return
}

func NewPairiiA__SWIG_2(arg1 PairiiA) (_swig_ret PairiiA) {
	return _swig_wrap_new_pairiiA__SWIG_2(arg1.Swigcptr())
}

func NewPairiiA(a ...interface{}) PairiiA {
	argc := len(a)
	if argc == 0 {
		return NewPairiiA__SWIG_0()
	}
	if argc == 1 {
		return NewPairiiA__SWIG_2(a[0].(PairiiA))
	}
	if argc == 2 {
		return NewPairiiA__SWIG_1(a[0].(int), a[1].(PairA))
	}
	panic("No match for overloaded function call")
}

var _wrap_pairiiA_first_set unsafe.Pointer

func _swig_wrap_pairiiA_first_set(base SwigcptrPairiiA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiA_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairiiA) SetFirst(arg2 int) {
	_swig_wrap_pairiiA_first_set(arg1, arg2)
}

var _wrap_pairiiA_first_get unsafe.Pointer

func _swig_wrap_pairiiA_first_get(base SwigcptrPairiiA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiA_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairiiA) GetFirst() (_swig_ret int) {
	return _swig_wrap_pairiiA_first_get(arg1)
}

var _wrap_pairiiA_second_set unsafe.Pointer

func _swig_wrap_pairiiA_second_set(base SwigcptrPairiiA, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiA_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairiiA) SetSecond(arg2 PairA) {
	_swig_wrap_pairiiA_second_set(arg1, arg2.Swigcptr())
}

var _wrap_pairiiA_second_get unsafe.Pointer

func _swig_wrap_pairiiA_second_get(base SwigcptrPairiiA) (_ SwigcptrPairA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiA_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairiiA) GetSecond() (_swig_ret PairA) {
	return _swig_wrap_pairiiA_second_get(arg1)
}

var _wrap_delete_pairiiA unsafe.Pointer

func _swig_wrap_delete_pairiiA(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_pairiiA, _swig_p)
	return
}

func DeletePairiiA(arg1 PairiiA) {
	_swig_wrap_delete_pairiiA(arg1.Swigcptr())
}

type PairiiA interface {
	Swigcptr() uintptr
	SwigIsPairiiA()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 PairA)
	GetSecond() (_swig_ret PairA)
}

type SwigcptrPairiiAc uintptr

func (p SwigcptrPairiiAc) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairiiAc) SwigIsPairiiAc() {
}

var _wrap_new_pairiiAc__SWIG_0 unsafe.Pointer

func _swig_wrap_new_pairiiAc__SWIG_0() (base SwigcptrPairiiAc) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairiiAc__SWIG_0, _swig_p)
	return
}

func NewPairiiAc__SWIG_0() (_swig_ret PairiiAc) {
	return _swig_wrap_new_pairiiAc__SWIG_0()
}

var _wrap_new_pairiiAc__SWIG_1 unsafe.Pointer

func _swig_wrap_new_pairiiAc__SWIG_1(base int, _ uintptr) (_ SwigcptrPairiiAc) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairiiAc__SWIG_1, _swig_p)
	return
}

func NewPairiiAc__SWIG_1(arg1 int, arg2 PairA) (_swig_ret PairiiAc) {
	return _swig_wrap_new_pairiiAc__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_pairiiAc__SWIG_2 unsafe.Pointer

func _swig_wrap_new_pairiiAc__SWIG_2(base uintptr) (_ SwigcptrPairiiAc) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_pairiiAc__SWIG_2, _swig_p)
	return
}

func NewPairiiAc__SWIG_2(arg1 PairiiAc) (_swig_ret PairiiAc) {
	return _swig_wrap_new_pairiiAc__SWIG_2(arg1.Swigcptr())
}

func NewPairiiAc(a ...interface{}) PairiiAc {
	argc := len(a)
	if argc == 0 {
		return NewPairiiAc__SWIG_0()
	}
	if argc == 1 {
		return NewPairiiAc__SWIG_2(a[0].(PairiiAc))
	}
	if argc == 2 {
		return NewPairiiAc__SWIG_1(a[0].(int), a[1].(PairA))
	}
	panic("No match for overloaded function call")
}

var _wrap_pairiiAc_first_set unsafe.Pointer

func _swig_wrap_pairiiAc_first_set(base SwigcptrPairiiAc, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiAc_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairiiAc) SetFirst(arg2 int) {
	_swig_wrap_pairiiAc_first_set(arg1, arg2)
}

var _wrap_pairiiAc_first_get unsafe.Pointer

func _swig_wrap_pairiiAc_first_get(base SwigcptrPairiiAc) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiAc_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairiiAc) GetFirst() (_swig_ret int) {
	return _swig_wrap_pairiiAc_first_get(arg1)
}

var _wrap_pairiiAc_second_get unsafe.Pointer

func _swig_wrap_pairiiAc_second_get(base SwigcptrPairiiAc) (_ SwigcptrPairA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_pairiiAc_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairiiAc) GetSecond() (_swig_ret PairA) {
	return _swig_wrap_pairiiAc_second_get(arg1)
}

var _wrap_delete_pairiiAc unsafe.Pointer

func _swig_wrap_delete_pairiiAc(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_pairiiAc, _swig_p)
	return
}

func DeletePairiiAc(arg1 PairiiAc) {
	_swig_wrap_delete_pairiiAc(arg1.Swigcptr())
}

type PairiiAc interface {
	Swigcptr() uintptr
	SwigIsPairiiAc()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	GetSecond() (_swig_ret PairA)
}

var _wrap_p_identa unsafe.Pointer

func _swig_wrap_p_identa(base uintptr) (_ SwigcptrPairA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_p_identa, _swig_p)
	return
}

func P_identa(arg1 PairA) (_swig_ret PairA) {
	return _swig_wrap_p_identa(arg1.Swigcptr())
}

var _wrap_m_identa unsafe.Pointer

func _swig_wrap_m_identa(base uintptr) (_ SwigcptrMapA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_m_identa, _swig_p)
	return
}

func M_identa(arg1 MapA) (_swig_ret MapA) {
	return _swig_wrap_m_identa(arg1.Swigcptr())
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

