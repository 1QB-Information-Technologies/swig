/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../enum_scope_template.i

package enum_scope_template

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_chop unsafe.Pointer

func Chop(arg1 Tree_Sl_int_Sg_Types) (_swig_ret Tree_Sl_int_Sg_Types) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_chop, _swig_p)
	return
}
type SwigcptrTreeInt uintptr

func (p SwigcptrTreeInt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTreeInt) SwigIsTreeInt() {
}

type Tree_Sl_int_Sg_Types int
var _wrap_Oak_TreeInt unsafe.Pointer

func _swig_getTreeInt_Oak_TreeInt() (_swig_ret Tree_Sl_int_Sg_Types) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Oak_TreeInt, _swig_p)
	return
}
var TreeIntOak Tree_Sl_int_Sg_Types = _swig_getTreeInt_Oak_TreeInt()
var _wrap_Fir_TreeInt unsafe.Pointer

func _swig_getTreeInt_Fir_TreeInt() (_swig_ret Tree_Sl_int_Sg_Types) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Fir_TreeInt, _swig_p)
	return
}
var TreeIntFir Tree_Sl_int_Sg_Types = _swig_getTreeInt_Fir_TreeInt()
var _wrap_Cedar_TreeInt unsafe.Pointer

func _swig_getTreeInt_Cedar_TreeInt() (_swig_ret Tree_Sl_int_Sg_Types) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Cedar_TreeInt, _swig_p)
	return
}
var TreeIntCedar Tree_Sl_int_Sg_Types = _swig_getTreeInt_Cedar_TreeInt()
var _wrap_TreeInt_chop unsafe.Pointer

func _swig_wrap_TreeInt_chop(base SwigcptrTreeInt, _ Tree_Sl_int_Sg_Types) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_TreeInt_chop, _swig_p)
	return
}

func (arg1 SwigcptrTreeInt) Chop(arg2 Tree_Sl_int_Sg_Types) {
	_swig_wrap_TreeInt_chop(arg1, arg2)
}

var _wrap_new_TreeInt unsafe.Pointer

func _swig_wrap_new_TreeInt() (base SwigcptrTreeInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_TreeInt, _swig_p)
	return
}

func NewTreeInt() (_swig_ret TreeInt) {
	return _swig_wrap_new_TreeInt()
}

var _wrap_delete_TreeInt unsafe.Pointer

func _swig_wrap_delete_TreeInt(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_TreeInt, _swig_p)
	return
}

func DeleteTreeInt(arg1 TreeInt) {
	_swig_wrap_delete_TreeInt(arg1.Swigcptr())
}

type TreeInt interface {
	Swigcptr() uintptr
	SwigIsTreeInt()
	Chop(arg2 Tree_Sl_int_Sg_Types)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

