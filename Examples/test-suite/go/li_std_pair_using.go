/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_std_pair_using.i

package li_std_pair_using

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrStringStringPair uintptr

func (p SwigcptrStringStringPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringStringPair) SwigIsStringStringPair() {
}

var _wrap_new_StringStringPair__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StringStringPair__SWIG_0() (base SwigcptrStringStringPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringStringPair__SWIG_0, _swig_p)
	return
}

func NewStringStringPair__SWIG_0() (_swig_ret StringStringPair) {
	return _swig_wrap_new_StringStringPair__SWIG_0()
}

var _wrap_new_StringStringPair__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StringStringPair__SWIG_1(base string, _ string) (_ SwigcptrStringStringPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringStringPair__SWIG_1, _swig_p)
	return
}

func NewStringStringPair__SWIG_1(arg1 string, arg2 string) (_swig_ret StringStringPair) {
	return _swig_wrap_new_StringStringPair__SWIG_1(arg1, arg2)
}

var _wrap_new_StringStringPair__SWIG_2 unsafe.Pointer

func _swig_wrap_new_StringStringPair__SWIG_2(base uintptr) (_ SwigcptrStringStringPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringStringPair__SWIG_2, _swig_p)
	return
}

func NewStringStringPair__SWIG_2(arg1 StringStringPair) (_swig_ret StringStringPair) {
	return _swig_wrap_new_StringStringPair__SWIG_2(arg1.Swigcptr())
}

func NewStringStringPair(a ...interface{}) StringStringPair {
	argc := len(a)
	if argc == 0 {
		return NewStringStringPair__SWIG_0()
	}
	if argc == 1 {
		return NewStringStringPair__SWIG_2(a[0].(StringStringPair))
	}
	if argc == 2 {
		return NewStringStringPair__SWIG_1(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_StringStringPair_first_set unsafe.Pointer

func _swig_wrap_StringStringPair_first_set(base SwigcptrStringStringPair, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringStringPair_first_set, _swig_p)
	return
}

func (arg1 SwigcptrStringStringPair) SetFirst(arg2 string) {
	_swig_wrap_StringStringPair_first_set(arg1, arg2)
}

var _wrap_StringStringPair_first_get unsafe.Pointer

func _swig_wrap_StringStringPair_first_get(base SwigcptrStringStringPair) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringStringPair_first_get, _swig_p)
	return
}

func (arg1 SwigcptrStringStringPair) GetFirst() (_swig_ret string) {
	return _swig_wrap_StringStringPair_first_get(arg1)
}

var _wrap_StringStringPair_second_set unsafe.Pointer

func _swig_wrap_StringStringPair_second_set(base SwigcptrStringStringPair, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringStringPair_second_set, _swig_p)
	return
}

func (arg1 SwigcptrStringStringPair) SetSecond(arg2 string) {
	_swig_wrap_StringStringPair_second_set(arg1, arg2)
}

var _wrap_StringStringPair_second_get unsafe.Pointer

func _swig_wrap_StringStringPair_second_get(base SwigcptrStringStringPair) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringStringPair_second_get, _swig_p)
	return
}

func (arg1 SwigcptrStringStringPair) GetSecond() (_swig_ret string) {
	return _swig_wrap_StringStringPair_second_get(arg1)
}

var _wrap_delete_StringStringPair unsafe.Pointer

func _swig_wrap_delete_StringStringPair(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StringStringPair, _swig_p)
	return
}

func DeleteStringStringPair(arg1 StringStringPair) {
	_swig_wrap_delete_StringStringPair(arg1.Swigcptr())
}

type StringStringPair interface {
	Swigcptr() uintptr
	SwigIsStringStringPair()
	SetFirst(arg2 string)
	GetFirst() (_swig_ret string)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrStringIntPair uintptr

func (p SwigcptrStringIntPair) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringIntPair) SwigIsStringIntPair() {
}

var _wrap_new_StringIntPair__SWIG_0 unsafe.Pointer

func _swig_wrap_new_StringIntPair__SWIG_0() (base SwigcptrStringIntPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringIntPair__SWIG_0, _swig_p)
	return
}

func NewStringIntPair__SWIG_0() (_swig_ret StringIntPair) {
	return _swig_wrap_new_StringIntPair__SWIG_0()
}

var _wrap_new_StringIntPair__SWIG_1 unsafe.Pointer

func _swig_wrap_new_StringIntPair__SWIG_1(base string, _ int) (_ SwigcptrStringIntPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringIntPair__SWIG_1, _swig_p)
	return
}

func NewStringIntPair__SWIG_1(arg1 string, arg2 int) (_swig_ret StringIntPair) {
	return _swig_wrap_new_StringIntPair__SWIG_1(arg1, arg2)
}

var _wrap_new_StringIntPair__SWIG_2 unsafe.Pointer

func _swig_wrap_new_StringIntPair__SWIG_2(base uintptr) (_ SwigcptrStringIntPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_StringIntPair__SWIG_2, _swig_p)
	return
}

func NewStringIntPair__SWIG_2(arg1 StringIntPair) (_swig_ret StringIntPair) {
	return _swig_wrap_new_StringIntPair__SWIG_2(arg1.Swigcptr())
}

func NewStringIntPair(a ...interface{}) StringIntPair {
	argc := len(a)
	if argc == 0 {
		return NewStringIntPair__SWIG_0()
	}
	if argc == 1 {
		return NewStringIntPair__SWIG_2(a[0].(StringIntPair))
	}
	if argc == 2 {
		return NewStringIntPair__SWIG_1(a[0].(string), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_StringIntPair_first_set unsafe.Pointer

func _swig_wrap_StringIntPair_first_set(base SwigcptrStringIntPair, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntPair_first_set, _swig_p)
	return
}

func (arg1 SwigcptrStringIntPair) SetFirst(arg2 string) {
	_swig_wrap_StringIntPair_first_set(arg1, arg2)
}

var _wrap_StringIntPair_first_get unsafe.Pointer

func _swig_wrap_StringIntPair_first_get(base SwigcptrStringIntPair) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntPair_first_get, _swig_p)
	return
}

func (arg1 SwigcptrStringIntPair) GetFirst() (_swig_ret string) {
	return _swig_wrap_StringIntPair_first_get(arg1)
}

var _wrap_StringIntPair_second_set unsafe.Pointer

func _swig_wrap_StringIntPair_second_set(base SwigcptrStringIntPair, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntPair_second_set, _swig_p)
	return
}

func (arg1 SwigcptrStringIntPair) SetSecond(arg2 int) {
	_swig_wrap_StringIntPair_second_set(arg1, arg2)
}

var _wrap_StringIntPair_second_get unsafe.Pointer

func _swig_wrap_StringIntPair_second_get(base SwigcptrStringIntPair) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_StringIntPair_second_get, _swig_p)
	return
}

func (arg1 SwigcptrStringIntPair) GetSecond() (_swig_ret int) {
	return _swig_wrap_StringIntPair_second_get(arg1)
}

var _wrap_delete_StringIntPair unsafe.Pointer

func _swig_wrap_delete_StringIntPair(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_StringIntPair, _swig_p)
	return
}

func DeleteStringIntPair(arg1 StringIntPair) {
	_swig_wrap_delete_StringIntPair(arg1.Swigcptr())
}

type StringIntPair interface {
	Swigcptr() uintptr
	SwigIsStringIntPair()
	SetFirst(arg2 string)
	GetFirst() (_swig_ret string)
	SetSecond(arg2 int)
	GetSecond() (_swig_ret int)
}

var _wrap_bounce unsafe.Pointer

func _swig_wrap_bounce(base uintptr) (_ SwigcptrStringStringPair) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_bounce, _swig_p)
	return
}

func Bounce(arg1 StringStringPair) (_swig_ret StringStringPair) {
	return _swig_wrap_bounce(arg1.Swigcptr())
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

