/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../namespace_forward_declaration.i

package namespace_forward_declaration

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrYYY uintptr

func (p SwigcptrYYY) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrYYY) SwigIsYYY() {
}

var _wrap_YYY_yyy unsafe.Pointer

func _swig_wrap_YYY_yyy(base SwigcptrYYY, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_YYY_yyy, _swig_p)
	return
}

func (arg1 SwigcptrYYY) Yyy(arg2 int) (_swig_ret int) {
	return _swig_wrap_YYY_yyy(arg1, arg2)
}

var _wrap_new_YYY unsafe.Pointer

func _swig_wrap_new_YYY() (base SwigcptrYYY) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_YYY, _swig_p)
	return
}

func NewYYY() (_swig_ret YYY) {
	return _swig_wrap_new_YYY()
}

var _wrap_delete_YYY unsafe.Pointer

func _swig_wrap_delete_YYY(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_YYY, _swig_p)
	return
}

func DeleteYYY(arg1 YYY) {
	_swig_wrap_delete_YYY(arg1.Swigcptr())
}

type YYY interface {
	Swigcptr() uintptr
	SwigIsYYY()
	Yyy(arg2 int) (_swig_ret int)
}

type SwigcptrXXX uintptr

func (p SwigcptrXXX) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrXXX) SwigIsXXX() {
}

var _wrap_XXX_xxx unsafe.Pointer

func _swig_wrap_XXX_xxx(base SwigcptrXXX, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_XXX_xxx, _swig_p)
	return
}

func (arg1 SwigcptrXXX) Xxx(arg2 int) (_swig_ret int) {
	return _swig_wrap_XXX_xxx(arg1, arg2)
}

var _wrap_new_XXX unsafe.Pointer

func _swig_wrap_new_XXX() (base SwigcptrXXX) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_XXX, _swig_p)
	return
}

func NewXXX() (_swig_ret XXX) {
	return _swig_wrap_new_XXX()
}

var _wrap_delete_XXX unsafe.Pointer

func _swig_wrap_delete_XXX(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_XXX, _swig_p)
	return
}

func DeleteXXX(arg1 XXX) {
	_swig_wrap_delete_XXX(arg1.Swigcptr())
}

type XXX interface {
	Swigcptr() uintptr
	SwigIsXXX()
	Xxx(arg2 int) (_swig_ret int)
}

var _wrap_testXXX1 unsafe.Pointer

func _swig_wrap_testXXX1(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_testXXX1, _swig_p)
	return
}

func TestXXX1(arg1 XXX) {
	_swig_wrap_testXXX1(arg1.Swigcptr())
}

var _wrap_testXXX2 unsafe.Pointer

func _swig_wrap_testXXX2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_testXXX2, _swig_p)
	return
}

func TestXXX2(arg1 XXX) {
	_swig_wrap_testXXX2(arg1.Swigcptr())
}

var _wrap_testXXX3 unsafe.Pointer

func _swig_wrap_testXXX3(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_testXXX3, _swig_p)
	return
}

func TestXXX3(arg1 XXX) {
	_swig_wrap_testXXX3(arg1.Swigcptr())
}

var _wrap_testYYY1 unsafe.Pointer

func _swig_wrap_testYYY1(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_testYYY1, _swig_p)
	return
}

func TestYYY1(arg1 YYY) {
	_swig_wrap_testYYY1(arg1.Swigcptr())
}

var _wrap_testYYY2 unsafe.Pointer

func _swig_wrap_testYYY2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_testYYY2, _swig_p)
	return
}

func TestYYY2(arg1 YYY) {
	_swig_wrap_testYYY2(arg1.Swigcptr())
}

var _wrap_testYYY3 unsafe.Pointer

func _swig_wrap_testYYY3(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_testYYY3, _swig_p)
	return
}

func TestYYY3(arg1 YYY) {
	_swig_wrap_testYYY3(arg1.Swigcptr())
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

