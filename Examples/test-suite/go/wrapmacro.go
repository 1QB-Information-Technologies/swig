/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../wrapmacro.i

package wrapmacro

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_GUINT16_SWAP_LE_BE_CONSTANT unsafe.Pointer

func GUINT16_SWAP_LE_BE_CONSTANT(arg1 uint16) (_swig_ret uint16) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_GUINT16_SWAP_LE_BE_CONSTANT, _swig_p)
	return
}
var _wrap_maximum__SWIG_0 unsafe.Pointer

func Maximum__SWIG_0(arg1 int64, arg2 int64) (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maximum__SWIG_0, _swig_p)
	return
}
var _wrap_maximum__SWIG_1 unsafe.Pointer

func Maximum__SWIG_1(arg1 float64, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maximum__SWIG_1, _swig_p)
	return
}
func Maximum(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int64); !ok {
			goto check_1
		}
		if _, ok := a[1].(int64); !ok {
			goto check_1
		}
		return Maximum__SWIG_0(a[0].(int64), a[1].(int64))
	}
check_1:
	if argc == 2 {
		return Maximum__SWIG_1(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}


