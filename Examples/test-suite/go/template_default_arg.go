/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_default_arg.i

package template_default_arg

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_foob__SWIG_0 unsafe.Pointer

func _swig_wrap_foob__SWIG_0(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foob__SWIG_0, _swig_p)
	return
}

func Foob__SWIG_0(arg1 Foo_int) (_swig_ret int) {
	return _swig_wrap_foob__SWIG_0(arg1.Swigcptr())
}

var _wrap_foob__SWIG_1 unsafe.Pointer

func Foob__SWIG_1() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_foob__SWIG_1, _swig_p)
	return
}
func Foob(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Foob__SWIG_1()
	}
	if argc == 1 {
		return Foob__SWIG_0(a[0].(Foo_int))
	}
	panic("No match for overloaded function call")
}

type SwigcptrFoo_int uintptr

func (p SwigcptrFoo_int) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo_int) SwigIsFoo_int() {
}

var _wrap_new_Foo_int__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo_int__SWIG_0(base uint) (_ SwigcptrFoo_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo_int__SWIG_0, _swig_p)
	return
}

func NewFoo_int__SWIG_0(arg1 uint) (_swig_ret Foo_int) {
	return _swig_wrap_new_Foo_int__SWIG_0(arg1)
}

var _wrap_new_Foo_int__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo_int__SWIG_1() (base SwigcptrFoo_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo_int__SWIG_1, _swig_p)
	return
}

func NewFoo_int__SWIG_1() (_swig_ret Foo_int) {
	return _swig_wrap_new_Foo_int__SWIG_1()
}

func NewFoo_int(a ...interface{}) Foo_int {
	argc := len(a)
	if argc == 0 {
		return NewFoo_int__SWIG_1()
	}
	if argc == 1 {
		return NewFoo_int__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo_int unsafe.Pointer

func _swig_wrap_delete_Foo_int(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo_int, _swig_p)
	return
}

func DeleteFoo_int(arg1 Foo_int) {
	_swig_wrap_delete_Foo_int(arg1.Swigcptr())
}

type Foo_int interface {
	Swigcptr() uintptr
	SwigIsFoo_int()
}

type SwigcptrHello_int uintptr

func (p SwigcptrHello_int) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrHello_int) SwigIsHello_int() {
}

var _wrap_new_Hello_int__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Hello_int__SWIG_0(base uint) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Hello_int__SWIG_0, _swig_p)
	return
}

func NewHello_int__SWIG_0(arg1 uint) (_swig_ret Hello_int) {
	return _swig_wrap_new_Hello_int__SWIG_0(arg1)
}

var _wrap_new_Hello_int__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Hello_int__SWIG_1() (base SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Hello_int__SWIG_1, _swig_p)
	return
}

func NewHello_int__SWIG_1() (_swig_ret Hello_int) {
	return _swig_wrap_new_Hello_int__SWIG_1()
}

func NewHello_int(a ...interface{}) Hello_int {
	argc := len(a)
	if argc == 0 {
		return NewHello_int__SWIG_1()
	}
	if argc == 1 {
		return NewHello_int__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

type Hello_Sl_int_Sg_Hi int
var _wrap_hi_Hello_int unsafe.Pointer

func _swig_getHello_int_hi_Hello_int() (_swig_ret Hello_Sl_int_Sg_Hi) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_hi_Hello_int, _swig_p)
	return
}
var Hello_intHi Hello_Sl_int_Sg_Hi = _swig_getHello_int_hi_Hello_int()
var _wrap_hello_Hello_int unsafe.Pointer

func _swig_getHello_int_hello_Hello_int() (_swig_ret Hello_Sl_int_Sg_Hi) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_hello_Hello_int, _swig_p)
	return
}
var Hello_intHello Hello_Sl_int_Sg_Hi = _swig_getHello_int_hello_Hello_int()
var _wrap_Hello_int_foo__SWIG_0 unsafe.Pointer

func _swig_wrap_Hello_int_foo__SWIG_0(base SwigcptrHello_int, _ Hello_Sl_int_Sg_Hi) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Hello_int_foo__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrHello_int) Foo__SWIG_0(arg2 Hello_Sl_int_Sg_Hi) {
	_swig_wrap_Hello_int_foo__SWIG_0(arg1, arg2)
}

var _wrap_Hello_int_foo__SWIG_1 unsafe.Pointer

func _swig_wrap_Hello_int_foo__SWIG_1(base SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Hello_int_foo__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrHello_int) Foo__SWIG_1() {
	_swig_wrap_Hello_int_foo__SWIG_1(arg1)
}

func (p SwigcptrHello_int) Foo(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Foo__SWIG_1()
		return
	}
	if argc == 1 {
		p.Foo__SWIG_0(a[0].(Hello_Sl_int_Sg_Hi))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Hello_int unsafe.Pointer

func _swig_wrap_delete_Hello_int(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Hello_int, _swig_p)
	return
}

func DeleteHello_int(arg1 Hello_int) {
	_swig_wrap_delete_Hello_int(arg1.Swigcptr())
}

type Hello_int interface {
	Swigcptr() uintptr
	SwigIsHello_int()
	Foo(a ...interface{})
}

type SwigcptrX_int uintptr

func (p SwigcptrX_int) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX_int) SwigIsX_int() {
}

var _wrap_new_X_int__SWIG_0 unsafe.Pointer

func _swig_wrap_new_X_int__SWIG_0(base int) (_ SwigcptrX_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_int__SWIG_0, _swig_p)
	return
}

func NewX_int__SWIG_0(arg1 int) (_swig_ret X_int) {
	return _swig_wrap_new_X_int__SWIG_0(arg1)
}

var _wrap_new_X_int__SWIG_1 unsafe.Pointer

func _swig_wrap_new_X_int__SWIG_1() (base SwigcptrX_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_int__SWIG_1, _swig_p)
	return
}

func NewX_int__SWIG_1() (_swig_ret X_int) {
	return _swig_wrap_new_X_int__SWIG_1()
}

var _wrap_new_X_int__SWIG_2 unsafe.Pointer

func _swig_wrap_new_X_int__SWIG_2(base float64, _ int) (_ SwigcptrX_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_int__SWIG_2, _swig_p)
	return
}

func NewX_int__SWIG_2(arg1 float64, arg2 int) (_swig_ret X_int) {
	return _swig_wrap_new_X_int__SWIG_2(arg1, arg2)
}

var _wrap_new_X_int__SWIG_3 unsafe.Pointer

func _swig_wrap_new_X_int__SWIG_3(base float64) (_ SwigcptrX_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_int__SWIG_3, _swig_p)
	return
}

func NewX_int__SWIG_3(arg1 float64) (_swig_ret X_int) {
	return _swig_wrap_new_X_int__SWIG_3(arg1)
}

func NewX_int(a ...interface{}) X_int {
	argc := len(a)
	if argc == 0 {
		return NewX_int__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewX_int__SWIG_0(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewX_int__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewX_int__SWIG_2(a[0].(float64), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_X_int_meth__SWIG_0 unsafe.Pointer

func _swig_wrap_X_int_meth__SWIG_0(base SwigcptrX_int, _ float64, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_int_meth__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrX_int) Meth__SWIG_0(arg2 float64, arg3 int) (_swig_ret int) {
	return _swig_wrap_X_int_meth__SWIG_0(arg1, arg2, arg3)
}

var _wrap_X_int_meth__SWIG_1 unsafe.Pointer

func _swig_wrap_X_int_meth__SWIG_1(base SwigcptrX_int, _ float64) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_int_meth__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrX_int) Meth__SWIG_1(arg2 float64) (_swig_ret int) {
	return _swig_wrap_X_int_meth__SWIG_1(arg1, arg2)
}

var _wrap_X_int_meth__SWIG_2 unsafe.Pointer

func _swig_wrap_X_int_meth__SWIG_2(base SwigcptrX_int, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_int_meth__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrX_int) Meth__SWIG_2(arg2 int) (_swig_ret int) {
	return _swig_wrap_X_int_meth__SWIG_2(arg1, arg2)
}

var _wrap_X_int_meth__SWIG_3 unsafe.Pointer

func _swig_wrap_X_int_meth__SWIG_3(base SwigcptrX_int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_int_meth__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrX_int) Meth__SWIG_3() (_swig_ret int) {
	return _swig_wrap_X_int_meth__SWIG_3(arg1)
}

func (p SwigcptrX_int) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return p.Meth__SWIG_2(a[0].(int))
	}
check_2:
	if argc == 1 {
		return p.Meth__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth__SWIG_0(a[0].(float64), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_X_int unsafe.Pointer

func _swig_wrap_delete_X_int(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X_int, _swig_p)
	return
}

func DeleteX_int(arg1 X_int) {
	_swig_wrap_delete_X_int(arg1.Swigcptr())
}

type X_int interface {
	Swigcptr() uintptr
	SwigIsX_int()
	Meth(a ...interface{}) interface{}
}

type SwigcptrX_longlong uintptr

func (p SwigcptrX_longlong) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX_longlong) SwigIsX_longlong() {
}

var _wrap_new_X_longlong__SWIG_0 unsafe.Pointer

func _swig_wrap_new_X_longlong__SWIG_0(base int64) (_ SwigcptrX_longlong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_longlong__SWIG_0, _swig_p)
	return
}

func NewX_longlong__SWIG_0(arg1 int64) (_swig_ret X_longlong) {
	return _swig_wrap_new_X_longlong__SWIG_0(arg1)
}

var _wrap_new_X_longlong__SWIG_1 unsafe.Pointer

func _swig_wrap_new_X_longlong__SWIG_1() (base SwigcptrX_longlong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_longlong__SWIG_1, _swig_p)
	return
}

func NewX_longlong__SWIG_1() (_swig_ret X_longlong) {
	return _swig_wrap_new_X_longlong__SWIG_1()
}

var _wrap_new_X_longlong__SWIG_2 unsafe.Pointer

func _swig_wrap_new_X_longlong__SWIG_2(base float64, _ int64) (_ SwigcptrX_longlong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_longlong__SWIG_2, _swig_p)
	return
}

func NewX_longlong__SWIG_2(arg1 float64, arg2 int64) (_swig_ret X_longlong) {
	return _swig_wrap_new_X_longlong__SWIG_2(arg1, arg2)
}

var _wrap_new_X_longlong__SWIG_3 unsafe.Pointer

func _swig_wrap_new_X_longlong__SWIG_3(base float64) (_ SwigcptrX_longlong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_longlong__SWIG_3, _swig_p)
	return
}

func NewX_longlong__SWIG_3(arg1 float64) (_swig_ret X_longlong) {
	return _swig_wrap_new_X_longlong__SWIG_3(arg1)
}

func NewX_longlong(a ...interface{}) X_longlong {
	argc := len(a)
	if argc == 0 {
		return NewX_longlong__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewX_longlong__SWIG_0(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewX_longlong__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewX_longlong__SWIG_2(a[0].(float64), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_X_longlong_meth__SWIG_0 unsafe.Pointer

func _swig_wrap_X_longlong_meth__SWIG_0(base SwigcptrX_longlong, _ float64, _ int64) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_longlong_meth__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrX_longlong) Meth__SWIG_0(arg2 float64, arg3 int64) (_swig_ret int64) {
	return _swig_wrap_X_longlong_meth__SWIG_0(arg1, arg2, arg3)
}

var _wrap_X_longlong_meth__SWIG_1 unsafe.Pointer

func _swig_wrap_X_longlong_meth__SWIG_1(base SwigcptrX_longlong, _ float64) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_longlong_meth__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrX_longlong) Meth__SWIG_1(arg2 float64) (_swig_ret int64) {
	return _swig_wrap_X_longlong_meth__SWIG_1(arg1, arg2)
}

var _wrap_X_longlong_meth__SWIG_2 unsafe.Pointer

func _swig_wrap_X_longlong_meth__SWIG_2(base SwigcptrX_longlong, _ int64) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_longlong_meth__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrX_longlong) Meth__SWIG_2(arg2 int64) (_swig_ret int64) {
	return _swig_wrap_X_longlong_meth__SWIG_2(arg1, arg2)
}

var _wrap_X_longlong_meth__SWIG_3 unsafe.Pointer

func _swig_wrap_X_longlong_meth__SWIG_3(base SwigcptrX_longlong) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_longlong_meth__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrX_longlong) Meth__SWIG_3() (_swig_ret int64) {
	return _swig_wrap_X_longlong_meth__SWIG_3(arg1)
}

func (p SwigcptrX_longlong) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return p.Meth__SWIG_2(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return p.Meth__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth__SWIG_0(a[0].(float64), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_X_longlong unsafe.Pointer

func _swig_wrap_delete_X_longlong(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X_longlong, _swig_p)
	return
}

func DeleteX_longlong(arg1 X_longlong) {
	_swig_wrap_delete_X_longlong(arg1.Swigcptr())
}

type X_longlong interface {
	Swigcptr() uintptr
	SwigIsX_longlong()
	Meth(a ...interface{}) interface{}
}

type SwigcptrX_unsigned uintptr

func (p SwigcptrX_unsigned) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX_unsigned) SwigIsX_unsigned() {
}

var _wrap_new_X_unsigned__SWIG_0 unsafe.Pointer

func _swig_wrap_new_X_unsigned__SWIG_0(base uint) (_ SwigcptrX_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_unsigned__SWIG_0, _swig_p)
	return
}

func NewX_unsigned__SWIG_0(arg1 uint) (_swig_ret X_unsigned) {
	return _swig_wrap_new_X_unsigned__SWIG_0(arg1)
}

var _wrap_new_X_unsigned__SWIG_1 unsafe.Pointer

func _swig_wrap_new_X_unsigned__SWIG_1() (base SwigcptrX_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_unsigned__SWIG_1, _swig_p)
	return
}

func NewX_unsigned__SWIG_1() (_swig_ret X_unsigned) {
	return _swig_wrap_new_X_unsigned__SWIG_1()
}

var _wrap_new_X_unsigned__SWIG_2 unsafe.Pointer

func _swig_wrap_new_X_unsigned__SWIG_2(base float64, _ uint) (_ SwigcptrX_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_unsigned__SWIG_2, _swig_p)
	return
}

func NewX_unsigned__SWIG_2(arg1 float64, arg2 uint) (_swig_ret X_unsigned) {
	return _swig_wrap_new_X_unsigned__SWIG_2(arg1, arg2)
}

var _wrap_new_X_unsigned__SWIG_3 unsafe.Pointer

func _swig_wrap_new_X_unsigned__SWIG_3(base float64) (_ SwigcptrX_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_unsigned__SWIG_3, _swig_p)
	return
}

func NewX_unsigned__SWIG_3(arg1 float64) (_swig_ret X_unsigned) {
	return _swig_wrap_new_X_unsigned__SWIG_3(arg1)
}

func NewX_unsigned(a ...interface{}) X_unsigned {
	argc := len(a)
	if argc == 0 {
		return NewX_unsigned__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(uint); !ok {
			goto check_2
		}
		return NewX_unsigned__SWIG_0(a[0].(uint))
	}
check_2:
	if argc == 1 {
		return NewX_unsigned__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewX_unsigned__SWIG_2(a[0].(float64), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

var _wrap_X_unsigned_meth__SWIG_0 unsafe.Pointer

func _swig_wrap_X_unsigned_meth__SWIG_0(base SwigcptrX_unsigned, _ float64, _ uint) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_unsigned_meth__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrX_unsigned) Meth__SWIG_0(arg2 float64, arg3 uint) (_swig_ret uint) {
	return _swig_wrap_X_unsigned_meth__SWIG_0(arg1, arg2, arg3)
}

var _wrap_X_unsigned_meth__SWIG_1 unsafe.Pointer

func _swig_wrap_X_unsigned_meth__SWIG_1(base SwigcptrX_unsigned, _ float64) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_unsigned_meth__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrX_unsigned) Meth__SWIG_1(arg2 float64) (_swig_ret uint) {
	return _swig_wrap_X_unsigned_meth__SWIG_1(arg1, arg2)
}

var _wrap_X_unsigned_meth__SWIG_2 unsafe.Pointer

func _swig_wrap_X_unsigned_meth__SWIG_2(base SwigcptrX_unsigned, _ uint) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_unsigned_meth__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrX_unsigned) Meth__SWIG_2(arg2 uint) (_swig_ret uint) {
	return _swig_wrap_X_unsigned_meth__SWIG_2(arg1, arg2)
}

var _wrap_X_unsigned_meth__SWIG_3 unsafe.Pointer

func _swig_wrap_X_unsigned_meth__SWIG_3(base SwigcptrX_unsigned) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_unsigned_meth__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrX_unsigned) Meth__SWIG_3() (_swig_ret uint) {
	return _swig_wrap_X_unsigned_meth__SWIG_3(arg1)
}

func (p SwigcptrX_unsigned) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(uint); !ok {
			goto check_2
		}
		return p.Meth__SWIG_2(a[0].(uint))
	}
check_2:
	if argc == 1 {
		return p.Meth__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth__SWIG_0(a[0].(float64), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_X_unsigned unsafe.Pointer

func _swig_wrap_delete_X_unsigned(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X_unsigned, _swig_p)
	return
}

func DeleteX_unsigned(arg1 X_unsigned) {
	_swig_wrap_delete_X_unsigned(arg1.Swigcptr())
}

type X_unsigned interface {
	Swigcptr() uintptr
	SwigIsX_unsigned()
	Meth(a ...interface{}) interface{}
}

type SwigcptrY_unsigned uintptr

func (p SwigcptrY_unsigned) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrY_unsigned) SwigIsY_unsigned() {
}

var _wrap_Y_unsigned_meth_SWIG_0_0 unsafe.Pointer

func _swig_wrap_Y_unsigned_meth_SWIG_0_0(base SwigcptrY_unsigned, _ float64, _ uint) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_unsigned_meth_SWIG_0_0, _swig_p)
	return
}

func (arg1 SwigcptrY_unsigned) Meth_SWIG_0_0(arg2 float64, arg3 uint) (_swig_ret uint) {
	return _swig_wrap_Y_unsigned_meth_SWIG_0_0(arg1, arg2, arg3)
}

var _wrap_Y_unsigned_meth_SWIG_0_1 unsafe.Pointer

func _swig_wrap_Y_unsigned_meth_SWIG_0_1(base SwigcptrY_unsigned, _ float64) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_unsigned_meth_SWIG_0_1, _swig_p)
	return
}

func (arg1 SwigcptrY_unsigned) Meth_SWIG_0_1(arg2 float64) (_swig_ret uint) {
	return _swig_wrap_Y_unsigned_meth_SWIG_0_1(arg1, arg2)
}

var _wrap_Y_unsigned_meth_SWIG_0_2 unsafe.Pointer

func _swig_wrap_Y_unsigned_meth_SWIG_0_2(base SwigcptrY_unsigned, _ uint) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_unsigned_meth_SWIG_0_2, _swig_p)
	return
}

func (arg1 SwigcptrY_unsigned) Meth_SWIG_0_2(arg2 uint) (_swig_ret uint) {
	return _swig_wrap_Y_unsigned_meth_SWIG_0_2(arg1, arg2)
}

var _wrap_Y_unsigned_meth_SWIG_0_3 unsafe.Pointer

func _swig_wrap_Y_unsigned_meth_SWIG_0_3(base SwigcptrY_unsigned) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_unsigned_meth_SWIG_0_3, _swig_p)
	return
}

func (arg1 SwigcptrY_unsigned) Meth_SWIG_0_3() (_swig_ret uint) {
	return _swig_wrap_Y_unsigned_meth_SWIG_0_3(arg1)
}

func (p SwigcptrY_unsigned) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth_SWIG_0_3()
	}
	if argc == 1 {
		if _, ok := a[0].(uint); !ok {
			goto check_2
		}
		return p.Meth_SWIG_0_2(a[0].(uint))
	}
check_2:
	if argc == 1 {
		return p.Meth_SWIG_0_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth_SWIG_0_0(a[0].(float64), a[1].(uint))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Y_unsigned unsafe.Pointer

func _swig_wrap_new_Y_unsigned() (base SwigcptrY_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Y_unsigned, _swig_p)
	return
}

func NewY_unsigned() (_swig_ret Y_unsigned) {
	return _swig_wrap_new_Y_unsigned()
}

var _wrap_delete_Y_unsigned unsafe.Pointer

func _swig_wrap_delete_Y_unsigned(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Y_unsigned, _swig_p)
	return
}

func DeleteY_unsigned(arg1 Y_unsigned) {
	_swig_wrap_delete_Y_unsigned(arg1.Swigcptr())
}

type Y_unsigned interface {
	Swigcptr() uintptr
	SwigIsY_unsigned()
	Meth(a ...interface{}) interface{}
}

type SwigcptrX_hello_unsigned uintptr

func (p SwigcptrX_hello_unsigned) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX_hello_unsigned) SwigIsX_hello_unsigned() {
}

var _wrap_new_X_hello_unsigned__SWIG_0 unsafe.Pointer

func _swig_wrap_new_X_hello_unsigned__SWIG_0(base uintptr) (_ SwigcptrX_hello_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_hello_unsigned__SWIG_0, _swig_p)
	return
}

func NewX_hello_unsigned__SWIG_0(arg1 Hello_int) (_swig_ret X_hello_unsigned) {
	return _swig_wrap_new_X_hello_unsigned__SWIG_0(arg1.Swigcptr())
}

var _wrap_new_X_hello_unsigned__SWIG_1 unsafe.Pointer

func _swig_wrap_new_X_hello_unsigned__SWIG_1() (base SwigcptrX_hello_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_hello_unsigned__SWIG_1, _swig_p)
	return
}

func NewX_hello_unsigned__SWIG_1() (_swig_ret X_hello_unsigned) {
	return _swig_wrap_new_X_hello_unsigned__SWIG_1()
}

var _wrap_new_X_hello_unsigned__SWIG_2 unsafe.Pointer

func _swig_wrap_new_X_hello_unsigned__SWIG_2(base float64, _ uintptr) (_ SwigcptrX_hello_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_hello_unsigned__SWIG_2, _swig_p)
	return
}

func NewX_hello_unsigned__SWIG_2(arg1 float64, arg2 Hello_int) (_swig_ret X_hello_unsigned) {
	return _swig_wrap_new_X_hello_unsigned__SWIG_2(arg1, arg2.Swigcptr())
}

var _wrap_new_X_hello_unsigned__SWIG_3 unsafe.Pointer

func _swig_wrap_new_X_hello_unsigned__SWIG_3(base float64) (_ SwigcptrX_hello_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_hello_unsigned__SWIG_3, _swig_p)
	return
}

func NewX_hello_unsigned__SWIG_3(arg1 float64) (_swig_ret X_hello_unsigned) {
	return _swig_wrap_new_X_hello_unsigned__SWIG_3(arg1)
}

func NewX_hello_unsigned(a ...interface{}) X_hello_unsigned {
	argc := len(a)
	if argc == 0 {
		return NewX_hello_unsigned__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_2
		}
		return NewX_hello_unsigned__SWIG_0(a[0].(Hello_int))
	}
check_2:
	if argc == 1 {
		return NewX_hello_unsigned__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewX_hello_unsigned__SWIG_2(a[0].(float64), a[1].(Hello_int))
	}
	panic("No match for overloaded function call")
}

var _wrap_X_hello_unsigned_meth__SWIG_0 unsafe.Pointer

func _swig_wrap_X_hello_unsigned_meth__SWIG_0(base SwigcptrX_hello_unsigned, _ float64, _ uintptr) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_hello_unsigned_meth__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrX_hello_unsigned) Meth__SWIG_0(arg2 float64, arg3 Hello_int) (_swig_ret Hello_int) {
	return _swig_wrap_X_hello_unsigned_meth__SWIG_0(arg1, arg2, arg3.Swigcptr())
}

var _wrap_X_hello_unsigned_meth__SWIG_1 unsafe.Pointer

func _swig_wrap_X_hello_unsigned_meth__SWIG_1(base SwigcptrX_hello_unsigned, _ float64) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_hello_unsigned_meth__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrX_hello_unsigned) Meth__SWIG_1(arg2 float64) (_swig_ret Hello_int) {
	return _swig_wrap_X_hello_unsigned_meth__SWIG_1(arg1, arg2)
}

var _wrap_X_hello_unsigned_meth__SWIG_2 unsafe.Pointer

func _swig_wrap_X_hello_unsigned_meth__SWIG_2(base SwigcptrX_hello_unsigned, _ uintptr) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_hello_unsigned_meth__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrX_hello_unsigned) Meth__SWIG_2(arg2 Hello_int) (_swig_ret Hello_int) {
	return _swig_wrap_X_hello_unsigned_meth__SWIG_2(arg1, arg2.Swigcptr())
}

var _wrap_X_hello_unsigned_meth__SWIG_3 unsafe.Pointer

func _swig_wrap_X_hello_unsigned_meth__SWIG_3(base SwigcptrX_hello_unsigned) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_hello_unsigned_meth__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrX_hello_unsigned) Meth__SWIG_3() (_swig_ret Hello_int) {
	return _swig_wrap_X_hello_unsigned_meth__SWIG_3(arg1)
}

func (p SwigcptrX_hello_unsigned) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_2
		}
		return p.Meth__SWIG_2(a[0].(Hello_int))
	}
check_2:
	if argc == 1 {
		return p.Meth__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth__SWIG_0(a[0].(float64), a[1].(Hello_int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_X_hello_unsigned unsafe.Pointer

func _swig_wrap_delete_X_hello_unsigned(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X_hello_unsigned, _swig_p)
	return
}

func DeleteX_hello_unsigned(arg1 X_hello_unsigned) {
	_swig_wrap_delete_X_hello_unsigned(arg1.Swigcptr())
}

type X_hello_unsigned interface {
	Swigcptr() uintptr
	SwigIsX_hello_unsigned()
	Meth(a ...interface{}) interface{}
}

type SwigcptrY_hello_unsigned uintptr

func (p SwigcptrY_hello_unsigned) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrY_hello_unsigned) SwigIsY_hello_unsigned() {
}

var _wrap_Y_hello_unsigned_meth_SWIG_0_0 unsafe.Pointer

func _swig_wrap_Y_hello_unsigned_meth_SWIG_0_0(base SwigcptrY_hello_unsigned, _ float64, _ uintptr) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_hello_unsigned_meth_SWIG_0_0, _swig_p)
	return
}

func (arg1 SwigcptrY_hello_unsigned) Meth_SWIG_0_0(arg2 float64, arg3 Hello_int) (_swig_ret Hello_int) {
	return _swig_wrap_Y_hello_unsigned_meth_SWIG_0_0(arg1, arg2, arg3.Swigcptr())
}

var _wrap_Y_hello_unsigned_meth_SWIG_0_1 unsafe.Pointer

func _swig_wrap_Y_hello_unsigned_meth_SWIG_0_1(base SwigcptrY_hello_unsigned, _ float64) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_hello_unsigned_meth_SWIG_0_1, _swig_p)
	return
}

func (arg1 SwigcptrY_hello_unsigned) Meth_SWIG_0_1(arg2 float64) (_swig_ret Hello_int) {
	return _swig_wrap_Y_hello_unsigned_meth_SWIG_0_1(arg1, arg2)
}

var _wrap_Y_hello_unsigned_meth_SWIG_0_2 unsafe.Pointer

func _swig_wrap_Y_hello_unsigned_meth_SWIG_0_2(base SwigcptrY_hello_unsigned, _ uintptr) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_hello_unsigned_meth_SWIG_0_2, _swig_p)
	return
}

func (arg1 SwigcptrY_hello_unsigned) Meth_SWIG_0_2(arg2 Hello_int) (_swig_ret Hello_int) {
	return _swig_wrap_Y_hello_unsigned_meth_SWIG_0_2(arg1, arg2.Swigcptr())
}

var _wrap_Y_hello_unsigned_meth_SWIG_0_3 unsafe.Pointer

func _swig_wrap_Y_hello_unsigned_meth_SWIG_0_3(base SwigcptrY_hello_unsigned) (_ SwigcptrHello_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Y_hello_unsigned_meth_SWIG_0_3, _swig_p)
	return
}

func (arg1 SwigcptrY_hello_unsigned) Meth_SWIG_0_3() (_swig_ret Hello_int) {
	return _swig_wrap_Y_hello_unsigned_meth_SWIG_0_3(arg1)
}

func (p SwigcptrY_hello_unsigned) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth_SWIG_0_3()
	}
	if argc == 1 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_2
		}
		return p.Meth_SWIG_0_2(a[0].(Hello_int))
	}
check_2:
	if argc == 1 {
		return p.Meth_SWIG_0_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth_SWIG_0_0(a[0].(float64), a[1].(Hello_int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Y_hello_unsigned unsafe.Pointer

func _swig_wrap_new_Y_hello_unsigned() (base SwigcptrY_hello_unsigned) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Y_hello_unsigned, _swig_p)
	return
}

func NewY_hello_unsigned() (_swig_ret Y_hello_unsigned) {
	return _swig_wrap_new_Y_hello_unsigned()
}

var _wrap_delete_Y_hello_unsigned unsafe.Pointer

func _swig_wrap_delete_Y_hello_unsigned(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Y_hello_unsigned, _swig_p)
	return
}

func DeleteY_hello_unsigned(arg1 Y_hello_unsigned) {
	_swig_wrap_delete_Y_hello_unsigned(arg1.Swigcptr())
}

type Y_hello_unsigned interface {
	Swigcptr() uintptr
	SwigIsY_hello_unsigned()
	Meth(a ...interface{}) interface{}
}

type SwigcptrX_Foo_Foo_int uintptr

func (p SwigcptrX_Foo_Foo_int) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX_Foo_Foo_int) SwigIsX_Foo_Foo_int() {
}

var _wrap_new_X_Foo_Foo_int__SWIG_0 unsafe.Pointer

func _swig_wrap_new_X_Foo_Foo_int__SWIG_0(base uintptr) (_ SwigcptrX_Foo_Foo_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Foo_int__SWIG_0, _swig_p)
	return
}

func NewX_Foo_Foo_int__SWIG_0(arg1 Foo_Sl_Foo_Sl_int_Sg__Sg_) (_swig_ret X_Foo_Foo_int) {
	return _swig_wrap_new_X_Foo_Foo_int__SWIG_0(arg1.Swigcptr())
}

var _wrap_new_X_Foo_Foo_int__SWIG_1 unsafe.Pointer

func _swig_wrap_new_X_Foo_Foo_int__SWIG_1() (base SwigcptrX_Foo_Foo_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Foo_int__SWIG_1, _swig_p)
	return
}

func NewX_Foo_Foo_int__SWIG_1() (_swig_ret X_Foo_Foo_int) {
	return _swig_wrap_new_X_Foo_Foo_int__SWIG_1()
}

var _wrap_new_X_Foo_Foo_int__SWIG_2 unsafe.Pointer

func _swig_wrap_new_X_Foo_Foo_int__SWIG_2(base float64, _ uintptr) (_ SwigcptrX_Foo_Foo_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Foo_int__SWIG_2, _swig_p)
	return
}

func NewX_Foo_Foo_int__SWIG_2(arg1 float64, arg2 Foo_Sl_Foo_Sl_int_Sg__Sg_) (_swig_ret X_Foo_Foo_int) {
	return _swig_wrap_new_X_Foo_Foo_int__SWIG_2(arg1, arg2.Swigcptr())
}

var _wrap_new_X_Foo_Foo_int__SWIG_3 unsafe.Pointer

func _swig_wrap_new_X_Foo_Foo_int__SWIG_3(base float64) (_ SwigcptrX_Foo_Foo_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Foo_int__SWIG_3, _swig_p)
	return
}

func NewX_Foo_Foo_int__SWIG_3(arg1 float64) (_swig_ret X_Foo_Foo_int) {
	return _swig_wrap_new_X_Foo_Foo_int__SWIG_3(arg1)
}

func NewX_Foo_Foo_int(a ...interface{}) X_Foo_Foo_int {
	argc := len(a)
	if argc == 0 {
		return NewX_Foo_Foo_int__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo_Sl_Foo_Sl_int_Sg__Sg_); !ok {
			goto check_2
		}
		return NewX_Foo_Foo_int__SWIG_0(a[0].(Foo_Sl_Foo_Sl_int_Sg__Sg_))
	}
check_2:
	if argc == 1 {
		return NewX_Foo_Foo_int__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewX_Foo_Foo_int__SWIG_2(a[0].(float64), a[1].(Foo_Sl_Foo_Sl_int_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

var _wrap_X_Foo_Foo_int_meth__SWIG_0 unsafe.Pointer

func _swig_wrap_X_Foo_Foo_int_meth__SWIG_0(base SwigcptrX_Foo_Foo_int, _ float64, _ uintptr) (_ SwigcptrFoo_Sl_Foo_Sl_int_Sg__Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Foo_int_meth__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Foo_int) Meth__SWIG_0(arg2 float64, arg3 Foo_Sl_Foo_Sl_int_Sg__Sg_) (_swig_ret Foo_Sl_Foo_Sl_int_Sg__Sg_) {
	return _swig_wrap_X_Foo_Foo_int_meth__SWIG_0(arg1, arg2, arg3.Swigcptr())
}

var _wrap_X_Foo_Foo_int_meth__SWIG_1 unsafe.Pointer

func _swig_wrap_X_Foo_Foo_int_meth__SWIG_1(base SwigcptrX_Foo_Foo_int, _ float64) (_ SwigcptrFoo_Sl_Foo_Sl_int_Sg__Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Foo_int_meth__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Foo_int) Meth__SWIG_1(arg2 float64) (_swig_ret Foo_Sl_Foo_Sl_int_Sg__Sg_) {
	return _swig_wrap_X_Foo_Foo_int_meth__SWIG_1(arg1, arg2)
}

var _wrap_X_Foo_Foo_int_meth__SWIG_2 unsafe.Pointer

func _swig_wrap_X_Foo_Foo_int_meth__SWIG_2(base SwigcptrX_Foo_Foo_int, _ uintptr) (_ SwigcptrFoo_Sl_Foo_Sl_int_Sg__Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Foo_int_meth__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Foo_int) Meth__SWIG_2(arg2 Foo_Sl_Foo_Sl_int_Sg__Sg_) (_swig_ret Foo_Sl_Foo_Sl_int_Sg__Sg_) {
	return _swig_wrap_X_Foo_Foo_int_meth__SWIG_2(arg1, arg2.Swigcptr())
}

var _wrap_X_Foo_Foo_int_meth__SWIG_3 unsafe.Pointer

func _swig_wrap_X_Foo_Foo_int_meth__SWIG_3(base SwigcptrX_Foo_Foo_int) (_ SwigcptrFoo_Sl_Foo_Sl_int_Sg__Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Foo_int_meth__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Foo_int) Meth__SWIG_3() (_swig_ret Foo_Sl_Foo_Sl_int_Sg__Sg_) {
	return _swig_wrap_X_Foo_Foo_int_meth__SWIG_3(arg1)
}

func (p SwigcptrX_Foo_Foo_int) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo_Sl_Foo_Sl_int_Sg__Sg_); !ok {
			goto check_2
		}
		return p.Meth__SWIG_2(a[0].(Foo_Sl_Foo_Sl_int_Sg__Sg_))
	}
check_2:
	if argc == 1 {
		return p.Meth__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth__SWIG_0(a[0].(float64), a[1].(Foo_Sl_Foo_Sl_int_Sg__Sg_))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_X_Foo_Foo_int unsafe.Pointer

func _swig_wrap_delete_X_Foo_Foo_int(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X_Foo_Foo_int, _swig_p)
	return
}

func DeleteX_Foo_Foo_int(arg1 X_Foo_Foo_int) {
	_swig_wrap_delete_X_Foo_Foo_int(arg1.Swigcptr())
}

type X_Foo_Foo_int interface {
	Swigcptr() uintptr
	SwigIsX_Foo_Foo_int()
	Meth(a ...interface{}) interface{}
}

type SwigcptrZ_8 uintptr

func (p SwigcptrZ_8) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrZ_8) SwigIsZ_8() {
}

var _wrap_new_Z_8__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Z_8__SWIG_0(base int) (_ SwigcptrZ_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Z_8__SWIG_0, _swig_p)
	return
}

func NewZ_8__SWIG_0(arg1 int) (_swig_ret Z_8) {
	return _swig_wrap_new_Z_8__SWIG_0(arg1)
}

var _wrap_new_Z_8__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Z_8__SWIG_1() (base SwigcptrZ_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Z_8__SWIG_1, _swig_p)
	return
}

func NewZ_8__SWIG_1() (_swig_ret Z_8) {
	return _swig_wrap_new_Z_8__SWIG_1()
}

var _wrap_new_Z_8__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Z_8__SWIG_2(base float64, _ int) (_ SwigcptrZ_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Z_8__SWIG_2, _swig_p)
	return
}

func NewZ_8__SWIG_2(arg1 float64, arg2 int) (_swig_ret Z_8) {
	return _swig_wrap_new_Z_8__SWIG_2(arg1, arg2)
}

var _wrap_new_Z_8__SWIG_3 unsafe.Pointer

func _swig_wrap_new_Z_8__SWIG_3(base float64) (_ SwigcptrZ_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Z_8__SWIG_3, _swig_p)
	return
}

func NewZ_8__SWIG_3(arg1 float64) (_swig_ret Z_8) {
	return _swig_wrap_new_Z_8__SWIG_3(arg1)
}

func NewZ_8(a ...interface{}) Z_8 {
	argc := len(a)
	if argc == 0 {
		return NewZ_8__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewZ_8__SWIG_0(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewZ_8__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewZ_8__SWIG_2(a[0].(float64), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Z_8 unsafe.Pointer

func _swig_wrap_delete_Z_8(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Z_8, _swig_p)
	return
}

func DeleteZ_8(arg1 Z_8) {
	_swig_wrap_delete_Z_8(arg1.Swigcptr())
}

type Z_8 interface {
	Swigcptr() uintptr
	SwigIsZ_8()
}

type SwigcptrFoo_Z_8 uintptr

func (p SwigcptrFoo_Z_8) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo_Z_8) SwigIsFoo_Z_8() {
}

var _wrap_new_Foo_Z_8__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Foo_Z_8__SWIG_0(base uint) (_ SwigcptrFoo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo_Z_8__SWIG_0, _swig_p)
	return
}

func NewFoo_Z_8__SWIG_0(arg1 uint) (_swig_ret Foo_Z_8) {
	return _swig_wrap_new_Foo_Z_8__SWIG_0(arg1)
}

var _wrap_new_Foo_Z_8__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Foo_Z_8__SWIG_1() (base SwigcptrFoo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo_Z_8__SWIG_1, _swig_p)
	return
}

func NewFoo_Z_8__SWIG_1() (_swig_ret Foo_Z_8) {
	return _swig_wrap_new_Foo_Z_8__SWIG_1()
}

func NewFoo_Z_8(a ...interface{}) Foo_Z_8 {
	argc := len(a)
	if argc == 0 {
		return NewFoo_Z_8__SWIG_1()
	}
	if argc == 1 {
		return NewFoo_Z_8__SWIG_0(a[0].(uint))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Foo_Z_8 unsafe.Pointer

func _swig_wrap_delete_Foo_Z_8(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo_Z_8, _swig_p)
	return
}

func DeleteFoo_Z_8(arg1 Foo_Z_8) {
	_swig_wrap_delete_Foo_Z_8(arg1.Swigcptr())
}

type Foo_Z_8 interface {
	Swigcptr() uintptr
	SwigIsFoo_Z_8()
}

type SwigcptrX_Foo_Z_8 uintptr

func (p SwigcptrX_Foo_Z_8) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrX_Foo_Z_8) SwigIsX_Foo_Z_8() {
}

var _wrap_new_X_Foo_Z_8__SWIG_0 unsafe.Pointer

func _swig_wrap_new_X_Foo_Z_8__SWIG_0(base uintptr) (_ SwigcptrX_Foo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Z_8__SWIG_0, _swig_p)
	return
}

func NewX_Foo_Z_8__SWIG_0(arg1 Foo_Z_8) (_swig_ret X_Foo_Z_8) {
	return _swig_wrap_new_X_Foo_Z_8__SWIG_0(arg1.Swigcptr())
}

var _wrap_new_X_Foo_Z_8__SWIG_1 unsafe.Pointer

func _swig_wrap_new_X_Foo_Z_8__SWIG_1() (base SwigcptrX_Foo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Z_8__SWIG_1, _swig_p)
	return
}

func NewX_Foo_Z_8__SWIG_1() (_swig_ret X_Foo_Z_8) {
	return _swig_wrap_new_X_Foo_Z_8__SWIG_1()
}

var _wrap_new_X_Foo_Z_8__SWIG_2 unsafe.Pointer

func _swig_wrap_new_X_Foo_Z_8__SWIG_2(base float64, _ uintptr) (_ SwigcptrX_Foo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Z_8__SWIG_2, _swig_p)
	return
}

func NewX_Foo_Z_8__SWIG_2(arg1 float64, arg2 Foo_Z_8) (_swig_ret X_Foo_Z_8) {
	return _swig_wrap_new_X_Foo_Z_8__SWIG_2(arg1, arg2.Swigcptr())
}

var _wrap_new_X_Foo_Z_8__SWIG_3 unsafe.Pointer

func _swig_wrap_new_X_Foo_Z_8__SWIG_3(base float64) (_ SwigcptrX_Foo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_X_Foo_Z_8__SWIG_3, _swig_p)
	return
}

func NewX_Foo_Z_8__SWIG_3(arg1 float64) (_swig_ret X_Foo_Z_8) {
	return _swig_wrap_new_X_Foo_Z_8__SWIG_3(arg1)
}

func NewX_Foo_Z_8(a ...interface{}) X_Foo_Z_8 {
	argc := len(a)
	if argc == 0 {
		return NewX_Foo_Z_8__SWIG_1()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo_Z_8); !ok {
			goto check_2
		}
		return NewX_Foo_Z_8__SWIG_0(a[0].(Foo_Z_8))
	}
check_2:
	if argc == 1 {
		return NewX_Foo_Z_8__SWIG_3(a[0].(float64))
	}
	if argc == 2 {
		return NewX_Foo_Z_8__SWIG_2(a[0].(float64), a[1].(Foo_Z_8))
	}
	panic("No match for overloaded function call")
}

var _wrap_X_Foo_Z_8_meth__SWIG_0 unsafe.Pointer

func _swig_wrap_X_Foo_Z_8_meth__SWIG_0(base SwigcptrX_Foo_Z_8, _ float64, _ uintptr) (_ SwigcptrFoo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Z_8_meth__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Z_8) Meth__SWIG_0(arg2 float64, arg3 Foo_Z_8) (_swig_ret Foo_Z_8) {
	return _swig_wrap_X_Foo_Z_8_meth__SWIG_0(arg1, arg2, arg3.Swigcptr())
}

var _wrap_X_Foo_Z_8_meth__SWIG_1 unsafe.Pointer

func _swig_wrap_X_Foo_Z_8_meth__SWIG_1(base SwigcptrX_Foo_Z_8, _ float64) (_ SwigcptrFoo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Z_8_meth__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Z_8) Meth__SWIG_1(arg2 float64) (_swig_ret Foo_Z_8) {
	return _swig_wrap_X_Foo_Z_8_meth__SWIG_1(arg1, arg2)
}

var _wrap_X_Foo_Z_8_meth__SWIG_2 unsafe.Pointer

func _swig_wrap_X_Foo_Z_8_meth__SWIG_2(base SwigcptrX_Foo_Z_8, _ uintptr) (_ SwigcptrFoo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Z_8_meth__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Z_8) Meth__SWIG_2(arg2 Foo_Z_8) (_swig_ret Foo_Z_8) {
	return _swig_wrap_X_Foo_Z_8_meth__SWIG_2(arg1, arg2.Swigcptr())
}

var _wrap_X_Foo_Z_8_meth__SWIG_3 unsafe.Pointer

func _swig_wrap_X_Foo_Z_8_meth__SWIG_3(base SwigcptrX_Foo_Z_8) (_ SwigcptrFoo_Z_8) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_X_Foo_Z_8_meth__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrX_Foo_Z_8) Meth__SWIG_3() (_swig_ret Foo_Z_8) {
	return _swig_wrap_X_Foo_Z_8_meth__SWIG_3(arg1)
}

func (p SwigcptrX_Foo_Z_8) Meth(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return p.Meth__SWIG_3()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo_Z_8); !ok {
			goto check_2
		}
		return p.Meth__SWIG_2(a[0].(Foo_Z_8))
	}
check_2:
	if argc == 1 {
		return p.Meth__SWIG_1(a[0].(float64))
	}
	if argc == 2 {
		return p.Meth__SWIG_0(a[0].(float64), a[1].(Foo_Z_8))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_X_Foo_Z_8 unsafe.Pointer

func _swig_wrap_delete_X_Foo_Z_8(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_X_Foo_Z_8, _swig_p)
	return
}

func DeleteX_Foo_Z_8(arg1 X_Foo_Z_8) {
	_swig_wrap_delete_X_Foo_Z_8(arg1.Swigcptr())
}

type X_Foo_Z_8 interface {
	Swigcptr() uintptr
	SwigIsX_Foo_Z_8()
	Meth(a ...interface{}) interface{}
}

type SwigcptrBar uintptr

func (p SwigcptrBar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBar) SwigIsBar() {
}

var _wrap_new_Bar unsafe.Pointer

func _swig_wrap_new_Bar(base uint) (_ SwigcptrBar) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bar, _swig_p)
	return
}

func NewBar(arg1 uint) (_swig_ret Bar) {
	return _swig_wrap_new_Bar(arg1)
}

var _wrap_delete_Bar unsafe.Pointer

func _swig_wrap_delete_Bar(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Bar, _swig_p)
	return
}

func DeleteBar(arg1 Bar) {
	_swig_wrap_delete_Bar(arg1.Swigcptr())
}

var _wrap_Bar_foo__SWIG_0 unsafe.Pointer

func _swig_wrap_Bar_foo__SWIG_0(base SwigcptrBar, _ Hello_Sl_int_Sg_Hi) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_foo__SWIG_0, _swig_p)
	return
}

func (_swig_base SwigcptrBar) Foo__SWIG_0(arg1 Hello_Sl_int_Sg_Hi) {
	_swig_wrap_Bar_foo__SWIG_0(_swig_base, arg1)
}

var _wrap_Bar_foo__SWIG_1 unsafe.Pointer

func _swig_wrap_Bar_foo__SWIG_1(base SwigcptrBar) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_foo__SWIG_1, _swig_p)
	return
}

func (_swig_base SwigcptrBar) Foo__SWIG_1() {
	_swig_wrap_Bar_foo__SWIG_1(_swig_base)
}

func (p SwigcptrBar) Foo(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Foo__SWIG_1()
		return
	}
	if argc == 1 {
		p.Foo__SWIG_0(a[0].(Hello_Sl_int_Sg_Hi))
		return
	}
	panic("No match for overloaded function call")
}

func (p SwigcptrBar) SwigIsHello_int() {
}

func (p SwigcptrBar) SwigGetHello_int() Hello_int {
	return SwigcptrHello_int(p.Swigcptr())
}

type Bar interface {
	Swigcptr() uintptr
	SwigIsBar()
	Foo(a ...interface{})
	SwigIsHello_int()
	SwigGetHello_int() Hello_int
}

var _wrap_ott__SWIG_6 unsafe.Pointer

func _swig_wrap_ott__SWIG_6(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_6, _swig_p)
	return
}

func Ott__SWIG_6(arg1 Foo_int) (_swig_ret int) {
	return _swig_wrap_ott__SWIG_6(arg1.Swigcptr())
}

var _wrap_ott__SWIG_10 unsafe.Pointer

func Ott__SWIG_10(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_10, _swig_p)
	return
}
var _wrap_ott__SWIG_11 unsafe.Pointer

func Ott__SWIG_11(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_11, _swig_p)
	return
}
var _wrap_ott__SWIG_12 unsafe.Pointer

func Ott__SWIG_12() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_12, _swig_p)
	return
}
var _wrap_ott__SWIG_13 unsafe.Pointer

func Ott__SWIG_13(arg1 string, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_13, _swig_p)
	return
}
var _wrap_ott__SWIG_14 unsafe.Pointer

func Ott__SWIG_14(arg1 string, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_14, _swig_p)
	return
}
var _wrap_ott__SWIG_15 unsafe.Pointer

func Ott__SWIG_15(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_15, _swig_p)
	return
}
var _wrap_ott__SWIG_16 unsafe.Pointer

func _swig_wrap_ott__SWIG_16(base uintptr, _ float64) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_16, _swig_p)
	return
}

func Ott__SWIG_16(arg1 Hello_int, arg2 float64) (_swig_ret int) {
	return _swig_wrap_ott__SWIG_16(arg1.Swigcptr(), arg2)
}

var _wrap_ott__SWIG_17 unsafe.Pointer

func _swig_wrap_ott__SWIG_17(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ott__SWIG_17, _swig_p)
	return
}

func Ott__SWIG_17(arg1 Hello_int) (_swig_ret int) {
	return _swig_wrap_ott__SWIG_17(arg1.Swigcptr())
}

func Ott(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Ott__SWIG_12()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo_int); !ok {
			goto check_2
		}
		return Ott__SWIG_6(a[0].(Foo_int))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_3
		}
		return Ott__SWIG_17(a[0].(Hello_int))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		return Ott__SWIG_11(a[0].(int))
	}
check_4:
	if argc == 1 {
		return Ott__SWIG_15(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_6
		}
		if _, ok := a[1].(float64); !ok {
			goto check_6
		}
		return Ott__SWIG_16(a[0].(Hello_int), a[1].(float64))
	}
check_6:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_7
		}
		return Ott__SWIG_10(a[0].(int), a[1].(int))
	}
check_7:
	if argc == 2 {
		return Ott__SWIG_14(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return Ott__SWIG_13(a[0].(string), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_ottint__SWIG_0 unsafe.Pointer

func _swig_wrap_ottint__SWIG_0(base uintptr, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ottint__SWIG_0, _swig_p)
	return
}

func Ottint__SWIG_0(arg1 Hello_int, arg2 int) (_swig_ret int) {
	return _swig_wrap_ottint__SWIG_0(arg1.Swigcptr(), arg2)
}

var _wrap_ottint__SWIG_1 unsafe.Pointer

func _swig_wrap_ottint__SWIG_1(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ottint__SWIG_1, _swig_p)
	return
}

func Ottint__SWIG_1(arg1 Hello_int) (_swig_ret int) {
	return _swig_wrap_ottint__SWIG_1(arg1.Swigcptr())
}

func Ottint(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return Ottint__SWIG_1(a[0].(Hello_int))
	}
	if argc == 2 {
		return Ottint__SWIG_0(a[0].(Hello_int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_ottstring__SWIG_0 unsafe.Pointer

func _swig_wrap_ottstring__SWIG_0(base uintptr, _ string) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ottstring__SWIG_0, _swig_p)
	return
}

func Ottstring__SWIG_0(arg1 Hello_int, arg2 string) (_swig_ret int) {
	return _swig_wrap_ottstring__SWIG_0(arg1.Swigcptr(), arg2)
}

var _wrap_ottstring__SWIG_1 unsafe.Pointer

func _swig_wrap_ottstring__SWIG_1(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ottstring__SWIG_1, _swig_p)
	return
}

func Ottstring__SWIG_1(arg1 Hello_int) (_swig_ret int) {
	return _swig_wrap_ottstring__SWIG_1(arg1.Swigcptr())
}

func Ottstring(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return Ottstring__SWIG_1(a[0].(Hello_int))
	}
	if argc == 2 {
		return Ottstring__SWIG_0(a[0].(Hello_int), a[1].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_nsott__SWIG_6 unsafe.Pointer

func _swig_wrap_nsott__SWIG_6(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_6, _swig_p)
	return
}

func Nsott__SWIG_6(arg1 Foo_int) (_swig_ret int) {
	return _swig_wrap_nsott__SWIG_6(arg1.Swigcptr())
}

var _wrap_nsott__SWIG_10 unsafe.Pointer

func Nsott__SWIG_10(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_10, _swig_p)
	return
}
var _wrap_nsott__SWIG_11 unsafe.Pointer

func Nsott__SWIG_11(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_11, _swig_p)
	return
}
var _wrap_nsott__SWIG_12 unsafe.Pointer

func Nsott__SWIG_12() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_12, _swig_p)
	return
}
var _wrap_nsott__SWIG_13 unsafe.Pointer

func Nsott__SWIG_13(arg1 string, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_13, _swig_p)
	return
}
var _wrap_nsott__SWIG_14 unsafe.Pointer

func Nsott__SWIG_14(arg1 string, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_14, _swig_p)
	return
}
var _wrap_nsott__SWIG_15 unsafe.Pointer

func Nsott__SWIG_15(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_15, _swig_p)
	return
}
var _wrap_nsott__SWIG_16 unsafe.Pointer

func _swig_wrap_nsott__SWIG_16(base uintptr, _ float64) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_16, _swig_p)
	return
}

func Nsott__SWIG_16(arg1 Hello_int, arg2 float64) (_swig_ret int) {
	return _swig_wrap_nsott__SWIG_16(arg1.Swigcptr(), arg2)
}

var _wrap_nsott__SWIG_17 unsafe.Pointer

func _swig_wrap_nsott__SWIG_17(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsott__SWIG_17, _swig_p)
	return
}

func Nsott__SWIG_17(arg1 Hello_int) (_swig_ret int) {
	return _swig_wrap_nsott__SWIG_17(arg1.Swigcptr())
}

func Nsott(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Nsott__SWIG_12()
	}
	if argc == 1 {
		if _, ok := a[0].(Foo_int); !ok {
			goto check_2
		}
		return Nsott__SWIG_6(a[0].(Foo_int))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_3
		}
		return Nsott__SWIG_17(a[0].(Hello_int))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		return Nsott__SWIG_11(a[0].(int))
	}
check_4:
	if argc == 1 {
		return Nsott__SWIG_15(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(Hello_int); !ok {
			goto check_6
		}
		if _, ok := a[1].(float64); !ok {
			goto check_6
		}
		return Nsott__SWIG_16(a[0].(Hello_int), a[1].(float64))
	}
check_6:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_7
		}
		return Nsott__SWIG_10(a[0].(int), a[1].(int))
	}
check_7:
	if argc == 2 {
		return Nsott__SWIG_14(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return Nsott__SWIG_13(a[0].(string), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_nsottint__SWIG_0 unsafe.Pointer

func _swig_wrap_nsottint__SWIG_0(base uintptr, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsottint__SWIG_0, _swig_p)
	return
}

func Nsottint__SWIG_0(arg1 Hello_int, arg2 int) (_swig_ret int) {
	return _swig_wrap_nsottint__SWIG_0(arg1.Swigcptr(), arg2)
}

var _wrap_nsottint__SWIG_1 unsafe.Pointer

func _swig_wrap_nsottint__SWIG_1(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsottint__SWIG_1, _swig_p)
	return
}

func Nsottint__SWIG_1(arg1 Hello_int) (_swig_ret int) {
	return _swig_wrap_nsottint__SWIG_1(arg1.Swigcptr())
}

func Nsottint(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return Nsottint__SWIG_1(a[0].(Hello_int))
	}
	if argc == 2 {
		return Nsottint__SWIG_0(a[0].(Hello_int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_nsottstring__SWIG_0 unsafe.Pointer

func _swig_wrap_nsottstring__SWIG_0(base uintptr, _ string) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsottstring__SWIG_0, _swig_p)
	return
}

func Nsottstring__SWIG_0(arg1 Hello_int, arg2 string) (_swig_ret int) {
	return _swig_wrap_nsottstring__SWIG_0(arg1.Swigcptr(), arg2)
}

var _wrap_nsottstring__SWIG_1 unsafe.Pointer

func _swig_wrap_nsottstring__SWIG_1(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsottstring__SWIG_1, _swig_p)
	return
}

func Nsottstring__SWIG_1(arg1 Hello_int) (_swig_ret int) {
	return _swig_wrap_nsottstring__SWIG_1(arg1.Swigcptr())
}

func Nsottstring(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return Nsottstring__SWIG_1(a[0].(Hello_int))
	}
	if argc == 2 {
		return Nsottstring__SWIG_0(a[0].(Hello_int), a[1].(string))
	}
	panic("No match for overloaded function call")
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrFoo_Sl_Foo_Sl_int_Sg__Sg_ uintptr
type Foo_Sl_Foo_Sl_int_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrFoo_Sl_Foo_Sl_int_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

