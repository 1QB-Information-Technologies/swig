/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../overload_template.i

package overload_template

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_foo__SWIG_0 unsafe.Pointer

func Foo__SWIG_0() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_0, _swig_p)
	return
}
var _wrap_foo__SWIG_2 unsafe.Pointer

func Foo__SWIG_2(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_2, _swig_p)
	return
}
var _wrap_foo__SWIG_3 unsafe.Pointer

func Foo__SWIG_3(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_3, _swig_p)
	return
}
func Foo(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Foo__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return Foo__SWIG_2(a[0].(int))
	}
check_2:
	if argc == 1 {
		return Foo__SWIG_3(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_maximum__SWIG_1 unsafe.Pointer

func Maximum__SWIG_1(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maximum__SWIG_1, _swig_p)
	return
}
var _wrap_maximum__SWIG_2 unsafe.Pointer

func Maximum__SWIG_2(arg1 float64, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_maximum__SWIG_2, _swig_p)
	return
}
func Maximum(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		if _, ok := a[1].(int); !ok {
			goto check_1
		}
		return Maximum__SWIG_1(a[0].(int), a[1].(int))
	}
check_1:
	if argc == 2 {
		return Maximum__SWIG_2(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_mix1__SWIG_0 unsafe.Pointer

func Mix1__SWIG_0(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix1__SWIG_0, _swig_p)
	return
}
var _wrap_mix1__SWIG_3 unsafe.Pointer

func Mix1__SWIG_3(arg1 float64, arg2 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix1__SWIG_3, _swig_p)
	return
}
var _wrap_mix1__SWIG_4 unsafe.Pointer

func Mix1__SWIG_4(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix1__SWIG_4, _swig_p)
	return
}
func Mix1(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_1
		}
		return Mix1__SWIG_4(a[0].(float64))
	}
check_1:
	if argc == 1 {
		return Mix1__SWIG_0(a[0].(string))
	}
	if argc == 2 {
		return Mix1__SWIG_3(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_mix2__SWIG_1 unsafe.Pointer

func Mix2__SWIG_1(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix2__SWIG_1, _swig_p)
	return
}
var _wrap_mix2__SWIG_3 unsafe.Pointer

func Mix2__SWIG_3(arg1 float64, arg2 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix2__SWIG_3, _swig_p)
	return
}
var _wrap_mix2__SWIG_4 unsafe.Pointer

func Mix2__SWIG_4(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix2__SWIG_4, _swig_p)
	return
}
func Mix2(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_1
		}
		return Mix2__SWIG_4(a[0].(float64))
	}
check_1:
	if argc == 1 {
		return Mix2__SWIG_1(a[0].(string))
	}
	if argc == 2 {
		return Mix2__SWIG_3(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_mix3__SWIG_2 unsafe.Pointer

func Mix3__SWIG_2(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix3__SWIG_2, _swig_p)
	return
}
var _wrap_mix3__SWIG_3 unsafe.Pointer

func Mix3__SWIG_3(arg1 float64, arg2 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix3__SWIG_3, _swig_p)
	return
}
var _wrap_mix3__SWIG_4 unsafe.Pointer

func Mix3__SWIG_4(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mix3__SWIG_4, _swig_p)
	return
}
func Mix3(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_1
		}
		return Mix3__SWIG_4(a[0].(float64))
	}
check_1:
	if argc == 1 {
		return Mix3__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		return Mix3__SWIG_3(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_overtparams1__SWIG_2 unsafe.Pointer

func Overtparams1__SWIG_2(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overtparams1__SWIG_2, _swig_p)
	return
}
var _wrap_overtparams1__SWIG_3 unsafe.Pointer

func Overtparams1__SWIG_3(arg1 float64, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overtparams1__SWIG_3, _swig_p)
	return
}
func Overtparams1(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		return Overtparams1__SWIG_2(a[0].(int))
	}
	if argc == 2 {
		return Overtparams1__SWIG_3(a[0].(float64), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_overtparams2 unsafe.Pointer

func Overtparams2(arg1 float64, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overtparams2, _swig_p)
	return
}
var _wrap_overloaded__SWIG_1 unsafe.Pointer

func Overloaded__SWIG_1() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_overloaded__SWIG_1, _swig_p)
	return
}
var _wrap_overloaded__SWIG_3 unsafe.Pointer

func Overloaded__SWIG_3(arg1 float64, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overloaded__SWIG_3, _swig_p)
	return
}
func Overloaded(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Overloaded__SWIG_1()
	}
	if argc == 2 {
		return Overloaded__SWIG_3(a[0].(float64), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_overloadedagain__SWIG_0 unsafe.Pointer

func Overloadedagain__SWIG_0(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overloadedagain__SWIG_0, _swig_p)
	return
}
var _wrap_overloadedagain__SWIG_3 unsafe.Pointer

func Overloadedagain__SWIG_3() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_overloadedagain__SWIG_3, _swig_p)
	return
}
func Overloadedagain(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Overloadedagain__SWIG_3()
	}
	if argc == 1 {
		return Overloadedagain__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_xyz unsafe.Pointer

func _swig_wrap_xyz() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_xyz, _swig_p)
	return
}

func Xyz() {
	_swig_wrap_xyz()
}

var _wrap_xyz_double unsafe.Pointer

func _swig_wrap_xyz_double() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_xyz_double, _swig_p)
	return
}

func Xyz_double() {
	_swig_wrap_xyz_double()
}

var _wrap_xyz_int unsafe.Pointer

func _swig_wrap_xyz_int() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_xyz_int, _swig_p)
	return
}

func Xyz_int() {
	_swig_wrap_xyz_int()
}

var _wrap_specialization__SWIG_4 unsafe.Pointer

func Specialization__SWIG_4(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_specialization__SWIG_4, _swig_p)
	return
}
var _wrap_specialization__SWIG_5 unsafe.Pointer

func Specialization__SWIG_5(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_specialization__SWIG_5, _swig_p)
	return
}
var _wrap_specialization__SWIG_6 unsafe.Pointer

func Specialization__SWIG_6(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_specialization__SWIG_6, _swig_p)
	return
}
var _wrap_specialization__SWIG_7 unsafe.Pointer

func Specialization__SWIG_7(arg1 float64, arg2 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_specialization__SWIG_7, _swig_p)
	return
}
var _wrap_specialization__SWIG_8 unsafe.Pointer

func Specialization__SWIG_8(arg1 string, arg2 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_specialization__SWIG_8, _swig_p)
	return
}
func Specialization(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return Specialization__SWIG_4(a[0].(int))
	}
check_1:
	if argc == 1 {
		return Specialization__SWIG_5(a[0].(float64))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_3
		}
		if _, ok := a[1].(int); !ok {
			goto check_3
		}
		return Specialization__SWIG_6(a[0].(int), a[1].(int))
	}
check_3:
	if argc == 2 {
		if _, ok := a[0].(float64); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return Specialization__SWIG_7(a[0].(float64), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return Specialization__SWIG_8(a[0].(string), a[1].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_overload__SWIG_0 unsafe.Pointer

func Overload__SWIG_0(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_0, _swig_p)
	return
}
var _wrap_overload__SWIG_4 unsafe.Pointer

func Overload__SWIG_4() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_4, _swig_p)
	return
}
type SwigcptrKlass uintptr

func (p SwigcptrKlass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKlass) SwigIsKlass() {
}

var _wrap_new_Klass unsafe.Pointer

func _swig_wrap_new_Klass() (base SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Klass, _swig_p)
	return
}

func NewKlass() (_swig_ret Klass) {
	return _swig_wrap_new_Klass()
}

var _wrap_delete_Klass unsafe.Pointer

func _swig_wrap_delete_Klass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Klass, _swig_p)
	return
}

func DeleteKlass(arg1 Klass) {
	_swig_wrap_delete_Klass(arg1.Swigcptr())
}

type Klass interface {
	Swigcptr() uintptr
	SwigIsKlass()
}

var _wrap_overload__SWIG_5 unsafe.Pointer

func Overload__SWIG_5(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_5, _swig_p)
	return
}
var _wrap_overload__SWIG_6 unsafe.Pointer

func Overload__SWIG_6(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_6, _swig_p)
	return
}
var _wrap_overload__SWIG_7 unsafe.Pointer

func Overload__SWIG_7(arg1 int, arg2 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_7, _swig_p)
	return
}
var _wrap_overload__SWIG_8 unsafe.Pointer

func _swig_wrap_overload__SWIG_8(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_8, _swig_p)
	return
}

func Overload__SWIG_8(arg1 Klass) (_swig_ret int) {
	return _swig_wrap_overload__SWIG_8(arg1.Swigcptr())
}

var _wrap_overload__SWIG_9 unsafe.Pointer

func _swig_wrap_overload__SWIG_9(base uintptr, _ uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_9, _swig_p)
	return
}

func Overload__SWIG_9(arg1 Klass, arg2 Klass) (_swig_ret int) {
	return _swig_wrap_overload__SWIG_9(arg1.Swigcptr(), arg2.Swigcptr())
}

var _wrap_overload__SWIG_10 unsafe.Pointer

func _swig_wrap_overload__SWIG_10(base uintptr, _ string) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_10, _swig_p)
	return
}

func Overload__SWIG_10(arg1 Klass, arg2 string) (_swig_ret int) {
	return _swig_wrap_overload__SWIG_10(arg1.Swigcptr(), arg2)
}

var _wrap_overload__SWIG_11 unsafe.Pointer

func Overload__SWIG_11(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_11, _swig_p)
	return
}
var _wrap_overload__SWIG_12 unsafe.Pointer

func Overload__SWIG_12(arg1 float64, arg2 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_12, _swig_p)
	return
}
var _wrap_overload__SWIG_13 unsafe.Pointer

func Overload__SWIG_13(arg1 float64, arg2 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_overload__SWIG_13, _swig_p)
	return
}
func Overload(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Overload__SWIG_4()
	}
	if argc == 1 {
		if _, ok := a[0].(Klass); !ok {
			goto check_2
		}
		return Overload__SWIG_8(a[0].(Klass))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_3
		}
		return Overload__SWIG_5(a[0].(int))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_4
		}
		return Overload__SWIG_11(a[0].(float64))
	}
check_4:
	if argc == 1 {
		return Overload__SWIG_0(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(Klass); !ok {
			goto check_6
		}
		if _, ok := a[1].(Klass); !ok {
			goto check_6
		}
		return Overload__SWIG_9(a[0].(Klass), a[1].(Klass))
	}
check_6:
	if argc == 2 {
		if _, ok := a[0].(Klass); !ok {
			goto check_7
		}
		if _, ok := a[1].(string); !ok {
			goto check_7
		}
		return Overload__SWIG_10(a[0].(Klass), a[1].(string))
	}
check_7:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_8
		}
		if _, ok := a[1].(int); !ok {
			goto check_8
		}
		return Overload__SWIG_6(a[0].(int), a[1].(int))
	}
check_8:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_9
		}
		if _, ok := a[1].(string); !ok {
			goto check_9
		}
		return Overload__SWIG_7(a[0].(int), a[1].(string))
	}
check_9:
	if argc == 2 {
		if _, ok := a[1].(float64); !ok {
			goto check_10
		}
		return Overload__SWIG_12(a[0].(float64), a[1].(float64))
	}
check_10:
	if argc == 2 {
		return Overload__SWIG_13(a[0].(float64), a[1].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_nsoverload__SWIG_0 unsafe.Pointer

func Nsoverload__SWIG_0(arg1 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_0, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_4 unsafe.Pointer

func Nsoverload__SWIG_4() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_4, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_5 unsafe.Pointer

func Nsoverload__SWIG_5(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_5, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_6 unsafe.Pointer

func Nsoverload__SWIG_6(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_6, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_7 unsafe.Pointer

func Nsoverload__SWIG_7(arg1 int, arg2 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_7, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_8 unsafe.Pointer

func _swig_wrap_nsoverload__SWIG_8(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_8, _swig_p)
	return
}

func Nsoverload__SWIG_8(arg1 Klass) (_swig_ret int) {
	return _swig_wrap_nsoverload__SWIG_8(arg1.Swigcptr())
}

var _wrap_nsoverload__SWIG_9 unsafe.Pointer

func _swig_wrap_nsoverload__SWIG_9(base uintptr, _ uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_9, _swig_p)
	return
}

func Nsoverload__SWIG_9(arg1 Klass, arg2 Klass) (_swig_ret int) {
	return _swig_wrap_nsoverload__SWIG_9(arg1.Swigcptr(), arg2.Swigcptr())
}

var _wrap_nsoverload__SWIG_10 unsafe.Pointer

func _swig_wrap_nsoverload__SWIG_10(base uintptr, _ string) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_10, _swig_p)
	return
}

func Nsoverload__SWIG_10(arg1 Klass, arg2 string) (_swig_ret int) {
	return _swig_wrap_nsoverload__SWIG_10(arg1.Swigcptr(), arg2)
}

var _wrap_nsoverload__SWIG_11 unsafe.Pointer

func Nsoverload__SWIG_11(arg1 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_11, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_12 unsafe.Pointer

func Nsoverload__SWIG_12(arg1 float64, arg2 float64) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_12, _swig_p)
	return
}
var _wrap_nsoverload__SWIG_13 unsafe.Pointer

func Nsoverload__SWIG_13(arg1 float64, arg2 string) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nsoverload__SWIG_13, _swig_p)
	return
}
func Nsoverload(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Nsoverload__SWIG_4()
	}
	if argc == 1 {
		if _, ok := a[0].(Klass); !ok {
			goto check_2
		}
		return Nsoverload__SWIG_8(a[0].(Klass))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_3
		}
		return Nsoverload__SWIG_5(a[0].(int))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_4
		}
		return Nsoverload__SWIG_11(a[0].(float64))
	}
check_4:
	if argc == 1 {
		return Nsoverload__SWIG_0(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(Klass); !ok {
			goto check_6
		}
		if _, ok := a[1].(Klass); !ok {
			goto check_6
		}
		return Nsoverload__SWIG_9(a[0].(Klass), a[1].(Klass))
	}
check_6:
	if argc == 2 {
		if _, ok := a[0].(Klass); !ok {
			goto check_7
		}
		if _, ok := a[1].(string); !ok {
			goto check_7
		}
		return Nsoverload__SWIG_10(a[0].(Klass), a[1].(string))
	}
check_7:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_8
		}
		if _, ok := a[1].(int); !ok {
			goto check_8
		}
		return Nsoverload__SWIG_6(a[0].(int), a[1].(int))
	}
check_8:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_9
		}
		if _, ok := a[1].(string); !ok {
			goto check_9
		}
		return Nsoverload__SWIG_7(a[0].(int), a[1].(string))
	}
check_9:
	if argc == 2 {
		if _, ok := a[1].(float64); !ok {
			goto check_10
		}
		return Nsoverload__SWIG_12(a[0].(float64), a[1].(float64))
	}
check_10:
	if argc == 2 {
		return Nsoverload__SWIG_13(a[0].(float64), a[1].(string))
	}
	panic("No match for overloaded function call")
}

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_A_foo__SWIG_0 unsafe.Pointer

func _swig_wrap_A_foo__SWIG_0(base float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_foo__SWIG_0, _swig_p)
	return
}

func AFoo__SWIG_0(arg1 float64) {
	_swig_wrap_A_foo__SWIG_0(arg1)
}

var _wrap_A_foo__SWIG_1 unsafe.Pointer

func _swig_wrap_A_foo__SWIG_1(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_foo__SWIG_1, _swig_p)
	return
}

func AFoo__SWIG_1(arg1 int) {
	_swig_wrap_A_foo__SWIG_1(arg1)
}

var _wrap_A_foo__SWIG_2 unsafe.Pointer

func _swig_wrap_A_foo__SWIG_2(base byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_foo__SWIG_2, _swig_p)
	return
}

func AFoo__SWIG_2(arg1 byte) {
	_swig_wrap_A_foo__SWIG_2(arg1)
}

func AFoo(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		AFoo__SWIG_1(a[0].(int))
		return
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_2
		}
		AFoo__SWIG_0(a[0].(float64))
		return
	}
check_2:
	if argc == 1 {
		AFoo__SWIG_2(a[0].(byte))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA() (_swig_ret A) {
	return _swig_wrap_new_A()
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
}

type SwigcptrB uintptr

func (p SwigcptrB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrB) SwigIsB() {
}

var _wrap_B_foo__SWIG_0 unsafe.Pointer

func _swig_wrap_B_foo__SWIG_0(base SwigcptrB, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_foo__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrB) Foo__SWIG_0(arg2 float64) {
	_swig_wrap_B_foo__SWIG_0(arg1, arg2)
}

var _wrap_B_foo__SWIG_1 unsafe.Pointer

func _swig_wrap_B_foo__SWIG_1(base SwigcptrB, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_foo__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrB) Foo__SWIG_1(arg2 int) {
	_swig_wrap_B_foo__SWIG_1(arg1, arg2)
}

var _wrap_B_foo__SWIG_2 unsafe.Pointer

func _swig_wrap_B_foo__SWIG_2(base SwigcptrB, _ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_foo__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrB) Foo__SWIG_2(arg2 byte) {
	_swig_wrap_B_foo__SWIG_2(arg1, arg2)
}

func (p SwigcptrB) Foo(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		p.Foo__SWIG_1(a[0].(int))
		return
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_2
		}
		p.Foo__SWIG_0(a[0].(float64))
		return
	}
check_2:
	if argc == 1 {
		p.Foo__SWIG_2(a[0].(byte))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_B unsafe.Pointer

func _swig_wrap_new_B() (base SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_B, _swig_p)
	return
}

func NewB() (_swig_ret B) {
	return _swig_wrap_new_B()
}

var _wrap_delete_B unsafe.Pointer

func _swig_wrap_delete_B(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_B, _swig_p)
	return
}

func DeleteB(arg1 B) {
	_swig_wrap_delete_B(arg1.Swigcptr())
}

type B interface {
	Swigcptr() uintptr
	SwigIsB()
	Foo(a ...interface{})
}

type SwigcptrBar_d uintptr

func (p SwigcptrBar_d) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBar_d) SwigIsBar_d() {
}

var _wrap_Bar_d_foo__SWIG_0 unsafe.Pointer

func _swig_wrap_Bar_d_foo__SWIG_0(base SwigcptrBar_d, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_d_foo__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrBar_d) Foo__SWIG_0(arg2 float64) {
	_swig_wrap_Bar_d_foo__SWIG_0(arg1, arg2)
}

var _wrap_Bar_d_foo__SWIG_1 unsafe.Pointer

func _swig_wrap_Bar_d_foo__SWIG_1(base SwigcptrBar_d, _ float64, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_d_foo__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrBar_d) Foo__SWIG_1(arg2 float64, arg3 float64) {
	_swig_wrap_Bar_d_foo__SWIG_1(arg1, arg2, arg3)
}

var _wrap_Bar_d_foo__SWIG_2 unsafe.Pointer

func _swig_wrap_Bar_d_foo__SWIG_2(base SwigcptrBar_d, _ int, _ int, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_d_foo__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrBar_d) Foo__SWIG_2(arg2 int, arg3 int, arg4 int) {
	_swig_wrap_Bar_d_foo__SWIG_2(arg1, arg2, arg3, arg4)
}

func (p SwigcptrBar_d) Foo(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Foo__SWIG_0(a[0].(float64))
		return
	}
	if argc == 2 {
		p.Foo__SWIG_1(a[0].(float64), a[1].(float64))
		return
	}
	if argc == 3 {
		p.Foo__SWIG_2(a[0].(int), a[1].(int), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Bar_d unsafe.Pointer

func _swig_wrap_new_Bar_d() (base SwigcptrBar_d) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bar_d, _swig_p)
	return
}

func NewBar_d() (_swig_ret Bar_d) {
	return _swig_wrap_new_Bar_d()
}

var _wrap_delete_Bar_d unsafe.Pointer

func _swig_wrap_delete_Bar_d(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Bar_d, _swig_p)
	return
}

func DeleteBar_d(arg1 Bar_d) {
	_swig_wrap_delete_Bar_d(arg1.Swigcptr())
}

type Bar_d interface {
	Swigcptr() uintptr
	SwigIsBar_d()
	Foo(a ...interface{})
}

type SwigcptrFoo_d uintptr

func (p SwigcptrFoo_d) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo_d) SwigIsFoo_d() {
}

var _wrap_Foo_d_bar__SWIG_0 unsafe.Pointer

func _swig_wrap_Foo_d_bar__SWIG_0(base SwigcptrFoo_d, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_d_bar__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrFoo_d) Bar__SWIG_0(arg2 float64) {
	_swig_wrap_Foo_d_bar__SWIG_0(arg1, arg2)
}

var _wrap_Foo_d_bar__SWIG_1 unsafe.Pointer

func _swig_wrap_Foo_d_bar__SWIG_1(base SwigcptrFoo_d, _ float64, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_d_bar__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrFoo_d) Bar__SWIG_1(arg2 float64, arg3 float64) {
	_swig_wrap_Foo_d_bar__SWIG_1(arg1, arg2, arg3)
}

var _wrap_Foo_d_bar__SWIG_2 unsafe.Pointer

func _swig_wrap_Foo_d_bar__SWIG_2(base SwigcptrFoo_d, _ int, _ int, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_d_bar__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrFoo_d) Bar__SWIG_2(arg2 int, arg3 int, arg4 int) {
	_swig_wrap_Foo_d_bar__SWIG_2(arg1, arg2, arg3, arg4)
}

func (p SwigcptrFoo_d) Bar(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.Bar__SWIG_0(a[0].(float64))
		return
	}
	if argc == 2 {
		p.Bar__SWIG_1(a[0].(float64), a[1].(float64))
		return
	}
	if argc == 3 {
		p.Bar__SWIG_2(a[0].(int), a[1].(int), a[2].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Foo_d unsafe.Pointer

func _swig_wrap_new_Foo_d() (base SwigcptrFoo_d) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo_d, _swig_p)
	return
}

func NewFoo_d() (_swig_ret Foo_d) {
	return _swig_wrap_new_Foo_d()
}

var _wrap_delete_Foo_d unsafe.Pointer

func _swig_wrap_delete_Foo_d(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo_d, _swig_p)
	return
}

func DeleteFoo_d(arg1 Foo_d) {
	_swig_wrap_delete_Foo_d(arg1.Swigcptr())
}

type Foo_d interface {
	Swigcptr() uintptr
	SwigIsFoo_d()
	Bar(a ...interface{})
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

