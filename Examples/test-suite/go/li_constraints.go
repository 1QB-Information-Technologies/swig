/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_constraints.i

package li_constraints

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_test_nonnegative unsafe.Pointer

func _swig_wrap_test_nonnegative(base float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_nonnegative, _swig_p)
	return
}

func Test_nonnegative(arg1 float64) {
	_swig_wrap_test_nonnegative(arg1)
}

var _wrap_test_nonpositive unsafe.Pointer

func _swig_wrap_test_nonpositive(base float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_nonpositive, _swig_p)
	return
}

func Test_nonpositive(arg1 float64) {
	_swig_wrap_test_nonpositive(arg1)
}

var _wrap_test_positive unsafe.Pointer

func _swig_wrap_test_positive(base float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_positive, _swig_p)
	return
}

func Test_positive(arg1 float64) {
	_swig_wrap_test_positive(arg1)
}

var _wrap_test_negative unsafe.Pointer

func _swig_wrap_test_negative(base float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_negative, _swig_p)
	return
}

func Test_negative(arg1 float64) {
	_swig_wrap_test_negative(arg1)
}

var _wrap_test_nonzero unsafe.Pointer

func _swig_wrap_test_nonzero(base float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_nonzero, _swig_p)
	return
}

func Test_nonzero(arg1 float64) {
	_swig_wrap_test_nonzero(arg1)
}

var _wrap_test_nonnull unsafe.Pointer

func _swig_wrap_test_nonnull(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_nonnull, _swig_p)
	return
}

func Test_nonnull(arg1 uintptr) {
	_swig_wrap_test_nonnull(arg1)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

