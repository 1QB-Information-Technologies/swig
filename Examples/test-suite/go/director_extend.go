/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../director_extend.i

package director_extend

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrSpObject uintptr

func (p SwigcptrSpObject) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSpObject) SwigIsSpObject() {
}

var _wrap_new_SpObject unsafe.Pointer

func _swig_wrap_new_SpObject() (base SwigcptrSpObject) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_SpObject, _swig_p)
	return
}

func NewSpObject() (_swig_ret SpObject) {
	return _swig_wrap_new_SpObject()
}

var _wrap_delete_SpObject unsafe.Pointer

func _swig_wrap_delete_SpObject(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_SpObject, _swig_p)
	return
}

func DeleteSpObject(arg1 SpObject) {
	_swig_wrap_delete_SpObject(arg1.Swigcptr())
}

var _wrap_SpObject_getFooBar unsafe.Pointer

func _swig_wrap_SpObject_getFooBar(base SwigcptrSpObject) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_SpObject_getFooBar, _swig_p)
	return
}

func (arg1 SwigcptrSpObject) GetFooBar() (_swig_ret int) {
	return _swig_wrap_SpObject_getFooBar(arg1)
}

var _wrap_SpObject_dummy unsafe.Pointer

func _swig_wrap_SpObject_dummy(base SwigcptrSpObject) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_SpObject_dummy, _swig_p)
	return
}

func (arg1 SwigcptrSpObject) Dummy() (_swig_ret int) {
	return _swig_wrap_SpObject_dummy(arg1)
}

type SpObject interface {
	Swigcptr() uintptr
	SwigIsSpObject()
	GetFooBar() (_swig_ret int)
	Dummy() (_swig_ret int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

