/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../grouping.i

package grouping

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_test1 unsafe.Pointer

func Test1(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test1, _swig_p)
	return
}
var _wrap_test2 unsafe.Pointer

func Test2(arg1 int) (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_test2, _swig_p)
	return
}
var _wrap_test3_set unsafe.Pointer

func _swig_wrap_test3_set(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test3_set, _swig_p)
	return
}

func SetTest3(arg1 int) {
	_swig_wrap_test3_set(arg1)
}

var _wrap_test3_get unsafe.Pointer

func GetTest3() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_test3_get, _swig_p)
	return
}
var _wrap_do_unary unsafe.Pointer

func Do_unary(arg1 int, arg2 *_swig_fnptr) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_do_unary, _swig_p)
	return
}
var _wrap_negate unsafe.Pointer

func Negate(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_negate, _swig_p)
	return
}
var _wrap_NEGATE unsafe.Pointer

func _swig_getNEGATE() (_swig_ret *_swig_fnptr) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_NEGATE, _swig_p)
	return
}
var NEGATE *_swig_fnptr = _swig_getNEGATE()

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

