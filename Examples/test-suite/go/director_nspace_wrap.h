/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../director_nspace.i

#ifndef SWIG_director_nspace_WRAP_H_
#define SWIG_director_nspace_WRAP_H_

class SwigDirector_Foo : public TopLevel::Bar::Foo
{
 public:
  SwigDirector_Foo(void *swig_p);
  virtual ~SwigDirector_Foo();
  std::string _swig_upcall_ping() {
    return TopLevel::Bar::Foo::ping();
  }
  virtual std::string ping();
  std::string _swig_upcall_pong() {
    return TopLevel::Bar::Foo::pong();
  }
  virtual std::string pong();
  std::string _swig_upcall_fooBar(TopLevel::Bar::FooBar *fb) {
    return TopLevel::Bar::Foo::fooBar(fb);
  }
  virtual std::string fooBar(TopLevel::Bar::FooBar *fb);
  TopLevel::Bar::Foo _swig_upcall_makeFoo() {
    return TopLevel::Bar::Foo::makeFoo();
  }
  virtual TopLevel::Bar::Foo makeFoo();
  TopLevel::Bar::FooBar _swig_upcall_makeFooBar() {
    return TopLevel::Bar::Foo::makeFooBar();
  }
  virtual TopLevel::Bar::FooBar makeFooBar();
 private:
  void *go_val;
};

#endif
