/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../expressions.i

package expressions

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_A__SWIG_0 unsafe.Pointer

func _swig_wrap_new_A__SWIG_0() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_0, _swig_p)
	return
}

func NewA__SWIG_0() (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_0()
}

var _wrap_new_A__SWIG_1 unsafe.Pointer

func _swig_wrap_new_A__SWIG_1(base int) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_1, _swig_p)
	return
}

func NewA__SWIG_1(arg1 int) (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_1(arg1)
}

func NewA(a ...interface{}) A {
	argc := len(a)
	if argc == 0 {
		return NewA__SWIG_0()
	}
	if argc == 1 {
		return NewA__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_A_k_set unsafe.Pointer

func _swig_wrap_A_k_set(base SwigcptrA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_k_set, _swig_p)
	return
}

func (arg1 SwigcptrA) SetK(arg2 int) {
	_swig_wrap_A_k_set(arg1, arg2)
}

var _wrap_A_k_get unsafe.Pointer

func _swig_wrap_A_k_get(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_k_get, _swig_p)
	return
}

func (arg1 SwigcptrA) GetK() (_swig_ret int) {
	return _swig_wrap_A_k_get(arg1)
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	SetK(arg2 int)
	GetK() (_swig_ret int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

