/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../extern_namespace.i

package extern_namespace

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_bar__SWIG_0 unsafe.Pointer

func Bar__SWIG_0(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_bar__SWIG_0, _swig_p)
	return
}
var _wrap_bar__SWIG_1 unsafe.Pointer

func Bar__SWIG_1() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_bar__SWIG_1, _swig_p)
	return
}
func Bar(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Bar__SWIG_1()
	}
	if argc == 1 {
		return Bar__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_foobar unsafe.Pointer

func Foobar(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foobar, _swig_p)
	return
}

