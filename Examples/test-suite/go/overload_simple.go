/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../overload_simple.i

package overload_simple

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrFoos uintptr

func (p SwigcptrFoos) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoos) SwigIsFoos() {
}

var _wrap_new_Foos unsafe.Pointer

func _swig_wrap_new_Foos() (base SwigcptrFoos) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foos, _swig_p)
	return
}

func NewFoos() (_swig_ret Foos) {
	return _swig_wrap_new_Foos()
}

var _wrap_delete_Foos unsafe.Pointer

func _swig_wrap_delete_Foos(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foos, _swig_p)
	return
}

func DeleteFoos(arg1 Foos) {
	_swig_wrap_delete_Foos(arg1.Swigcptr())
}

type Foos interface {
	Swigcptr() uintptr
	SwigIsFoos()
}

type SwigcptrBar uintptr

func (p SwigcptrBar) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBar) SwigIsBar() {
}

var _wrap_new_Bar__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Bar__SWIG_0(base int) (_ SwigcptrBar) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bar__SWIG_0, _swig_p)
	return
}

func NewBar__SWIG_0(arg1 int) (_swig_ret Bar) {
	return _swig_wrap_new_Bar__SWIG_0(arg1)
}

var _wrap_new_Bar__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Bar__SWIG_1() (base SwigcptrBar) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Bar__SWIG_1, _swig_p)
	return
}

func NewBar__SWIG_1() (_swig_ret Bar) {
	return _swig_wrap_new_Bar__SWIG_1()
}

func NewBar(a ...interface{}) Bar {
	argc := len(a)
	if argc == 0 {
		return NewBar__SWIG_1()
	}
	if argc == 1 {
		return NewBar__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Bar_foo__SWIG_0 unsafe.Pointer

func BarFoo__SWIG_0(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Bar_foo__SWIG_0, _swig_p)
	return
}
var _wrap_Bar_foo__SWIG_1 unsafe.Pointer

func BarFoo__SWIG_1(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Bar_foo__SWIG_1, _swig_p)
	return
}
var _wrap_Bar_foo__SWIG_2 unsafe.Pointer

func BarFoo__SWIG_2() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Bar_foo__SWIG_2, _swig_p)
	return
}
func BarFoo(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return BarFoo__SWIG_2()
	}
	if argc == 1 {
		return BarFoo__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return BarFoo__SWIG_0(a[0].(int), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Bar_num_set unsafe.Pointer

func _swig_wrap_Bar_num_set(base SwigcptrBar, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_num_set, _swig_p)
	return
}

func (arg1 SwigcptrBar) SetNum(arg2 int) {
	_swig_wrap_Bar_num_set(arg1, arg2)
}

var _wrap_Bar_num_get unsafe.Pointer

func _swig_wrap_Bar_num_get(base SwigcptrBar) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Bar_num_get, _swig_p)
	return
}

func (arg1 SwigcptrBar) GetNum() (_swig_ret int) {
	return _swig_wrap_Bar_num_get(arg1)
}

var _wrap_delete_Bar unsafe.Pointer

func _swig_wrap_delete_Bar(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Bar, _swig_p)
	return
}

func DeleteBar(arg1 Bar) {
	_swig_wrap_delete_Bar(arg1.Swigcptr())
}

type Bar interface {
	Swigcptr() uintptr
	SwigIsBar()
	SetNum(arg2 int)
	GetNum() (_swig_ret int)
}

var _wrap_foo__SWIG_0 unsafe.Pointer

func Foo__SWIG_0() (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_0, _swig_p)
	return
}
var _wrap_foo__SWIG_1 unsafe.Pointer

func Foo__SWIG_1(arg1 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_1, _swig_p)
	return
}
var _wrap_foo__SWIG_2 unsafe.Pointer

func Foo__SWIG_2(arg1 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_2, _swig_p)
	return
}
var _wrap_foo__SWIG_3 unsafe.Pointer

func Foo__SWIG_3(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_3, _swig_p)
	return
}
var _wrap_foo__SWIG_4 unsafe.Pointer

func _swig_wrap_foo__SWIG_4(base uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_4, _swig_p)
	return
}

func Foo__SWIG_4(arg1 Foos) (_swig_ret string) {
	return _swig_wrap_foo__SWIG_4(arg1.Swigcptr())
}

var _wrap_foo__SWIG_5 unsafe.Pointer

func _swig_wrap_foo__SWIG_5(base uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_5, _swig_p)
	return
}

func Foo__SWIG_5(arg1 Bar) (_swig_ret string) {
	return _swig_wrap_foo__SWIG_5(arg1.Swigcptr())
}

var _wrap_foo__SWIG_6 unsafe.Pointer

func Foo__SWIG_6(arg1 uintptr) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_6, _swig_p)
	return
}
var _wrap_foo__SWIG_7 unsafe.Pointer

func _swig_wrap_foo__SWIG_7(base uintptr, _ int) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_7, _swig_p)
	return
}

func Foo__SWIG_7(arg1 Foos, arg2 int) (_swig_ret string) {
	return _swig_wrap_foo__SWIG_7(arg1.Swigcptr(), arg2)
}

var _wrap_foo__SWIG_8 unsafe.Pointer

func _swig_wrap_foo__SWIG_8(base float64, _ uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foo__SWIG_8, _swig_p)
	return
}

func Foo__SWIG_8(arg1 float64, arg2 Bar) (_swig_ret string) {
	return _swig_wrap_foo__SWIG_8(arg1, arg2.Swigcptr())
}

func Foo(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return Foo__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(Foos); !ok {
			goto check_2
		}
		return Foo__SWIG_4(a[0].(Foos))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(Bar); !ok {
			goto check_3
		}
		return Foo__SWIG_5(a[0].(Bar))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_4
		}
		return Foo__SWIG_6(a[0].(uintptr))
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_5
		}
		return Foo__SWIG_1(a[0].(int))
	}
check_5:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_6
		}
		return Foo__SWIG_2(a[0].(float64))
	}
check_6:
	if argc == 1 {
		return Foo__SWIG_3(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(Foos); !ok {
			goto check_8
		}
		if _, ok := a[1].(int); !ok {
			goto check_8
		}
		return Foo__SWIG_7(a[0].(Foos), a[1].(int))
	}
check_8:
	if argc == 2 {
		return Foo__SWIG_8(a[0].(float64), a[1].(Bar))
	}
	panic("No match for overloaded function call")
}

var _wrap_blah__SWIG_0 unsafe.Pointer

func Blah__SWIG_0(arg1 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_blah__SWIG_0, _swig_p)
	return
}
var _wrap_blah__SWIG_1 unsafe.Pointer

func Blah__SWIG_1(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_blah__SWIG_1, _swig_p)
	return
}
func Blah(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_1
		}
		return Blah__SWIG_0(a[0].(float64))
	}
check_1:
	if argc == 1 {
		return Blah__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

type SwigcptrSpam uintptr

func (p SwigcptrSpam) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSpam) SwigIsSpam() {
}

var _wrap_new_Spam__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_0() (base SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_0, _swig_p)
	return
}

func NewSpam__SWIG_0() (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_0()
}

var _wrap_new_Spam__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_1(base int) (_ SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_1, _swig_p)
	return
}

func NewSpam__SWIG_1(arg1 int) (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_1(arg1)
}

var _wrap_new_Spam__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_2(base float64) (_ SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_2, _swig_p)
	return
}

func NewSpam__SWIG_2(arg1 float64) (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_2(arg1)
}

var _wrap_new_Spam__SWIG_3 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_3(base string) (_ SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_3, _swig_p)
	return
}

func NewSpam__SWIG_3(arg1 string) (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_3(arg1)
}

var _wrap_new_Spam__SWIG_4 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_4(base uintptr) (_ SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_4, _swig_p)
	return
}

func NewSpam__SWIG_4(arg1 Foos) (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_4(arg1.Swigcptr())
}

var _wrap_new_Spam__SWIG_5 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_5(base uintptr) (_ SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_5, _swig_p)
	return
}

func NewSpam__SWIG_5(arg1 Bar) (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_5(arg1.Swigcptr())
}

var _wrap_new_Spam__SWIG_6 unsafe.Pointer

func _swig_wrap_new_Spam__SWIG_6(base uintptr) (_ SwigcptrSpam) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Spam__SWIG_6, _swig_p)
	return
}

func NewSpam__SWIG_6(arg1 uintptr) (_swig_ret Spam) {
	return _swig_wrap_new_Spam__SWIG_6(arg1)
}

func NewSpam(a ...interface{}) Spam {
	argc := len(a)
	if argc == 0 {
		return NewSpam__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(Foos); !ok {
			goto check_2
		}
		return NewSpam__SWIG_4(a[0].(Foos))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(Bar); !ok {
			goto check_3
		}
		return NewSpam__SWIG_5(a[0].(Bar))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_4
		}
		return NewSpam__SWIG_6(a[0].(uintptr))
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_5
		}
		return NewSpam__SWIG_1(a[0].(int))
	}
check_5:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_6
		}
		return NewSpam__SWIG_2(a[0].(float64))
	}
check_6:
	if argc == 1 {
		return NewSpam__SWIG_3(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_Spam_Xtype_get unsafe.Pointer

func _swig_wrap_Spam_Xtype_get(base SwigcptrSpam) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_Xtype_get, _swig_p)
	return
}

func (arg1 SwigcptrSpam) GetXtype() (_swig_ret string) {
	return _swig_wrap_Spam_Xtype_get(arg1)
}

var _wrap_Spam_foo__SWIG_0 unsafe.Pointer

func _swig_wrap_Spam_foo__SWIG_0(base SwigcptrSpam, _ int) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_foo__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrSpam) Foo__SWIG_0(arg2 int) (_swig_ret string) {
	return _swig_wrap_Spam_foo__SWIG_0(arg1, arg2)
}

var _wrap_Spam_foo__SWIG_1 unsafe.Pointer

func _swig_wrap_Spam_foo__SWIG_1(base SwigcptrSpam, _ float64) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_foo__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrSpam) Foo__SWIG_1(arg2 float64) (_swig_ret string) {
	return _swig_wrap_Spam_foo__SWIG_1(arg1, arg2)
}

var _wrap_Spam_foo__SWIG_2 unsafe.Pointer

func _swig_wrap_Spam_foo__SWIG_2(base SwigcptrSpam, _ string) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_foo__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrSpam) Foo__SWIG_2(arg2 string) (_swig_ret string) {
	return _swig_wrap_Spam_foo__SWIG_2(arg1, arg2)
}

var _wrap_Spam_foo__SWIG_3 unsafe.Pointer

func _swig_wrap_Spam_foo__SWIG_3(base SwigcptrSpam, _ uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_foo__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrSpam) Foo__SWIG_3(arg2 Foos) (_swig_ret string) {
	return _swig_wrap_Spam_foo__SWIG_3(arg1, arg2.Swigcptr())
}

var _wrap_Spam_foo__SWIG_4 unsafe.Pointer

func _swig_wrap_Spam_foo__SWIG_4(base SwigcptrSpam, _ uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_foo__SWIG_4, _swig_p)
	return
}

func (arg1 SwigcptrSpam) Foo__SWIG_4(arg2 Bar) (_swig_ret string) {
	return _swig_wrap_Spam_foo__SWIG_4(arg1, arg2.Swigcptr())
}

var _wrap_Spam_foo__SWIG_5 unsafe.Pointer

func _swig_wrap_Spam_foo__SWIG_5(base SwigcptrSpam, _ uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_foo__SWIG_5, _swig_p)
	return
}

func (arg1 SwigcptrSpam) Foo__SWIG_5(arg2 uintptr) (_swig_ret string) {
	return _swig_wrap_Spam_foo__SWIG_5(arg1, arg2)
}

func (p SwigcptrSpam) Foo(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Foos); !ok {
			goto check_1
		}
		return p.Foo__SWIG_3(a[0].(Foos))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(Bar); !ok {
			goto check_2
		}
		return p.Foo__SWIG_4(a[0].(Bar))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_3
		}
		return p.Foo__SWIG_5(a[0].(uintptr))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		return p.Foo__SWIG_0(a[0].(int))
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_5
		}
		return p.Foo__SWIG_1(a[0].(float64))
	}
check_5:
	if argc == 1 {
		return p.Foo__SWIG_2(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_Spam_bar__SWIG_0 unsafe.Pointer

func SpamBar__SWIG_0(arg1 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Spam_bar__SWIG_0, _swig_p)
	return
}
var _wrap_Spam_bar__SWIG_1 unsafe.Pointer

func SpamBar__SWIG_1(arg1 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Spam_bar__SWIG_1, _swig_p)
	return
}
var _wrap_Spam_bar__SWIG_2 unsafe.Pointer

func SpamBar__SWIG_2(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Spam_bar__SWIG_2, _swig_p)
	return
}
var _wrap_Spam_bar__SWIG_3 unsafe.Pointer

func _swig_wrap_Spam_bar__SWIG_3(base uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_bar__SWIG_3, _swig_p)
	return
}

func SpamBar__SWIG_3(arg1 Foos) (_swig_ret string) {
	return _swig_wrap_Spam_bar__SWIG_3(arg1.Swigcptr())
}

var _wrap_Spam_bar__SWIG_4 unsafe.Pointer

func _swig_wrap_Spam_bar__SWIG_4(base uintptr) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Spam_bar__SWIG_4, _swig_p)
	return
}

func SpamBar__SWIG_4(arg1 Bar) (_swig_ret string) {
	return _swig_wrap_Spam_bar__SWIG_4(arg1.Swigcptr())
}

var _wrap_Spam_bar__SWIG_5 unsafe.Pointer

func SpamBar__SWIG_5(arg1 uintptr) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Spam_bar__SWIG_5, _swig_p)
	return
}
func SpamBar(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Foos); !ok {
			goto check_1
		}
		return SpamBar__SWIG_3(a[0].(Foos))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(Bar); !ok {
			goto check_2
		}
		return SpamBar__SWIG_4(a[0].(Bar))
	}
check_2:
	if argc == 1 {
		if _, ok := a[0].(uintptr); !ok {
			goto check_3
		}
		return SpamBar__SWIG_5(a[0].(uintptr))
	}
check_3:
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		return SpamBar__SWIG_0(a[0].(int))
	}
check_4:
	if argc == 1 {
		if _, ok := a[0].(float64); !ok {
			goto check_5
		}
		return SpamBar__SWIG_1(a[0].(float64))
	}
check_5:
	if argc == 1 {
		return SpamBar__SWIG_2(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Spam unsafe.Pointer

func _swig_wrap_delete_Spam(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Spam, _swig_p)
	return
}

func DeleteSpam(arg1 Spam) {
	_swig_wrap_delete_Spam(arg1.Swigcptr())
}

type Spam interface {
	Swigcptr() uintptr
	SwigIsSpam()
	GetXtype() (_swig_ret string)
	Foo(a ...interface{}) string
}

var _wrap_fbool__SWIG_0 unsafe.Pointer

func Fbool__SWIG_0(arg1 bool) (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fbool__SWIG_0, _swig_p)
	return
}
var _wrap_fbool__SWIG_1 unsafe.Pointer

func Fbool__SWIG_1(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fbool__SWIG_1, _swig_p)
	return
}
func Fbool(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(bool); !ok {
			goto check_1
		}
		return Fbool__SWIG_0(a[0].(bool))
	}
check_1:
	if argc == 1 {
		return Fbool__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_fint unsafe.Pointer

func Fint(arg1 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fint, _swig_p)
	return
}
var _wrap_fdouble unsafe.Pointer

func Fdouble(arg1 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fdouble, _swig_p)
	return
}
var _wrap_num__SWIG_0 unsafe.Pointer

func Num__SWIG_0(arg1 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_num__SWIG_0, _swig_p)
	return
}
var _wrap_num__SWIG_1 unsafe.Pointer

func Num__SWIG_1(arg1 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_num__SWIG_1, _swig_p)
	return
}
func Num(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		return Num__SWIG_0(a[0].(int))
	}
check_1:
	if argc == 1 {
		return Num__SWIG_1(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_fid__SWIG_0 unsafe.Pointer

func Fid__SWIG_0(arg1 int, arg2 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fid__SWIG_0, _swig_p)
	return
}
var _wrap_fid__SWIG_1 unsafe.Pointer

func Fid__SWIG_1(arg1 int, arg2 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fid__SWIG_1, _swig_p)
	return
}
var _wrap_fid__SWIG_2 unsafe.Pointer

func Fid__SWIG_2(arg1 float64, arg2 int) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fid__SWIG_2, _swig_p)
	return
}
var _wrap_fid__SWIG_3 unsafe.Pointer

func Fid__SWIG_3(arg1 float64, arg2 float64) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_fid__SWIG_3, _swig_p)
	return
}
func Fid(a ...interface{}) string {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_1
		}
		if _, ok := a[1].(int); !ok {
			goto check_1
		}
		return Fid__SWIG_0(a[0].(int), a[1].(int))
	}
check_1:
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		if _, ok := a[1].(float64); !ok {
			goto check_2
		}
		return Fid__SWIG_1(a[0].(int), a[1].(float64))
	}
check_2:
	if argc == 2 {
		if _, ok := a[1].(int); !ok {
			goto check_3
		}
		return Fid__SWIG_2(a[0].(float64), a[1].(int))
	}
check_3:
	if argc == 2 {
		return Fid__SWIG_3(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_ull__SWIG_0 unsafe.Pointer

func Ull__SWIG_0() (_swig_ret uint64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_ull__SWIG_0, _swig_p)
	return
}
var _wrap_ull__SWIG_1 unsafe.Pointer

func Ull__SWIG_1(arg1 uint64) (_swig_ret uint64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ull__SWIG_1, _swig_p)
	return
}
func Ull(a ...interface{}) uint64 {
	argc := len(a)
	if argc == 0 {
		return Ull__SWIG_0()
	}
	if argc == 1 {
		return Ull__SWIG_1(a[0].(uint64))
	}
	panic("No match for overloaded function call")
}

var _wrap_ll__SWIG_0 unsafe.Pointer

func Ll__SWIG_0() (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_ll__SWIG_0, _swig_p)
	return
}
var _wrap_ll__SWIG_1 unsafe.Pointer

func Ll__SWIG_1(arg1 int64) (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ll__SWIG_1, _swig_p)
	return
}
func Ll(a ...interface{}) int64 {
	argc := len(a)
	if argc == 0 {
		return Ll__SWIG_0()
	}
	if argc == 1 {
		return Ll__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_malloc_void unsafe.Pointer

func Malloc_void(arg1 int) (_swig_ret uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_malloc_void, _swig_p)
	return
}
var _wrap_free_void unsafe.Pointer

func _swig_wrap_free_void(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_free_void, _swig_p)
	return
}

func Free_void(arg1 uintptr) {
	_swig_wrap_free_void(arg1)
}

type SwigcptrClassA uintptr

func (p SwigcptrClassA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrClassA) SwigIsClassA() {
}

var _wrap_new_ClassA unsafe.Pointer

func _swig_wrap_new_ClassA() (base SwigcptrClassA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ClassA, _swig_p)
	return
}

func NewClassA() (_swig_ret ClassA) {
	return _swig_wrap_new_ClassA()
}

var _wrap_ClassA_method1__SWIG_0 unsafe.Pointer

func _swig_wrap_ClassA_method1__SWIG_0(base SwigcptrClassA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ClassA_method1__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrClassA) Method1__SWIG_0() (_swig_ret int) {
	return _swig_wrap_ClassA_method1__SWIG_0(arg1)
}

var _wrap_ClassA_method1__SWIG_1 unsafe.Pointer

func _swig_wrap_ClassA_method1__SWIG_1(base SwigcptrClassA, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ClassA_method1__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrClassA) Method1__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_ClassA_method1__SWIG_1(arg1, arg2)
}

func (p SwigcptrClassA) Method1(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Method1__SWIG_0()
	}
	if argc == 1 {
		return p.Method1__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_ClassA unsafe.Pointer

func _swig_wrap_delete_ClassA(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ClassA, _swig_p)
	return
}

func DeleteClassA(arg1 ClassA) {
	_swig_wrap_delete_ClassA(arg1.Swigcptr())
}

type ClassA interface {
	Swigcptr() uintptr
	SwigIsClassA()
	Method1(a ...interface{}) int
}

var _wrap_int_object__SWIG_0 unsafe.Pointer

func _swig_wrap_int_object__SWIG_0(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_int_object__SWIG_0, _swig_p)
	return
}

func Int_object__SWIG_0(arg1 Spam) (_swig_ret int) {
	return _swig_wrap_int_object__SWIG_0(arg1.Swigcptr())
}

var _wrap_int_object__SWIG_1 unsafe.Pointer

func Int_object__SWIG_1(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_int_object__SWIG_1, _swig_p)
	return
}
func Int_object(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Spam); !ok {
			goto check_1
		}
		return Int_object__SWIG_0(a[0].(Spam))
	}
check_1:
	if argc == 1 {
		return Int_object__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

