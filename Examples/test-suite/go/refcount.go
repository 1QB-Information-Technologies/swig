/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../refcount.i

package refcount

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrRCObjBase uintptr

func (p SwigcptrRCObjBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRCObjBase) SwigIsRCObjBase() {
}

var _wrap_RCObjBase_ref_count unsafe.Pointer

func _swig_wrap_RCObjBase_ref_count(base SwigcptrRCObjBase) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RCObjBase_ref_count, _swig_p)
	return
}

func (arg1 SwigcptrRCObjBase) Ref_count() (_swig_ret int) {
	return _swig_wrap_RCObjBase_ref_count(arg1)
}

var _wrap_RCObjBase_addref unsafe.Pointer

func _swig_wrap_RCObjBase_addref(base SwigcptrRCObjBase) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RCObjBase_addref, _swig_p)
	return
}

func (arg1 SwigcptrRCObjBase) Addref() (_swig_ret int) {
	return _swig_wrap_RCObjBase_addref(arg1)
}

var _wrap_RCObjBase_delref unsafe.Pointer

func _swig_wrap_RCObjBase_delref(base SwigcptrRCObjBase) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RCObjBase_delref, _swig_p)
	return
}

func (arg1 SwigcptrRCObjBase) Delref() (_swig_ret int) {
	return _swig_wrap_RCObjBase_delref(arg1)
}

type RCObjBase interface {
	Swigcptr() uintptr
	SwigIsRCObjBase()
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
}

type SwigcptrRCObj uintptr

func (p SwigcptrRCObj) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRCObj) SwigIsRCObj() {
}

var _wrap_delete_RCObj unsafe.Pointer

func _swig_wrap_delete_RCObj(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_RCObj, _swig_p)
	return
}

func DeleteRCObj(arg1 RCObj) {
	_swig_wrap_delete_RCObj(arg1.Swigcptr())
}

var _wrap_RCObj_ref_count unsafe.Pointer

func _swig_wrap_RCObj_ref_count(base SwigcptrRCObj) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RCObj_ref_count, _swig_p)
	return
}

func (_swig_base SwigcptrRCObj) Ref_count() (_swig_ret int) {
	return _swig_wrap_RCObj_ref_count(_swig_base)
}

var _wrap_RCObj_addref unsafe.Pointer

func _swig_wrap_RCObj_addref(base SwigcptrRCObj) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RCObj_addref, _swig_p)
	return
}

func (_swig_base SwigcptrRCObj) Addref() (_swig_ret int) {
	return _swig_wrap_RCObj_addref(_swig_base)
}

var _wrap_RCObj_delref unsafe.Pointer

func _swig_wrap_RCObj_delref(base SwigcptrRCObj) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RCObj_delref, _swig_p)
	return
}

func (_swig_base SwigcptrRCObj) Delref() (_swig_ret int) {
	return _swig_wrap_RCObj_delref(_swig_base)
}

func (p SwigcptrRCObj) SwigIsRCObjBase() {
}

func (p SwigcptrRCObj) SwigGetRCObjBase() RCObjBase {
	return SwigcptrRCObjBase(p.Swigcptr())
}

type RCObj interface {
	Swigcptr() uintptr
	SwigIsRCObj()
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
	SwigIsRCObjBase()
	SwigGetRCObjBase() RCObjBase
}

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA() (_swig_ret A) {
	return _swig_wrap_new_A()
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

var _wrap_A_ref_count unsafe.Pointer

func _swig_wrap_A_ref_count(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_ref_count, _swig_p)
	return
}

func (_swig_base SwigcptrA) Ref_count() (_swig_ret int) {
	return _swig_wrap_A_ref_count(_swig_base)
}

var _wrap_A_addref unsafe.Pointer

func _swig_wrap_A_addref(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_addref, _swig_p)
	return
}

func (_swig_base SwigcptrA) Addref() (_swig_ret int) {
	return _swig_wrap_A_addref(_swig_base)
}

var _wrap_A_delref unsafe.Pointer

func _swig_wrap_A_delref(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_delref, _swig_p)
	return
}

func (_swig_base SwigcptrA) Delref() (_swig_ret int) {
	return _swig_wrap_A_delref(_swig_base)
}

func (p SwigcptrA) SwigIsRCObj() {
}

func (p SwigcptrA) SwigGetRCObj() RCObj {
	return SwigcptrRCObj(p.Swigcptr())
}

func (p SwigcptrA) SwigIsRCObjBase() {
}

func (p SwigcptrA) SwigGetRCObjBase() RCObjBase {
	return SwigcptrRCObjBase(p.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
	SwigIsRCObj()
	SwigGetRCObj() RCObj
	SwigIsRCObjBase()
	SwigGetRCObjBase() RCObjBase
}

type SwigcptrA1 uintptr

func (p SwigcptrA1) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA1) SwigIsA1() {
}

var _wrap_delete_A1 unsafe.Pointer

func _swig_wrap_delete_A1(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A1, _swig_p)
	return
}

func DeleteA1(arg1 A1) {
	_swig_wrap_delete_A1(arg1.Swigcptr())
}

var _wrap_A1_ref_count unsafe.Pointer

func _swig_wrap_A1_ref_count(base SwigcptrA1) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A1_ref_count, _swig_p)
	return
}

func (_swig_base SwigcptrA1) Ref_count() (_swig_ret int) {
	return _swig_wrap_A1_ref_count(_swig_base)
}

var _wrap_A1_addref unsafe.Pointer

func _swig_wrap_A1_addref(base SwigcptrA1) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A1_addref, _swig_p)
	return
}

func (_swig_base SwigcptrA1) Addref() (_swig_ret int) {
	return _swig_wrap_A1_addref(_swig_base)
}

var _wrap_A1_delref unsafe.Pointer

func _swig_wrap_A1_delref(base SwigcptrA1) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A1_delref, _swig_p)
	return
}

func (_swig_base SwigcptrA1) Delref() (_swig_ret int) {
	return _swig_wrap_A1_delref(_swig_base)
}

func (p SwigcptrA1) SwigIsA() {
}

func (p SwigcptrA1) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

func (p SwigcptrA1) SwigIsRCObj() {
}

func (p SwigcptrA1) SwigGetRCObj() RCObj {
	return SwigcptrRCObj(p.Swigcptr())
}

func (p SwigcptrA1) SwigIsRCObjBase() {
}

func (p SwigcptrA1) SwigGetRCObjBase() RCObjBase {
	return SwigcptrRCObjBase(p.Swigcptr())
}

type A1 interface {
	Swigcptr() uintptr
	SwigIsA1()
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
	SwigIsA()
	SwigGetA() A
	SwigIsRCObj()
	SwigGetRCObj() RCObj
	SwigIsRCObjBase()
	SwigGetRCObjBase() RCObjBase
}

type SwigcptrA2 uintptr

func (p SwigcptrA2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA2) SwigIsA2() {
}

var _wrap_new_A2 unsafe.Pointer

func _swig_wrap_new_A2() (base SwigcptrA2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A2, _swig_p)
	return
}

func NewA2() (_swig_ret A2) {
	return _swig_wrap_new_A2()
}

var _wrap_delete_A2 unsafe.Pointer

func _swig_wrap_delete_A2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A2, _swig_p)
	return
}

func DeleteA2(arg1 A2) {
	_swig_wrap_delete_A2(arg1.Swigcptr())
}

var _wrap_A2_ref_count unsafe.Pointer

func _swig_wrap_A2_ref_count(base SwigcptrA2) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A2_ref_count, _swig_p)
	return
}

func (_swig_base SwigcptrA2) Ref_count() (_swig_ret int) {
	return _swig_wrap_A2_ref_count(_swig_base)
}

var _wrap_A2_addref unsafe.Pointer

func _swig_wrap_A2_addref(base SwigcptrA2) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A2_addref, _swig_p)
	return
}

func (_swig_base SwigcptrA2) Addref() (_swig_ret int) {
	return _swig_wrap_A2_addref(_swig_base)
}

var _wrap_A2_delref unsafe.Pointer

func _swig_wrap_A2_delref(base SwigcptrA2) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A2_delref, _swig_p)
	return
}

func (_swig_base SwigcptrA2) Delref() (_swig_ret int) {
	return _swig_wrap_A2_delref(_swig_base)
}

func (p SwigcptrA2) SwigIsA() {
}

func (p SwigcptrA2) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

func (p SwigcptrA2) SwigIsRCObj() {
}

func (p SwigcptrA2) SwigGetRCObj() RCObj {
	return SwigcptrRCObj(p.Swigcptr())
}

func (p SwigcptrA2) SwigIsRCObjBase() {
}

func (p SwigcptrA2) SwigGetRCObjBase() RCObjBase {
	return SwigcptrRCObjBase(p.Swigcptr())
}

type A2 interface {
	Swigcptr() uintptr
	SwigIsA2()
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
	SwigIsA()
	SwigGetA() A
	SwigIsRCObj()
	SwigGetRCObj() RCObj
	SwigIsRCObjBase()
	SwigGetRCObjBase() RCObjBase
}

type SwigcptrA3 uintptr

func (p SwigcptrA3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA3) SwigIsA3() {
}

var _wrap_new_A3 unsafe.Pointer

func _swig_wrap_new_A3() (base SwigcptrA3) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A3, _swig_p)
	return
}

func NewA3() (_swig_ret A3) {
	return _swig_wrap_new_A3()
}

var _wrap_delete_A3 unsafe.Pointer

func _swig_wrap_delete_A3(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A3, _swig_p)
	return
}

func DeleteA3(arg1 A3) {
	_swig_wrap_delete_A3(arg1.Swigcptr())
}

var _wrap_A3_ref_count unsafe.Pointer

func _swig_wrap_A3_ref_count(base SwigcptrA3) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A3_ref_count, _swig_p)
	return
}

func (_swig_base SwigcptrA3) Ref_count() (_swig_ret int) {
	return _swig_wrap_A3_ref_count(_swig_base)
}

var _wrap_A3_addref unsafe.Pointer

func _swig_wrap_A3_addref(base SwigcptrA3) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A3_addref, _swig_p)
	return
}

func (_swig_base SwigcptrA3) Addref() (_swig_ret int) {
	return _swig_wrap_A3_addref(_swig_base)
}

var _wrap_A3_delref unsafe.Pointer

func _swig_wrap_A3_delref(base SwigcptrA3) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A3_delref, _swig_p)
	return
}

func (_swig_base SwigcptrA3) Delref() (_swig_ret int) {
	return _swig_wrap_A3_delref(_swig_base)
}

func (p SwigcptrA3) SwigIsA1() {
}

func (p SwigcptrA3) SwigGetA1() A1 {
	return SwigcptrA1(p.Swigcptr())
}

func (p SwigcptrA3) SwigIsA() {
}

func (p SwigcptrA3) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

func (p SwigcptrA3) SwigIsRCObj() {
}

func (p SwigcptrA3) SwigGetRCObj() RCObj {
	return SwigcptrRCObj(p.Swigcptr())
}

func (p SwigcptrA3) SwigIsRCObjBase() {
}

func (p SwigcptrA3) SwigGetRCObjBase() RCObjBase {
	return SwigcptrRCObjBase(p.Swigcptr())
}

type A3 interface {
	Swigcptr() uintptr
	SwigIsA3()
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
	SwigIsA1()
	SwigGetA1() A1
	SwigIsA()
	SwigGetA() A
	SwigIsRCObj()
	SwigGetRCObj() RCObj
	SwigIsRCObjBase()
	SwigGetRCObjBase() RCObjBase
}

type SwigcptrB uintptr

func (p SwigcptrB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrB) SwigIsB() {
}

var _wrap_new_B unsafe.Pointer

func _swig_wrap_new_B(base uintptr) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_B, _swig_p)
	return
}

func NewB(arg1 A) (_swig_ret B) {
	return _swig_wrap_new_B(arg1.Swigcptr())
}

var _wrap_B_get_a unsafe.Pointer

func _swig_wrap_B_get_a(base SwigcptrB) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_get_a, _swig_p)
	return
}

func (arg1 SwigcptrB) Get_a() (_swig_ret A) {
	return _swig_wrap_B_get_a(arg1)
}

var _wrap_B_create unsafe.Pointer

func _swig_wrap_B_create(base uintptr) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_create, _swig_p)
	return
}

func BCreate(arg1 A) (_swig_ret B) {
	return _swig_wrap_B_create(arg1.Swigcptr())
}

var _wrap_B_cloner unsafe.Pointer

func _swig_wrap_B_cloner(base SwigcptrB) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_cloner, _swig_p)
	return
}

func (arg1 SwigcptrB) Cloner() (_swig_ret B) {
	return _swig_wrap_B_cloner(arg1)
}

var _wrap_delete_B unsafe.Pointer

func _swig_wrap_delete_B(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_B, _swig_p)
	return
}

func DeleteB(arg1 B) {
	_swig_wrap_delete_B(arg1.Swigcptr())
}

var _wrap_B_get_rca unsafe.Pointer

func _swig_wrap_B_get_rca(base SwigcptrB) (_ SwigcptrRCPtr_Sl_A_Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_get_rca, _swig_p)
	return
}

func (arg1 SwigcptrB) Get_rca() (_swig_ret RCPtr_Sl_A_Sg_) {
	return _swig_wrap_B_get_rca(arg1)
}

var _wrap_B_ref_count unsafe.Pointer

func _swig_wrap_B_ref_count(base SwigcptrB) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_ref_count, _swig_p)
	return
}

func (_swig_base SwigcptrB) Ref_count() (_swig_ret int) {
	return _swig_wrap_B_ref_count(_swig_base)
}

var _wrap_B_addref unsafe.Pointer

func _swig_wrap_B_addref(base SwigcptrB) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_addref, _swig_p)
	return
}

func (_swig_base SwigcptrB) Addref() (_swig_ret int) {
	return _swig_wrap_B_addref(_swig_base)
}

var _wrap_B_delref unsafe.Pointer

func _swig_wrap_B_delref(base SwigcptrB) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_delref, _swig_p)
	return
}

func (_swig_base SwigcptrB) Delref() (_swig_ret int) {
	return _swig_wrap_B_delref(_swig_base)
}

func (p SwigcptrB) SwigIsRCObj() {
}

func (p SwigcptrB) SwigGetRCObj() RCObj {
	return SwigcptrRCObj(p.Swigcptr())
}

func (p SwigcptrB) SwigIsRCObjBase() {
}

func (p SwigcptrB) SwigGetRCObjBase() RCObjBase {
	return SwigcptrRCObjBase(p.Swigcptr())
}

type B interface {
	Swigcptr() uintptr
	SwigIsB()
	Get_a() (_swig_ret A)
	Cloner() (_swig_ret B)
	Get_rca() (_swig_ret RCPtr_Sl_A_Sg_)
	Ref_count() (_swig_ret int)
	Addref() (_swig_ret int)
	Delref() (_swig_ret int)
	SwigIsRCObj()
	SwigGetRCObj() RCObj
	SwigIsRCObjBase()
	SwigGetRCObjBase() RCObjBase
}

var _wrap_global_create unsafe.Pointer

func _swig_wrap_global_create(base uintptr) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_global_create, _swig_p)
	return
}

func Global_create(arg1 A) (_swig_ret B) {
	return _swig_wrap_global_create(arg1.Swigcptr())
}

type SwigcptrFactory uintptr

func (p SwigcptrFactory) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFactory) SwigIsFactory() {
}

var _wrap_Factory_create unsafe.Pointer

func _swig_wrap_Factory_create(base uintptr) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Factory_create, _swig_p)
	return
}

func FactoryCreate(arg1 A) (_swig_ret B) {
	return _swig_wrap_Factory_create(arg1.Swigcptr())
}

var _wrap_Factory_create2 unsafe.Pointer

func _swig_wrap_Factory_create2(base SwigcptrFactory, _ uintptr) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Factory_create2, _swig_p)
	return
}

func (arg1 SwigcptrFactory) Create2(arg2 A) (_swig_ret B) {
	return _swig_wrap_Factory_create2(arg1, arg2.Swigcptr())
}

var _wrap_new_Factory unsafe.Pointer

func _swig_wrap_new_Factory() (base SwigcptrFactory) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Factory, _swig_p)
	return
}

func NewFactory() (_swig_ret Factory) {
	return _swig_wrap_new_Factory()
}

var _wrap_delete_Factory unsafe.Pointer

func _swig_wrap_delete_Factory(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Factory, _swig_p)
	return
}

func DeleteFactory(arg1 Factory) {
	_swig_wrap_delete_Factory(arg1.Swigcptr())
}

type Factory interface {
	Swigcptr() uintptr
	SwigIsFactory()
	Create2(arg2 A) (_swig_ret B)
}


type SwigcptrRCPtr_Sl_A_Sg_ uintptr
type RCPtr_Sl_A_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrRCPtr_Sl_A_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

