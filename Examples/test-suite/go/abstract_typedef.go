/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../abstract_typedef.i

package abstract_typedef

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrEngine uintptr

func (p SwigcptrEngine) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEngine) SwigIsEngine() {
}

var _wrap_new_Engine unsafe.Pointer

func _swig_wrap_new_Engine() (base SwigcptrEngine) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Engine, _swig_p)
	return
}

func NewEngine() (_swig_ret Engine) {
	return _swig_wrap_new_Engine()
}

var _wrap_delete_Engine unsafe.Pointer

func _swig_wrap_delete_Engine(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Engine, _swig_p)
	return
}

func DeleteEngine(arg1 Engine) {
	_swig_wrap_delete_Engine(arg1.Swigcptr())
}

type Engine interface {
	Swigcptr() uintptr
	SwigIsEngine()
}

type SwigcptrAbstractBaseClass uintptr

func (p SwigcptrAbstractBaseClass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAbstractBaseClass) SwigIsAbstractBaseClass() {
}

var _wrap_delete_AbstractBaseClass unsafe.Pointer

func _swig_wrap_delete_AbstractBaseClass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_AbstractBaseClass, _swig_p)
	return
}

func DeleteAbstractBaseClass(arg1 AbstractBaseClass) {
	_swig_wrap_delete_AbstractBaseClass(arg1.Swigcptr())
}

var _wrap_AbstractBaseClass_write unsafe.Pointer

func _swig_wrap_AbstractBaseClass_write(base SwigcptrAbstractBaseClass, _ uintptr) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_AbstractBaseClass_write, _swig_p)
	return
}

func (arg1 SwigcptrAbstractBaseClass) Write(arg2 Engine) (_swig_ret bool) {
	return _swig_wrap_AbstractBaseClass_write(arg1, arg2.Swigcptr())
}

type AbstractBaseClass interface {
	Swigcptr() uintptr
	SwigIsAbstractBaseClass()
	Write(arg2 Engine) (_swig_ret bool)
}

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA() (_swig_ret A) {
	return _swig_wrap_new_A()
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

var _wrap_A_write unsafe.Pointer

func _swig_wrap_A_write(base SwigcptrA, _ uintptr) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_write, _swig_p)
	return
}

func (_swig_base SwigcptrA) Write(arg1 Engine) (_swig_ret bool) {
	return _swig_wrap_A_write(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrA) SwigIsAbstractBaseClass() {
}

func (p SwigcptrA) SwigGetAbstractBaseClass() AbstractBaseClass {
	return SwigcptrAbstractBaseClass(p.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	Write(arg1 Engine) (_swig_ret bool)
	SwigIsAbstractBaseClass()
	SwigGetAbstractBaseClass() AbstractBaseClass
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

