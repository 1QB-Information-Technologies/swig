/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../mod_a.i

package mod_a

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA() (_swig_ret A) {
	return _swig_wrap_new_A()
}

var _wrap_A_GetC unsafe.Pointer

func _swig_wrap_A_GetC(base SwigcptrA) (_ SwigcptrC) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_GetC, _swig_p)
	return
}

func (arg1 SwigcptrA) GetC() (_swig_ret C) {
	return _swig_wrap_A_GetC(arg1)
}

var _wrap_A_DoSomething unsafe.Pointer

func _swig_wrap_A_DoSomething(base SwigcptrA, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_DoSomething, _swig_p)
	return
}

func (arg1 SwigcptrA) DoSomething(arg2 A) {
	_swig_wrap_A_DoSomething(arg1, arg2.Swigcptr())
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	GetC() (_swig_ret C)
	DoSomething(arg2 A)
}

type SwigcptrB uintptr

func (p SwigcptrB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrB) SwigIsB() {
}

var _wrap_new_B unsafe.Pointer

func _swig_wrap_new_B() (base SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_B, _swig_p)
	return
}

func NewB() (_swig_ret B) {
	return _swig_wrap_new_B()
}

var _wrap_delete_B unsafe.Pointer

func _swig_wrap_delete_B(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_B, _swig_p)
	return
}

func DeleteB(arg1 B) {
	_swig_wrap_delete_B(arg1.Swigcptr())
}

var _wrap_B_GetC unsafe.Pointer

func _swig_wrap_B_GetC(base SwigcptrB) (_ SwigcptrC) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_GetC, _swig_p)
	return
}

func (_swig_base SwigcptrB) GetC() (_swig_ret C) {
	return _swig_wrap_B_GetC(_swig_base)
}

var _wrap_B_DoSomething unsafe.Pointer

func _swig_wrap_B_DoSomething(base SwigcptrB, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_DoSomething, _swig_p)
	return
}

func (_swig_base SwigcptrB) DoSomething(arg1 A) {
	_swig_wrap_B_DoSomething(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrB) SwigIsA() {
}

func (p SwigcptrB) SwigGetA() A {
	return SwigcptrA(p.Swigcptr())
}

type B interface {
	Swigcptr() uintptr
	SwigIsB()
	GetC() (_swig_ret C)
	DoSomething(arg1 A)
	SwigIsA()
	SwigGetA() A
}


type SwigcptrC uintptr
type C interface {
	Swigcptr() uintptr;
}
func (p SwigcptrC) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

