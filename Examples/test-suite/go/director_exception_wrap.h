/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../director_exception.i

#ifndef SWIG_director_exception_WRAP_H_
#define SWIG_director_exception_WRAP_H_

class SwigDirector_Foo : public Foo
{
 public:
  SwigDirector_Foo(void *swig_p);
  virtual ~SwigDirector_Foo();
  std::string _swig_upcall_ping() {
    return Foo::ping();
  }
  virtual std::string ping();
  std::string _swig_upcall_pong__SWIG_0(int val) {
    return Foo::pong(val);
  }
  virtual std::string pong(int val);
  std::string _swig_upcall_pong__SWIG_1() {
    return Foo::pong();
  }
  virtual std::string pong();
 private:
  void *go_val;
};

class SwigDirector_Bar : public Bar
{
 public:
  SwigDirector_Bar(void *swig_p);
  virtual ~SwigDirector_Bar() throw();
  std::string _swig_upcall_ping() {
    return Bar::ping();
  }
  virtual std::string ping() throw(Exception1, Exception2 &);
  std::string _swig_upcall_pong() {
    return Bar::pong();
  }
  virtual std::string pong() throw(Unknown1, int, Unknown2 &);
  std::string _swig_upcall_pang() {
    return Bar::pang();
  }
  virtual std::string pang() throw();
 private:
  void *go_val;
};

class SwigDirector_ReturnAllTypes : public ReturnAllTypes
{
 public:
  SwigDirector_ReturnAllTypes(void *swig_p);
  int _swig_upcall_return_int() {
    return ReturnAllTypes::return_int();
  }
  virtual int return_int();
  double _swig_upcall_return_double() {
    return ReturnAllTypes::return_double();
  }
  virtual double return_double();
  char const *_swig_upcall_return_const_char_star() {
    return ReturnAllTypes::return_const_char_star();
  }
  virtual char const *return_const_char_star();
  std::string _swig_upcall_return_std_string() {
    return ReturnAllTypes::return_std_string();
  }
  virtual std::string return_std_string();
  Bar _swig_upcall_return_Bar() {
    return ReturnAllTypes::return_Bar();
  }
  virtual Bar return_Bar();
  virtual ~SwigDirector_ReturnAllTypes();
 private:
  void *go_val;
};

#endif
