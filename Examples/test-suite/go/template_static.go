/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_static.i

package template_static

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrFoo_i uintptr

func (p SwigcptrFoo_i) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo_i) SwigIsFoo_i() {
}

var _wrap_foo_i_test_set unsafe.Pointer

func _swig_wrap_foo_i_test_set(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foo_i_test_set, _swig_p)
	return
}

func SetFoo_iTest(arg1 int) {
	_swig_wrap_foo_i_test_set(arg1)
}

var _wrap_foo_i_test_get unsafe.Pointer

func GetFoo_iTest() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_foo_i_test_get, _swig_p)
	return
}
var _wrap_new_foo_i unsafe.Pointer

func _swig_wrap_new_foo_i() (base SwigcptrFoo_i) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_foo_i, _swig_p)
	return
}

func NewFoo_i() (_swig_ret Foo_i) {
	return _swig_wrap_new_foo_i()
}

var _wrap_delete_foo_i unsafe.Pointer

func _swig_wrap_delete_foo_i(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_foo_i, _swig_p)
	return
}

func DeleteFoo_i(arg1 Foo_i) {
	_swig_wrap_delete_foo_i(arg1.Swigcptr())
}

type Foo_i interface {
	Swigcptr() uintptr
	SwigIsFoo_i()
}

type SwigcptrFoo_d uintptr

func (p SwigcptrFoo_d) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo_d) SwigIsFoo_d() {
}

var _wrap_foo_d_test_set unsafe.Pointer

func _swig_wrap_foo_d_test_set(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_foo_d_test_set, _swig_p)
	return
}

func SetFoo_dTest(arg1 int) {
	_swig_wrap_foo_d_test_set(arg1)
}

var _wrap_foo_d_test_get unsafe.Pointer

func GetFoo_dTest() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_foo_d_test_get, _swig_p)
	return
}
var _wrap_new_foo_d unsafe.Pointer

func _swig_wrap_new_foo_d() (base SwigcptrFoo_d) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_foo_d, _swig_p)
	return
}

func NewFoo_d() (_swig_ret Foo_d) {
	return _swig_wrap_new_foo_d()
}

var _wrap_delete_foo_d unsafe.Pointer

func _swig_wrap_delete_foo_d(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_foo_d, _swig_p)
	return
}

func DeleteFoo_d(arg1 Foo_d) {
	_swig_wrap_delete_foo_d(arg1.Swigcptr())
}

type Foo_d interface {
	Swigcptr() uintptr
	SwigIsFoo_d()
}

type SwigcptrFoo uintptr

func (p SwigcptrFoo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo) SwigIsFoo() {
}

var _wrap_Foo_bar_double unsafe.Pointer

func FooBar_double(arg1 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Foo_bar_double, _swig_p)
	return
}
var _wrap_new_Foo unsafe.Pointer

func _swig_wrap_new_Foo() (base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo, _swig_p)
	return
}

func NewFoo() (_swig_ret Foo) {
	return _swig_wrap_new_Foo()
}

var _wrap_delete_Foo unsafe.Pointer

func _swig_wrap_delete_Foo(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo, _swig_p)
	return
}

func DeleteFoo(arg1 Foo) {
	_swig_wrap_delete_Foo(arg1.Swigcptr())
}

type Foo interface {
	Swigcptr() uintptr
	SwigIsFoo()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

