/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_typedef_funcptr.i

package template_typedef_funcptr

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrMCContract uintptr

func (p SwigcptrMCContract) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMCContract) SwigIsMCContract() {
}

var _wrap_new_MCContract unsafe.Pointer

func _swig_wrap_new_MCContract() (base SwigcptrMCContract) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MCContract, _swig_p)
	return
}

func NewMCContract() (_swig_ret MCContract) {
	return _swig_wrap_new_MCContract()
}

var _wrap_delete_MCContract unsafe.Pointer

func _swig_wrap_delete_MCContract(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MCContract, _swig_p)
	return
}

func DeleteMCContract(arg1 MCContract) {
	_swig_wrap_delete_MCContract(arg1.Swigcptr())
}

type MCContract interface {
	Swigcptr() uintptr
	SwigIsMCContract()
}

type SwigcptrMCContractFactory uintptr

func (p SwigcptrMCContractFactory) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMCContractFactory) SwigIsMCContractFactory() {
}

var _wrap_MCContractFactory_getInstance unsafe.Pointer

func _swig_wrap_MCContractFactory_getInstance() (base SwigcptrMCContractFactory) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MCContractFactory_getInstance, _swig_p)
	return
}

func MCContractFactoryGetInstance() (_swig_ret MCContractFactory) {
	return _swig_wrap_MCContractFactory_getInstance()
}

var _wrap_new_MCContractFactory unsafe.Pointer

func _swig_wrap_new_MCContractFactory() (base SwigcptrMCContractFactory) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MCContractFactory, _swig_p)
	return
}

func NewMCContractFactory() (_swig_ret MCContractFactory) {
	return _swig_wrap_new_MCContractFactory()
}

var _wrap_delete_MCContractFactory unsafe.Pointer

func _swig_wrap_delete_MCContractFactory(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MCContractFactory, _swig_p)
	return
}

func DeleteMCContractFactory(arg1 MCContractFactory) {
	_swig_wrap_delete_MCContractFactory(arg1.Swigcptr())
}

type MCContractFactory interface {
	Swigcptr() uintptr
	SwigIsMCContractFactory()
}

type SwigcptrMCContractFactory2 uintptr

func (p SwigcptrMCContractFactory2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMCContractFactory2) SwigIsMCContractFactory2() {
}

var _wrap_MCContractFactory2_getInstance unsafe.Pointer

func _swig_wrap_MCContractFactory2_getInstance() (base SwigcptrMCContractFactory2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MCContractFactory2_getInstance, _swig_p)
	return
}

func MCContractFactory2GetInstance() (_swig_ret MCContractFactory2) {
	return _swig_wrap_MCContractFactory2_getInstance()
}

var _wrap_new_MCContractFactory2 unsafe.Pointer

func _swig_wrap_new_MCContractFactory2() (base SwigcptrMCContractFactory2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MCContractFactory2, _swig_p)
	return
}

func NewMCContractFactory2() (_swig_ret MCContractFactory2) {
	return _swig_wrap_new_MCContractFactory2()
}

var _wrap_delete_MCContractFactory2 unsafe.Pointer

func _swig_wrap_delete_MCContractFactory2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MCContractFactory2, _swig_p)
	return
}

func DeleteMCContractFactory2(arg1 MCContractFactory2) {
	_swig_wrap_delete_MCContractFactory2(arg1.Swigcptr())
}

type MCContractFactory2 interface {
	Swigcptr() uintptr
	SwigIsMCContractFactory2()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

