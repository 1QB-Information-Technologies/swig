/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../go_inout.i

package go_inout

import "unsafe"
import _ "runtime/cgo"
import "encoding/json"
import "bytes"
import "encoding/binary"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte



type In json.Marshaler


type SwigcptrMyStruct uintptr

func (p SwigcptrMyStruct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyStruct) SwigIsMyStruct() {
}

var _wrap_MyStruct_str_set unsafe.Pointer

func _swig_wrap_MyStruct_str_set(base SwigcptrMyStruct, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyStruct_str_set, _swig_p)
	return
}

func (arg1 SwigcptrMyStruct) SetStr(arg2 Std_string) {
	_swig_wrap_MyStruct_str_set(arg1, arg2.Swigcptr())
}

var _wrap_MyStruct_str_get unsafe.Pointer

func _swig_wrap_MyStruct_str_get(base SwigcptrMyStruct) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyStruct_str_get, _swig_p)
	return
}

func (arg1 SwigcptrMyStruct) GetStr() (_swig_ret Std_string) {
	return _swig_wrap_MyStruct_str_get(arg1)
}

var _wrap_new_MyStruct unsafe.Pointer

func _swig_wrap_new_MyStruct() (base SwigcptrMyStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyStruct, _swig_p)
	return
}

func NewMyStruct() (_swig_ret MyStruct) {
	return _swig_wrap_new_MyStruct()
}

var _wrap_delete_MyStruct unsafe.Pointer

func _swig_wrap_delete_MyStruct(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyStruct, _swig_p)
	return
}

func DeleteMyStruct(arg1 MyStruct) {
	_swig_wrap_delete_MyStruct(arg1.Swigcptr())
}

type MyStruct interface {
	Swigcptr() uintptr
	SwigIsMyStruct()
	SetStr(arg2 Std_string)
	GetStr() (_swig_ret Std_string)
}

type SwigcptrRetStruct uintptr

func (p SwigcptrRetStruct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRetStruct) SwigIsRetStruct() {
}

var _wrap_RetStruct_str_set unsafe.Pointer

func _swig_wrap_RetStruct_str_set(base SwigcptrRetStruct, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RetStruct_str_set, _swig_p)
	return
}

func (arg1 SwigcptrRetStruct) SetStr(arg2 Std_string) {
	_swig_wrap_RetStruct_str_set(arg1, arg2.Swigcptr())
}

var _wrap_RetStruct_str_get unsafe.Pointer

func _swig_wrap_RetStruct_str_get(base SwigcptrRetStruct) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RetStruct_str_get, _swig_p)
	return
}

func (arg1 SwigcptrRetStruct) GetStr() (_swig_ret Std_string) {
	return _swig_wrap_RetStruct_str_get(arg1)
}

var _wrap_new_RetStruct unsafe.Pointer

func _swig_wrap_new_RetStruct() (base SwigcptrRetStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_RetStruct, _swig_p)
	return
}

func NewRetStruct() (_swig_ret RetStruct) {
	return _swig_wrap_new_RetStruct()
}

var _wrap_delete_RetStruct unsafe.Pointer

func _swig_wrap_delete_RetStruct(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_RetStruct, _swig_p)
	return
}

func DeleteRetStruct(arg1 RetStruct) {
	_swig_wrap_delete_RetStruct(arg1.Swigcptr())
}

type RetStruct interface {
	Swigcptr() uintptr
	SwigIsRetStruct()
	SetStr(arg2 Std_string)
	GetStr() (_swig_ret Std_string)
}

var _wrap_Same unsafe.Pointer

func _swig_wrap_Same(base string) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Same, _swig_p)
	return
}

func Same(arg1 In) (_swig_ret map[string]interface{}) {
	var swig_r string
	var _swig_i_0 string
	{
		b, err := arg1.MarshalJSON()
		if err != nil {
			panic(err)
		}
		_swig_i_0 = string(b)
	}
	swig_r = _swig_wrap_Same(_swig_i_0)
	var swig_r_1 map[string]interface{}

	if err := json.Unmarshal([]byte(swig_r), &swig_r_1); err != nil {
		panic(err)
	}
	return swig_r_1
}

type SwigcptrMyArray uintptr

func (p SwigcptrMyArray) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyArray) SwigIsMyArray() {
}

var _wrap_MyArray_strings_set unsafe.Pointer

func _swig_wrap_MyArray_strings_set(base SwigcptrMyArray, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyArray_strings_set, _swig_p)
	return
}

func (arg1 SwigcptrMyArray) SetStrings(arg2 Std_vector_Sl_std_string_Sg_) {
	_swig_wrap_MyArray_strings_set(arg1, arg2.Swigcptr())
}

var _wrap_MyArray_strings_get unsafe.Pointer

func _swig_wrap_MyArray_strings_get(base SwigcptrMyArray) (_ SwigcptrStd_vector_Sl_std_string_Sg_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyArray_strings_get, _swig_p)
	return
}

func (arg1 SwigcptrMyArray) GetStrings() (_swig_ret Std_vector_Sl_std_string_Sg_) {
	return _swig_wrap_MyArray_strings_get(arg1)
}

var _wrap_new_MyArray unsafe.Pointer

func _swig_wrap_new_MyArray() (base SwigcptrMyArray) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyArray, _swig_p)
	return
}

func NewMyArray() (_swig_ret MyArray) {
	return _swig_wrap_new_MyArray()
}

var _wrap_delete_MyArray unsafe.Pointer

func _swig_wrap_delete_MyArray(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyArray, _swig_p)
	return
}

func DeleteMyArray(arg1 MyArray) {
	_swig_wrap_delete_MyArray(arg1.Swigcptr())
}

type MyArray interface {
	Swigcptr() uintptr
	SwigIsMyArray()
	SetStrings(arg2 Std_vector_Sl_std_string_Sg_)
	GetStrings() (_swig_ret Std_vector_Sl_std_string_Sg_)
}

var _wrap_getuint64 unsafe.Pointer

func _swig_wrap_getuint64(base string) (_ SwigcptrUint64_t) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_getuint64, _swig_p)
	return
}

func Getuint64(arg1 string) (_swig_ret Uint64_t) {
	return _swig_wrap_getuint64(arg1)
}

var _wrap_putuint64 unsafe.Pointer

func _swig_wrap_putuint64(base uintptr, _ int64, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_putuint64, _swig_p)
	return
}

func Putuint64(arg1 Std_string, arg2 int64, arg3 Uint64_t) {
	_swig_wrap_putuint64(arg1.Swigcptr(), arg2, arg3.Swigcptr())
}

var _wrap_DoubleArray unsafe.Pointer

func _swig_wrap_DoubleArray(base *string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DoubleArray, _swig_p)
	return
}

func DoubleArray(arg1 *[]string) {
	var _swig_i_0 *string
	{
		var buf bytes.Buffer
		bin := binary.LittleEndian
		var b [8]byte
		bin.PutUint64(b[:], uint64(len(*arg1)))
		buf.Write(b[:])
		for _, s := range *arg1 {
			bin.PutUint64(b[:], uint64(len(s)))
			buf.Write(b[:])
			buf.WriteString(s)
		}
		str := buf.String()
		_swig_i_0 = &str
	}
	_swig_wrap_DoubleArray(_swig_i_0)

	{
		str := *_swig_i_0
		bin := binary.LittleEndian
		size := bin.Uint64([]byte(str[:8]))
		str = str[8:]
		r := make([]string, size)
		for i := range r {
			len := bin.Uint64([]byte(str[:8]))
			str = str[8:]
			r[i] = str[:len]
			str = str[len:]
		}
		*arg1 = r
	}
  
}


type SwigcptrStd_string uintptr
type Std_string interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_string) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_string_Sg_ uintptr
type Std_vector_Sl_std_string_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_string_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrUint64_t uintptr
type Uint64_t interface {
	Swigcptr() uintptr;
}
func (p SwigcptrUint64_t) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

