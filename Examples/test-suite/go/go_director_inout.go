/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../go_director_inout.i

package go_director_inout

import "unsafe"
import _ "runtime/cgo"
import "encoding/json"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte



type GoRetStruct struct {
	Str string
}


type SwigcptrMyStruct uintptr

func (p SwigcptrMyStruct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyStruct) SwigIsMyStruct() {
}

var _wrap_MyStruct_str_set unsafe.Pointer

func _swig_wrap_MyStruct_str_set(base SwigcptrMyStruct, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyStruct_str_set, _swig_p)
	return
}

func (arg1 SwigcptrMyStruct) SetStr(arg2 Std_string) {
	_swig_wrap_MyStruct_str_set(arg1, arg2.Swigcptr())
}

var _wrap_MyStruct_str_get unsafe.Pointer

func _swig_wrap_MyStruct_str_get(base SwigcptrMyStruct) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyStruct_str_get, _swig_p)
	return
}

func (arg1 SwigcptrMyStruct) GetStr() (_swig_ret Std_string) {
	return _swig_wrap_MyStruct_str_get(arg1)
}

var _wrap_new_MyStruct unsafe.Pointer

func _swig_wrap_new_MyStruct() (base SwigcptrMyStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyStruct, _swig_p)
	return
}

func NewMyStruct() (_swig_ret MyStruct) {
	return _swig_wrap_new_MyStruct()
}

var _wrap_delete_MyStruct unsafe.Pointer

func _swig_wrap_delete_MyStruct(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyStruct, _swig_p)
	return
}

func DeleteMyStruct(arg1 MyStruct) {
	_swig_wrap_delete_MyStruct(arg1.Swigcptr())
}

type MyStruct interface {
	Swigcptr() uintptr
	SwigIsMyStruct()
	SetStr(arg2 Std_string)
	GetStr() (_swig_ret Std_string)
}

type SwigcptrRetStruct uintptr

func (p SwigcptrRetStruct) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRetStruct) SwigIsRetStruct() {
}

var _wrap_RetStruct_str_set unsafe.Pointer

func _swig_wrap_RetStruct_str_set(base SwigcptrRetStruct, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RetStruct_str_set, _swig_p)
	return
}

func (arg1 SwigcptrRetStruct) SetStr(arg2 Std_string) {
	_swig_wrap_RetStruct_str_set(arg1, arg2.Swigcptr())
}

var _wrap_RetStruct_str_get unsafe.Pointer

func _swig_wrap_RetStruct_str_get(base SwigcptrRetStruct) (_ SwigcptrStd_string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_RetStruct_str_get, _swig_p)
	return
}

func (arg1 SwigcptrRetStruct) GetStr() (_swig_ret Std_string) {
	return _swig_wrap_RetStruct_str_get(arg1)
}

var _wrap_new_RetStruct unsafe.Pointer

func _swig_wrap_new_RetStruct() (base SwigcptrRetStruct) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_RetStruct, _swig_p)
	return
}

func NewRetStruct() (_swig_ret RetStruct) {
	return _swig_wrap_new_RetStruct()
}

var _wrap_delete_RetStruct unsafe.Pointer

func _swig_wrap_delete_RetStruct(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_RetStruct, _swig_p)
	return
}

func DeleteRetStruct(arg1 RetStruct) {
	_swig_wrap_delete_RetStruct(arg1.Swigcptr())
}

type RetStruct interface {
	Swigcptr() uintptr
	SwigIsRetStruct()
	SetStr(arg2 Std_string)
	GetStr() (_swig_ret Std_string)
}

type _swig_DirectorMyClass struct {
	SwigcptrMyClass
	v interface{}
}

func (p *_swig_DirectorMyClass) Swigcptr() uintptr {
	return p.SwigcptrMyClass.Swigcptr()
}

func (p *_swig_DirectorMyClass) SwigIsMyClass() {
}

func (p *_swig_DirectorMyClass) DirectorInterface() interface{} {
	return p.v
}

var _wrap__swig_NewDirectorMyClassMyClass unsafe.Pointer

func _swig_NewDirectorMyClassMyClass(_swig_director *_swig_DirectorMyClass) (_swig_ret SwigcptrMyClass) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_director))
	_cgo_runtime_cgocall(_wrap__swig_NewDirectorMyClassMyClass, _swig_p)
	return
}

func NewDirectorMyClass(v interface{}) MyClass {
	p := &_swig_DirectorMyClass{0, v}
	p.SwigcptrMyClass = _swig_NewDirectorMyClassMyClass(p)
	return p
}

var _wrap_DeleteDirectorMyClass unsafe.Pointer

func _swig_wrap_DeleteDirectorMyClass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_DeleteDirectorMyClass, _swig_p)
	return
}

func DeleteDirectorMyClass(arg1 MyClass) {
	_swig_wrap_DeleteDirectorMyClass(arg1.Swigcptr())
}

func Swiggo_DeleteDirector_MyClass(p *_swig_DirectorMyClass) {
	p.SwigcptrMyClass = 0
}

type _swig_DirectorInterfaceMyClassAdjust interface {
	Adjust(map[string]interface{}) GoRetStruct
}

var _wrap__swig_DirectorMyClass_upcall_Adjust unsafe.Pointer

func _swig_wrap__swig_DirectorMyClass_upcall_Adjust(_swig_ptr SwigcptrMyClass, _ string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ptr))
	_cgo_runtime_cgocall(_wrap__swig_DirectorMyClass_upcall_Adjust, _swig_p)
	return
}

func (swig_p *_swig_DirectorMyClass) Adjust(s map[string]interface{}) GoRetStruct {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceMyClassAdjust); swig_ok {
		return swig_g.Adjust(s)
	}
	var swig_r string
	var _swig_i_0 string
	if b, err := json.Marshal(s); err != nil {
		panic(err)
	} else {
		_swig_i_0 = string(b)
	}
	swig_r = _swig_wrap__swig_DirectorMyClass_upcall_Adjust(swig_p.SwigcptrMyClass, _swig_i_0)
	var swig_r_1 GoRetStruct

	swig_r_1 = GoRetStruct{Str: swig_r}
	return swig_r_1
}

func DirectorMyClassAdjust(p MyClass, arg2 map[string]interface{}) GoRetStruct {
	var swig_r string
	var _swig_i_0 string
	if b, err := json.Marshal(arg2); err != nil {
		panic(err)
	} else {
		_swig_i_0 = string(b)
	}
	swig_r = _swig_wrap__swig_DirectorMyClass_upcall_Adjust(p.(*_swig_DirectorMyClass).SwigcptrMyClass, _swig_i_0)
	var swig_r_1 GoRetStruct

	swig_r_1 = GoRetStruct{Str: swig_r}
	return swig_r_1
}

func Swig_DirectorMyClass_callback_Adjust(p *_swig_DirectorMyClass, arg2 string) (swig_result string) {
	var swig_r GoRetStruct
	var _swig_i_0 map[string]interface{}
	if err := json.Unmarshal([]byte(arg2), &_swig_i_0); err != nil {
		panic(err)
	}
	swig_r = p.Adjust(_swig_i_0)
	var swig_r_1 string

	swig_r_1 = swig_r.Str
	return swig_r_1
}

type SwigcptrMyClass uintptr

func (p SwigcptrMyClass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyClass) SwigIsMyClass() {
}

func (p SwigcptrMyClass) DirectorInterface() interface{} {
	return nil
}

var _wrap_delete_MyClass unsafe.Pointer

func _swig_wrap_delete_MyClass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyClass, _swig_p)
	return
}

func DeleteMyClass(arg1 MyClass) {
	_swig_wrap_delete_MyClass(arg1.Swigcptr())
}

var _wrap_MyClass_Adjust unsafe.Pointer

func _swig_wrap_MyClass_Adjust(base SwigcptrMyClass, _ string) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClass_Adjust, _swig_p)
	return
}

func (arg1 SwigcptrMyClass) Adjust(arg2 map[string]interface{}) (_swig_ret GoRetStruct) {
	var swig_r string
	var _swig_i_1 string
	if b, err := json.Marshal(arg2); err != nil {
		panic(err)
	} else {
		_swig_i_1 = string(b)
	}
	swig_r = _swig_wrap_MyClass_Adjust(arg1, _swig_i_1)
	var swig_r_1 GoRetStruct

	swig_r_1 = GoRetStruct{Str: swig_r}
	return swig_r_1
}

var _wrap_new_MyClass unsafe.Pointer

func _swig_wrap_new_MyClass() (base SwigcptrMyClass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyClass, _swig_p)
	return
}

func NewMyClass() (_swig_ret MyClass) {
	return _swig_wrap_new_MyClass()
}

type MyClass interface {
	Swigcptr() uintptr
	SwigIsMyClass()
	DirectorInterface() interface{}
	Adjust(arg2 map[string]interface{}) (_swig_ret GoRetStruct)
}


type SwigcptrStd_string uintptr
type Std_string interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_string) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_MyClass uintptr
type SwigDirector_MyClass interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_MyClass) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

