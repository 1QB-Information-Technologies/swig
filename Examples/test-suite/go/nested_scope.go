/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../nested_scope.i

package nested_scope

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrGlobal_ uintptr

func (p SwigcptrGlobal_) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrGlobal_) SwigIsGlobal_() {
}

var _wrap_Global__instance_set unsafe.Pointer

func _swig_wrap_Global__instance_set(base SwigcptrGlobal_, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Global__instance_set, _swig_p)
	return
}

func (arg1 SwigcptrGlobal_) SetInstance(arg2 Nested) {
	_swig_wrap_Global__instance_set(arg1, arg2.Swigcptr())
}

var _wrap_Global__instance_get unsafe.Pointer

func _swig_wrap_Global__instance_get(base SwigcptrGlobal_) (_ SwigcptrNested) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Global__instance_get, _swig_p)
	return
}

func (arg1 SwigcptrGlobal_) GetInstance() (_swig_ret Nested) {
	return _swig_wrap_Global__instance_get(arg1)
}

var _wrap_new_Global_ unsafe.Pointer

func _swig_wrap_new_Global_() (base SwigcptrGlobal_) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Global_, _swig_p)
	return
}

func NewGlobal_() (_swig_ret Global_) {
	return _swig_wrap_new_Global_()
}

var _wrap_delete_Global_ unsafe.Pointer

func _swig_wrap_delete_Global_(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Global_, _swig_p)
	return
}

func DeleteGlobal_(arg1 Global_) {
	_swig_wrap_delete_Global_(arg1.Swigcptr())
}

type Global_ interface {
	Swigcptr() uintptr
	SwigIsGlobal_()
	SetInstance(arg2 Nested)
	GetInstance() (_swig_ret Nested)
}

type SwigcptrOuter uintptr

func (p SwigcptrOuter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOuter) SwigIsOuter() {
}

var _wrap_new_Outer unsafe.Pointer

func _swig_wrap_new_Outer() (base SwigcptrOuter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Outer, _swig_p)
	return
}

func NewOuter() (_swig_ret Outer) {
	return _swig_wrap_new_Outer()
}

var _wrap_delete_Outer unsafe.Pointer

func _swig_wrap_delete_Outer(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Outer, _swig_p)
	return
}

func DeleteOuter(arg1 Outer) {
	_swig_wrap_delete_Outer(arg1.Swigcptr())
}

type Outer interface {
	Swigcptr() uintptr
	SwigIsOuter()
}

type SwigcptrNested uintptr

func (p SwigcptrNested) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrNested) SwigIsNested() {
}

var _wrap_Nested_data_set unsafe.Pointer

func _swig_wrap_Nested_data_set(base SwigcptrNested, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Nested_data_set, _swig_p)
	return
}

func (arg1 SwigcptrNested) SetData(arg2 int) {
	_swig_wrap_Nested_data_set(arg1, arg2)
}

var _wrap_Nested_data_get unsafe.Pointer

func _swig_wrap_Nested_data_get(base SwigcptrNested) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Nested_data_get, _swig_p)
	return
}

func (arg1 SwigcptrNested) GetData() (_swig_ret int) {
	return _swig_wrap_Nested_data_get(arg1)
}

var _wrap_new_Nested unsafe.Pointer

func _swig_wrap_new_Nested() (base SwigcptrNested) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Nested, _swig_p)
	return
}

func NewNested() (_swig_ret Nested) {
	return _swig_wrap_new_Nested()
}

var _wrap_delete_Nested unsafe.Pointer

func _swig_wrap_delete_Nested(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Nested, _swig_p)
	return
}

func DeleteNested(arg1 Nested) {
	_swig_wrap_delete_Nested(arg1.Swigcptr())
}

type Nested interface {
	Swigcptr() uintptr
	SwigIsNested()
	SetData(arg2 int)
	GetData() (_swig_ret int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

