/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_methods.i

package template_methods

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_convolve1Bool__SWIG_0 unsafe.Pointer

func Convolve1Bool__SWIG_0() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_convolve1Bool__SWIG_0, _swig_p)
	return
}
var _wrap_convolve1Bool__SWIG_1 unsafe.Pointer

func _swig_wrap_convolve1Bool__SWIG_1(base bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_convolve1Bool__SWIG_1, _swig_p)
	return
}

func Convolve1Bool__SWIG_1(arg1 bool) {
	_swig_wrap_convolve1Bool__SWIG_1(arg1)
}

func Convolve1Bool(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return Convolve1Bool__SWIG_0()
	}
	if argc == 1 {
		Convolve1Bool__SWIG_1(a[0].(bool))
		return 0
	}
	panic("No match for overloaded function call")
}

var _wrap_convolve2Float unsafe.Pointer

func Convolve2Float() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_convolve2Float, _swig_p)
	return
}
var _wrap_convolve3FloatRenamed unsafe.Pointer

func _swig_wrap_convolve3FloatRenamed(base float32) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_convolve3FloatRenamed, _swig_p)
	return
}

func Convolve3FloatRenamed(arg1 float32) {
	_swig_wrap_convolve3FloatRenamed(arg1)
}

var _wrap_convolve4Float unsafe.Pointer

func Convolve4Float() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_convolve4Float, _swig_p)
	return
}
var _wrap_convolve4FloatRenamed unsafe.Pointer

func _swig_wrap_convolve4FloatRenamed(base float32) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_convolve4FloatRenamed, _swig_p)
	return
}

func Convolve4FloatRenamed(arg1 float32) {
	_swig_wrap_convolve4FloatRenamed(arg1)
}

var _wrap_convolve5FloatRenamed__SWIG_0 unsafe.Pointer

func Convolve5FloatRenamed__SWIG_0() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_convolve5FloatRenamed__SWIG_0, _swig_p)
	return
}
var _wrap_convolve5FloatRenamed__SWIG_1 unsafe.Pointer

func _swig_wrap_convolve5FloatRenamed__SWIG_1(base float32) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_convolve5FloatRenamed__SWIG_1, _swig_p)
	return
}

func Convolve5FloatRenamed__SWIG_1(arg1 float32) {
	_swig_wrap_convolve5FloatRenamed__SWIG_1(arg1)
}

func Convolve5FloatRenamed(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 0 {
		return Convolve5FloatRenamed__SWIG_0()
	}
	if argc == 1 {
		Convolve5FloatRenamed__SWIG_1(a[0].(float32))
		return 0
	}
	panic("No match for overloaded function call")
}

type SwigcptrKlass uintptr

func (p SwigcptrKlass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKlass) SwigIsKlass() {
}

var _wrap_Klass_KlassTMethodBoolRenamed unsafe.Pointer

func _swig_wrap_Klass_KlassTMethodBoolRenamed(base SwigcptrKlass, _ bool) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Klass_KlassTMethodBoolRenamed, _swig_p)
	return
}

func (arg1 SwigcptrKlass) KlassTMethodBoolRenamed(arg2 bool) (_swig_ret bool) {
	return _swig_wrap_Klass_KlassTMethodBoolRenamed(arg1, arg2)
}

var _wrap_Klass_KlassTMethodBool unsafe.Pointer

func _swig_wrap_Klass_KlassTMethodBool(base SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Klass_KlassTMethodBool, _swig_p)
	return
}

func (arg1 SwigcptrKlass) KlassTMethodBool() {
	_swig_wrap_Klass_KlassTMethodBool(arg1)
}

var _wrap_Klass_KlassStaticTMethodBoolRenamed unsafe.Pointer

func KlassKlassStaticTMethodBoolRenamed(arg1 bool) (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Klass_KlassStaticTMethodBoolRenamed, _swig_p)
	return
}
var _wrap_Klass_KlassStaticTMethodBool unsafe.Pointer

func _swig_wrap_Klass_KlassStaticTMethodBool() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_Klass_KlassStaticTMethodBool, _swig_p)
	return
}

func KlassKlassStaticTMethodBool() {
	_swig_wrap_Klass_KlassStaticTMethodBool()
}

var _wrap_new_Klass unsafe.Pointer

func _swig_wrap_new_Klass() (base SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Klass, _swig_p)
	return
}

func NewKlass() (_swig_ret Klass) {
	return _swig_wrap_new_Klass()
}

var _wrap_delete_Klass unsafe.Pointer

func _swig_wrap_delete_Klass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Klass, _swig_p)
	return
}

func DeleteKlass(arg1 Klass) {
	_swig_wrap_delete_Klass(arg1.Swigcptr())
}

type Klass interface {
	Swigcptr() uintptr
	SwigIsKlass()
	KlassTMethodBoolRenamed(arg2 bool) (_swig_ret bool)
	KlassTMethodBool()
}

type SwigcptrComponentProperties uintptr

func (p SwigcptrComponentProperties) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrComponentProperties) SwigIsComponentProperties() {
}

var _wrap_new_ComponentProperties unsafe.Pointer

func _swig_wrap_new_ComponentProperties() (base SwigcptrComponentProperties) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ComponentProperties, _swig_p)
	return
}

func NewComponentProperties() (_swig_ret ComponentProperties) {
	return _swig_wrap_new_ComponentProperties()
}

var _wrap_delete_ComponentProperties unsafe.Pointer

func _swig_wrap_delete_ComponentProperties(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ComponentProperties, _swig_p)
	return
}

func DeleteComponentProperties(arg1 ComponentProperties) {
	_swig_wrap_delete_ComponentProperties(arg1.Swigcptr())
}

var _wrap_ComponentProperties_adda__SWIG_3 unsafe.Pointer

func _swig_wrap_ComponentProperties_adda__SWIG_3(base SwigcptrComponentProperties, _ string, _ string, _ string, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ComponentProperties_adda__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrComponentProperties) Adda__SWIG_3(arg2 string, arg3 string, arg4 string, arg5 float64) {
	_swig_wrap_ComponentProperties_adda__SWIG_3(arg1, arg2, arg3, arg4, arg5)
}

var _wrap_ComponentProperties_adda__SWIG_4 unsafe.Pointer

func _swig_wrap_ComponentProperties_adda__SWIG_4(base SwigcptrComponentProperties, _ string, _ string, _ string, _ string, _ string, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ComponentProperties_adda__SWIG_4, _swig_p)
	return
}

func (arg1 SwigcptrComponentProperties) Adda__SWIG_4(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 string) {
	_swig_wrap_ComponentProperties_adda__SWIG_4(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

var _wrap_ComponentProperties_adda__SWIG_5 unsafe.Pointer

func _swig_wrap_ComponentProperties_adda__SWIG_5(base SwigcptrComponentProperties, _ string, _ int, _ string, _ int, _ string, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ComponentProperties_adda__SWIG_5, _swig_p)
	return
}

func (arg1 SwigcptrComponentProperties) Adda__SWIG_5(arg2 string, arg3 int, arg4 string, arg5 int, arg6 string, arg7 int) {
	_swig_wrap_ComponentProperties_adda__SWIG_5(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
}

func (p SwigcptrComponentProperties) Adda(a ...interface{}) {
	argc := len(a)
	if argc == 4 {
		p.Adda__SWIG_3(a[0].(string), a[1].(string), a[2].(string), a[3].(float64))
		return
	}
	if argc == 6 {
		if _, ok := a[1].(string); !ok {
			goto check_2
		}
		if _, ok := a[3].(string); !ok {
			goto check_2
		}
		if _, ok := a[5].(string); !ok {
			goto check_2
		}
		p.Adda__SWIG_4(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string), a[5].(string))
		return
	}
check_2:
	if argc == 6 {
		p.Adda__SWIG_5(a[0].(string), a[1].(int), a[2].(string), a[3].(int), a[4].(string), a[5].(int))
		return
	}
	panic("No match for overloaded function call")
}

type ComponentProperties interface {
	Swigcptr() uintptr
	SwigIsComponentProperties()
	Adda(a ...interface{})
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

