/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../default_args.i

package default_args

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_anonymous__SWIG_0 unsafe.Pointer

func Anonymous__SWIG_0(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_anonymous__SWIG_0, _swig_p)
	return
}
var _wrap_anonymous__SWIG_1 unsafe.Pointer

func Anonymous__SWIG_1() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_anonymous__SWIG_1, _swig_p)
	return
}
func Anonymous(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Anonymous__SWIG_1()
	}
	if argc == 1 {
		return Anonymous__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_booltest__SWIG_0 unsafe.Pointer

func Booltest__SWIG_0(arg1 bool) (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_booltest__SWIG_0, _swig_p)
	return
}
var _wrap_booltest__SWIG_1 unsafe.Pointer

func Booltest__SWIG_1() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_booltest__SWIG_1, _swig_p)
	return
}
func Booltest(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return Booltest__SWIG_1()
	}
	if argc == 1 {
		return Booltest__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

type Flavor int
var _wrap_BITTER unsafe.Pointer

func _swig_getBITTER() (_swig_ret Flavor) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_BITTER, _swig_p)
	return
}
var BITTER Flavor = _swig_getBITTER()
var _wrap_SWEET unsafe.Pointer

func _swig_getSWEET() (_swig_ret Flavor) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_SWEET, _swig_p)
	return
}
var SWEET Flavor = _swig_getSWEET()
type SwigcptrEnumClass uintptr

func (p SwigcptrEnumClass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEnumClass) SwigIsEnumClass() {
}

type EnumClassSpeed int
var _wrap_FAST_EnumClass unsafe.Pointer

func _swig_getEnumClass_FAST_EnumClass() (_swig_ret EnumClassSpeed) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_FAST_EnumClass, _swig_p)
	return
}
var EnumClassFAST EnumClassSpeed = _swig_getEnumClass_FAST_EnumClass()
var _wrap_SLOW_EnumClass unsafe.Pointer

func _swig_getEnumClass_SLOW_EnumClass() (_swig_ret EnumClassSpeed) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_SLOW_EnumClass, _swig_p)
	return
}
var EnumClassSLOW EnumClassSpeed = _swig_getEnumClass_SLOW_EnumClass()
var _wrap_EnumClass_blah__SWIG_0 unsafe.Pointer

func _swig_wrap_EnumClass_blah__SWIG_0(base SwigcptrEnumClass, _ EnumClassSpeed, _ Flavor) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_EnumClass_blah__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrEnumClass) Blah__SWIG_0(arg2 EnumClassSpeed, arg3 Flavor) (_swig_ret bool) {
	return _swig_wrap_EnumClass_blah__SWIG_0(arg1, arg2, arg3)
}

var _wrap_EnumClass_blah__SWIG_1 unsafe.Pointer

func _swig_wrap_EnumClass_blah__SWIG_1(base SwigcptrEnumClass, _ EnumClassSpeed) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_EnumClass_blah__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrEnumClass) Blah__SWIG_1(arg2 EnumClassSpeed) (_swig_ret bool) {
	return _swig_wrap_EnumClass_blah__SWIG_1(arg1, arg2)
}

var _wrap_EnumClass_blah__SWIG_2 unsafe.Pointer

func _swig_wrap_EnumClass_blah__SWIG_2(base SwigcptrEnumClass) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_EnumClass_blah__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrEnumClass) Blah__SWIG_2() (_swig_ret bool) {
	return _swig_wrap_EnumClass_blah__SWIG_2(arg1)
}

func (p SwigcptrEnumClass) Blah(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.Blah__SWIG_2()
	}
	if argc == 1 {
		return p.Blah__SWIG_1(a[0].(EnumClassSpeed))
	}
	if argc == 2 {
		return p.Blah__SWIG_0(a[0].(EnumClassSpeed), a[1].(Flavor))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_EnumClass unsafe.Pointer

func _swig_wrap_new_EnumClass() (base SwigcptrEnumClass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_EnumClass, _swig_p)
	return
}

func NewEnumClass() (_swig_ret EnumClass) {
	return _swig_wrap_new_EnumClass()
}

var _wrap_delete_EnumClass unsafe.Pointer

func _swig_wrap_delete_EnumClass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_EnumClass, _swig_p)
	return
}

func DeleteEnumClass(arg1 EnumClass) {
	_swig_wrap_delete_EnumClass(arg1.Swigcptr())
}

type EnumClass interface {
	Swigcptr() uintptr
	SwigIsEnumClass()
	Blah(a ...interface{}) bool
}

var _wrap_casts1__SWIG_0 unsafe.Pointer

func Casts1__SWIG_0(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_casts1__SWIG_0, _swig_p)
	return
}
var _wrap_casts1__SWIG_1 unsafe.Pointer

func Casts1__SWIG_1() (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_casts1__SWIG_1, _swig_p)
	return
}
func Casts1(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return Casts1__SWIG_1()
	}
	if argc == 1 {
		return Casts1__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_casts2__SWIG_0 unsafe.Pointer

func Casts2__SWIG_0(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_casts2__SWIG_0, _swig_p)
	return
}
var _wrap_casts2__SWIG_1 unsafe.Pointer

func Casts2__SWIG_1() (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_casts2__SWIG_1, _swig_p)
	return
}
func Casts2(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return Casts2__SWIG_1()
	}
	if argc == 1 {
		return Casts2__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_chartest1__SWIG_0 unsafe.Pointer

func Chartest1__SWIG_0(arg1 byte) (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_chartest1__SWIG_0, _swig_p)
	return
}
var _wrap_chartest1__SWIG_1 unsafe.Pointer

func Chartest1__SWIG_1() (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_chartest1__SWIG_1, _swig_p)
	return
}
func Chartest1(a ...interface{}) byte {
	argc := len(a)
	if argc == 0 {
		return Chartest1__SWIG_1()
	}
	if argc == 1 {
		return Chartest1__SWIG_0(a[0].(byte))
	}
	panic("No match for overloaded function call")
}

var _wrap_chartest2__SWIG_0 unsafe.Pointer

func Chartest2__SWIG_0(arg1 byte) (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_chartest2__SWIG_0, _swig_p)
	return
}
var _wrap_chartest2__SWIG_1 unsafe.Pointer

func Chartest2__SWIG_1() (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_chartest2__SWIG_1, _swig_p)
	return
}
func Chartest2(a ...interface{}) byte {
	argc := len(a)
	if argc == 0 {
		return Chartest2__SWIG_1()
	}
	if argc == 1 {
		return Chartest2__SWIG_0(a[0].(byte))
	}
	panic("No match for overloaded function call")
}

type ATypeAType int
var _wrap_NoType unsafe.Pointer

func _swig_getNoType() (_swig_ret ATypeAType) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_NoType, _swig_p)
	return
}
var NoType ATypeAType = _swig_getNoType()
var _wrap_dummy__SWIG_0 unsafe.Pointer

func _swig_wrap_dummy__SWIG_0(base ATypeAType) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_dummy__SWIG_0, _swig_p)
	return
}

func Dummy__SWIG_0(arg1 ATypeAType) {
	_swig_wrap_dummy__SWIG_0(arg1)
}

var _wrap_dummy__SWIG_1 unsafe.Pointer

func _swig_wrap_dummy__SWIG_1() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_dummy__SWIG_1, _swig_p)
	return
}

func Dummy__SWIG_1() {
	_swig_wrap_dummy__SWIG_1()
}

func Dummy(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		Dummy__SWIG_1()
		return
	}
	if argc == 1 {
		Dummy__SWIG_0(a[0].(ATypeAType))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_CONST_NUM_set unsafe.Pointer

func _swig_wrap_CONST_NUM_set(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_CONST_NUM_set, _swig_p)
	return
}

func SetCONST_NUM(arg1 int) {
	_swig_wrap_CONST_NUM_set(arg1)
}

var _wrap_CONST_NUM_get unsafe.Pointer

func GetCONST_NUM() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_CONST_NUM_get, _swig_p)
	return
}
var _wrap_afunction__SWIG_0 unsafe.Pointer

func Afunction__SWIG_0(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_afunction__SWIG_0, _swig_p)
	return
}
var _wrap_afunction__SWIG_1 unsafe.Pointer

func Afunction__SWIG_1() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_afunction__SWIG_1, _swig_p)
	return
}
func Afunction(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Afunction__SWIG_1()
	}
	if argc == 1 {
		return Afunction__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_reftest1__SWIG_0 unsafe.Pointer

func Reftest1__SWIG_0(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_reftest1__SWIG_0, _swig_p)
	return
}
var _wrap_reftest1__SWIG_1 unsafe.Pointer

func Reftest1__SWIG_1() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_reftest1__SWIG_1, _swig_p)
	return
}
func Reftest1(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return Reftest1__SWIG_1()
	}
	if argc == 1 {
		return Reftest1__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_reftest2__SWIG_0 unsafe.Pointer

func Reftest2__SWIG_0(arg1 string) (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_reftest2__SWIG_0, _swig_p)
	return
}
var _wrap_reftest2__SWIG_1 unsafe.Pointer

func Reftest2__SWIG_1() (_swig_ret string) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_reftest2__SWIG_1, _swig_p)
	return
}
func Reftest2(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return Reftest2__SWIG_1()
	}
	if argc == 1 {
		return Reftest2__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

type SwigcptrTree uintptr

func (p SwigcptrTree) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTree) SwigIsTree() {
}

type TreeTypes int
var _wrap_Oak_Tree unsafe.Pointer

func _swig_getTree_Oak_Tree() (_swig_ret TreeTypes) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Oak_Tree, _swig_p)
	return
}
var TreeOak TreeTypes = _swig_getTree_Oak_Tree()
var _wrap_Fir_Tree unsafe.Pointer

func _swig_getTree_Fir_Tree() (_swig_ret TreeTypes) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Fir_Tree, _swig_p)
	return
}
var TreeFir TreeTypes = _swig_getTree_Fir_Tree()
var _wrap_Cedar_Tree unsafe.Pointer

func _swig_getTree_Cedar_Tree() (_swig_ret TreeTypes) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Cedar_Tree, _swig_p)
	return
}
var TreeCedar TreeTypes = _swig_getTree_Cedar_Tree()
var _wrap_Tree_chops unsafe.Pointer

func _swig_wrap_Tree_chops(base SwigcptrTree, _ TreeTypes) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tree_chops, _swig_p)
	return
}

func (arg1 SwigcptrTree) Chops(arg2 TreeTypes) {
	_swig_wrap_Tree_chops(arg1, arg2)
}

var _wrap_Tree_test__SWIG_0 unsafe.Pointer

func _swig_wrap_Tree_test__SWIG_0(base SwigcptrTree, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tree_test__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrTree) Test__SWIG_0(arg2 int) {
	_swig_wrap_Tree_test__SWIG_0(arg1, arg2)
}

var _wrap_Tree_test__SWIG_1 unsafe.Pointer

func _swig_wrap_Tree_test__SWIG_1(base SwigcptrTree) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tree_test__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrTree) Test__SWIG_1() {
	_swig_wrap_Tree_test__SWIG_1(arg1)
}

func (p SwigcptrTree) Test(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Test__SWIG_1()
		return
	}
	if argc == 1 {
		p.Test__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Tree unsafe.Pointer

func _swig_wrap_new_Tree() (base SwigcptrTree) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Tree, _swig_p)
	return
}

func NewTree() (_swig_ret Tree) {
	return _swig_wrap_new_Tree()
}

var _wrap_delete_Tree unsafe.Pointer

func _swig_wrap_delete_Tree(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Tree, _swig_p)
	return
}

func DeleteTree(arg1 Tree) {
	_swig_wrap_delete_Tree(arg1.Swigcptr())
}

type Tree interface {
	Swigcptr() uintptr
	SwigIsTree()
	Chops(arg2 TreeTypes)
	Test(a ...interface{})
}

var _wrap_chops unsafe.Pointer

func Chops(arg1 TreeTypes) (_swig_ret TreeTypes) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_chops, _swig_p)
	return
}
type SwigcptrFoo uintptr

func (p SwigcptrFoo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo) SwigIsFoo() {
}

var _wrap_Foo_bar2_set unsafe.Pointer

func _swig_wrap_Foo_bar2_set(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_bar2_set, _swig_p)
	return
}

func SetFooBar2(arg1 int) {
	_swig_wrap_Foo_bar2_set(arg1)
}

var _wrap_Foo_bar2_get unsafe.Pointer

func GetFooBar2() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Foo_bar2_get, _swig_p)
	return
}
var _wrap_Foo_spam_set unsafe.Pointer

func _swig_wrap_Foo_spam_set(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_spam_set, _swig_p)
	return
}

func SetFooSpam(arg1 int) {
	_swig_wrap_Foo_spam_set(arg1)
}

var _wrap_Foo_spam_get unsafe.Pointer

func GetFooSpam() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Foo_spam_get, _swig_p)
	return
}
var _wrap_new_Foo unsafe.Pointer

func _swig_wrap_new_Foo() (base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo, _swig_p)
	return
}

func NewFoo() (_swig_ret Foo) {
	return _swig_wrap_new_Foo()
}

var _wrap_Foo_method1__SWIG_0 unsafe.Pointer

func _swig_wrap_Foo_method1__SWIG_0(base SwigcptrFoo, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_method1__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Method1__SWIG_0(arg2 int) {
	_swig_wrap_Foo_method1__SWIG_0(arg1, arg2)
}

var _wrap_Foo_method1__SWIG_1 unsafe.Pointer

func _swig_wrap_Foo_method1__SWIG_1(base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_method1__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Method1__SWIG_1() {
	_swig_wrap_Foo_method1__SWIG_1(arg1)
}

func (p SwigcptrFoo) Method1(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Method1__SWIG_1()
		return
	}
	if argc == 1 {
		p.Method1__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_Foo_method2__SWIG_0 unsafe.Pointer

func _swig_wrap_Foo_method2__SWIG_0(base SwigcptrFoo, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_method2__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Method2__SWIG_0(arg2 int) {
	_swig_wrap_Foo_method2__SWIG_0(arg1, arg2)
}

var _wrap_Foo_method2__SWIG_1 unsafe.Pointer

func _swig_wrap_Foo_method2__SWIG_1(base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_method2__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Method2__SWIG_1() {
	_swig_wrap_Foo_method2__SWIG_1(arg1)
}

func (p SwigcptrFoo) Method2(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Method2__SWIG_1()
		return
	}
	if argc == 1 {
		p.Method2__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_Foo_newname__SWIG_0 unsafe.Pointer

func _swig_wrap_Foo_newname__SWIG_0(base SwigcptrFoo, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_newname__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Newname__SWIG_0(arg2 int) {
	_swig_wrap_Foo_newname__SWIG_0(arg1, arg2)
}

var _wrap_Foo_newname__SWIG_1 unsafe.Pointer

func _swig_wrap_Foo_newname__SWIG_1(base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_newname__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Newname__SWIG_1() {
	_swig_wrap_Foo_newname__SWIG_1(arg1)
}

func (p SwigcptrFoo) Newname(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Newname__SWIG_1()
		return
	}
	if argc == 1 {
		p.Newname__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_Foo_renamed3arg unsafe.Pointer

func _swig_wrap_Foo_renamed3arg(base SwigcptrFoo, _ int, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_renamed3arg, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Renamed3arg(arg2 int, arg3 float64) {
	_swig_wrap_Foo_renamed3arg(arg1, arg2, arg3)
}

var _wrap_Foo_renamed2arg unsafe.Pointer

func _swig_wrap_Foo_renamed2arg(base SwigcptrFoo, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_renamed2arg, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Renamed2arg(arg2 int) {
	_swig_wrap_Foo_renamed2arg(arg1, arg2)
}

var _wrap_Foo_renamed1arg unsafe.Pointer

func _swig_wrap_Foo_renamed1arg(base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_renamed1arg, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Renamed1arg() {
	_swig_wrap_Foo_renamed1arg(arg1)
}

var _wrap_delete_Foo unsafe.Pointer

func _swig_wrap_delete_Foo(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo, _swig_p)
	return
}

func DeleteFoo(arg1 Foo) {
	_swig_wrap_delete_Foo(arg1.Swigcptr())
}

type Foo interface {
	Swigcptr() uintptr
	SwigIsFoo()
	Method1(a ...interface{})
	Method2(a ...interface{})
	Newname(a ...interface{})
	Renamed3arg(arg2 int, arg3 float64)
	Renamed2arg(arg2 int)
	Renamed1arg()
}

type MyType int
var _wrap_Val1 unsafe.Pointer

func _swig_getVal1() (_swig_ret MyType) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Val1, _swig_p)
	return
}
var Val1 MyType = _swig_getVal1()
var _wrap_Val2 unsafe.Pointer

func _swig_getVal2() (_swig_ret MyType) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Val2, _swig_p)
	return
}
var Val2 MyType = _swig_getVal2()
type SwigcptrMyClass1 uintptr

func (p SwigcptrMyClass1) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyClass1) SwigIsMyClass1() {
}

var _wrap_new_MyClass1 unsafe.Pointer

func _swig_wrap_new_MyClass1(base MyType) (_ SwigcptrMyClass1) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyClass1, _swig_p)
	return
}

func NewMyClass1(arg1 MyType) (_swig_ret MyClass1) {
	return _swig_wrap_new_MyClass1(arg1)
}

var _wrap_delete_MyClass1 unsafe.Pointer

func _swig_wrap_delete_MyClass1(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyClass1, _swig_p)
	return
}

func DeleteMyClass1(arg1 MyClass1) {
	_swig_wrap_delete_MyClass1(arg1.Swigcptr())
}

type MyClass1 interface {
	Swigcptr() uintptr
	SwigIsMyClass1()
}

type SwigcptrMyClass2 uintptr

func (p SwigcptrMyClass2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMyClass2) SwigIsMyClass2() {
}

var _wrap_MyClass2_set unsafe.Pointer

func _swig_wrap_MyClass2_set(base int, _ SwigcptrMyClass2, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClass2_set, _swig_p)
	return
}

func (arg1 SwigcptrMyClass2) Set(_swig_args ...interface{}) {
	var arg2 MyClass1
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(MyClass1)
	}
	_swig_wrap_MyClass2_set(len(_swig_args), arg1, arg2.Swigcptr())
}

var _wrap_MyClass2_set2__SWIG_0 unsafe.Pointer

func _swig_wrap_MyClass2_set2__SWIG_0(base SwigcptrMyClass2, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClass2_set2__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrMyClass2) Set2__SWIG_0(arg2 MyClass1) {
	_swig_wrap_MyClass2_set2__SWIG_0(arg1, arg2.Swigcptr())
}

var _wrap_MyClass2_set2__SWIG_1 unsafe.Pointer

func _swig_wrap_MyClass2_set2__SWIG_1(base SwigcptrMyClass2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MyClass2_set2__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrMyClass2) Set2__SWIG_1() {
	_swig_wrap_MyClass2_set2__SWIG_1(arg1)
}

func (p SwigcptrMyClass2) Set2(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Set2__SWIG_1()
		return
	}
	if argc == 1 {
		p.Set2__SWIG_0(a[0].(MyClass1))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_MyClass2 unsafe.Pointer

func _swig_wrap_new_MyClass2() (base SwigcptrMyClass2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_MyClass2, _swig_p)
	return
}

func NewMyClass2() (_swig_ret MyClass2) {
	return _swig_wrap_new_MyClass2()
}

var _wrap_delete_MyClass2 unsafe.Pointer

func _swig_wrap_delete_MyClass2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_MyClass2, _swig_p)
	return
}

func DeleteMyClass2(arg1 MyClass2) {
	_swig_wrap_delete_MyClass2(arg1.Swigcptr())
}

type MyClass2 interface {
	Swigcptr() uintptr
	SwigIsMyClass2()
	Set(_swig_args ...interface{})
	Set2(a ...interface{})
}

var _wrap_exceptionspec__SWIG_0 unsafe.Pointer

func _swig_wrap_exceptionspec__SWIG_0(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_exceptionspec__SWIG_0, _swig_p)
	return
}

func Exceptionspec__SWIG_0(arg1 int) {
	_swig_wrap_exceptionspec__SWIG_0(arg1)
}

var _wrap_exceptionspec__SWIG_1 unsafe.Pointer

func _swig_wrap_exceptionspec__SWIG_1() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_exceptionspec__SWIG_1, _swig_p)
	return
}

func Exceptionspec__SWIG_1() {
	_swig_wrap_exceptionspec__SWIG_1()
}

func Exceptionspec(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		Exceptionspec__SWIG_1()
		return
	}
	if argc == 1 {
		Exceptionspec__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

type SwigcptrExcept uintptr

func (p SwigcptrExcept) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrExcept) SwigIsExcept() {
}

var _wrap_new_Except__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Except__SWIG_0(base bool, _ int) (_ SwigcptrExcept) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Except__SWIG_0, _swig_p)
	return
}

func NewExcept__SWIG_0(arg1 bool, arg2 int) (_swig_ret Except) {
	return _swig_wrap_new_Except__SWIG_0(arg1, arg2)
}

var _wrap_new_Except__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Except__SWIG_1(base bool) (_ SwigcptrExcept) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Except__SWIG_1, _swig_p)
	return
}

func NewExcept__SWIG_1(arg1 bool) (_swig_ret Except) {
	return _swig_wrap_new_Except__SWIG_1(arg1)
}

func NewExcept(a ...interface{}) Except {
	argc := len(a)
	if argc == 1 {
		return NewExcept__SWIG_1(a[0].(bool))
	}
	if argc == 2 {
		return NewExcept__SWIG_0(a[0].(bool), a[1].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Except_exspec__SWIG_0 unsafe.Pointer

func _swig_wrap_Except_exspec__SWIG_0(base SwigcptrExcept, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Except_exspec__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrExcept) Exspec__SWIG_0(arg2 int) {
	_swig_wrap_Except_exspec__SWIG_0(arg1, arg2)
}

var _wrap_Except_exspec__SWIG_1 unsafe.Pointer

func _swig_wrap_Except_exspec__SWIG_1(base SwigcptrExcept) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Except_exspec__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrExcept) Exspec__SWIG_1() {
	_swig_wrap_Except_exspec__SWIG_1(arg1)
}

func (p SwigcptrExcept) Exspec(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Exspec__SWIG_1()
		return
	}
	if argc == 1 {
		p.Exspec__SWIG_0(a[0].(int))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Except unsafe.Pointer

func _swig_wrap_delete_Except(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Except, _swig_p)
	return
}

func DeleteExcept(arg1 Except) {
	_swig_wrap_delete_Except(arg1.Swigcptr())
}

type Except interface {
	Swigcptr() uintptr
	SwigIsExcept()
	Exspec(a ...interface{})
}

type SwigcptrStatics uintptr

func (p SwigcptrStatics) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStatics) SwigIsStatics() {
}

var _wrap_Statics_staticmethod__SWIG_0 unsafe.Pointer

func StaticsStaticmethod__SWIG_0(arg1 int, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Statics_staticmethod__SWIG_0, _swig_p)
	return
}
var _wrap_Statics_staticmethod__SWIG_1 unsafe.Pointer

func StaticsStaticmethod__SWIG_1(arg1 int, arg2 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Statics_staticmethod__SWIG_1, _swig_p)
	return
}
var _wrap_Statics_staticmethod__SWIG_2 unsafe.Pointer

func StaticsStaticmethod__SWIG_2(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Statics_staticmethod__SWIG_2, _swig_p)
	return
}
var _wrap_Statics_staticmethod__SWIG_3 unsafe.Pointer

func StaticsStaticmethod__SWIG_3() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Statics_staticmethod__SWIG_3, _swig_p)
	return
}
func StaticsStaticmethod(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return StaticsStaticmethod__SWIG_3()
	}
	if argc == 1 {
		return StaticsStaticmethod__SWIG_2(a[0].(int))
	}
	if argc == 2 {
		return StaticsStaticmethod__SWIG_1(a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return StaticsStaticmethod__SWIG_0(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Statics unsafe.Pointer

func _swig_wrap_new_Statics() (base SwigcptrStatics) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Statics, _swig_p)
	return
}

func NewStatics() (_swig_ret Statics) {
	return _swig_wrap_new_Statics()
}

var _wrap_delete_Statics unsafe.Pointer

func _swig_wrap_delete_Statics(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Statics, _swig_p)
	return
}

func DeleteStatics(arg1 Statics) {
	_swig_wrap_delete_Statics(arg1.Swigcptr())
}

type Statics interface {
	Swigcptr() uintptr
	SwigIsStatics()
}

type SwigcptrTricky uintptr

func (p SwigcptrTricky) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTricky) SwigIsTricky() {
}

var _wrap_Tricky_privatedefault__SWIG_0 unsafe.Pointer

func _swig_wrap_Tricky_privatedefault__SWIG_0(base SwigcptrTricky, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_privatedefault__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Privatedefault__SWIG_0(arg2 int) (_swig_ret int) {
	return _swig_wrap_Tricky_privatedefault__SWIG_0(arg1, arg2)
}

var _wrap_Tricky_privatedefault__SWIG_1 unsafe.Pointer

func _swig_wrap_Tricky_privatedefault__SWIG_1(base SwigcptrTricky) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_privatedefault__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Privatedefault__SWIG_1() (_swig_ret int) {
	return _swig_wrap_Tricky_privatedefault__SWIG_1(arg1)
}

func (p SwigcptrTricky) Privatedefault(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Privatedefault__SWIG_1()
	}
	if argc == 1 {
		return p.Privatedefault__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Tricky_protectedint__SWIG_0 unsafe.Pointer

func _swig_wrap_Tricky_protectedint__SWIG_0(base SwigcptrTricky, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_protectedint__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Protectedint__SWIG_0(arg2 int) (_swig_ret int) {
	return _swig_wrap_Tricky_protectedint__SWIG_0(arg1, arg2)
}

var _wrap_Tricky_protectedint__SWIG_1 unsafe.Pointer

func _swig_wrap_Tricky_protectedint__SWIG_1(base SwigcptrTricky) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_protectedint__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Protectedint__SWIG_1() (_swig_ret int) {
	return _swig_wrap_Tricky_protectedint__SWIG_1(arg1)
}

func (p SwigcptrTricky) Protectedint(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Protectedint__SWIG_1()
	}
	if argc == 1 {
		return p.Protectedint__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Tricky_protecteddouble__SWIG_0 unsafe.Pointer

func _swig_wrap_Tricky_protecteddouble__SWIG_0(base SwigcptrTricky, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_protecteddouble__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Protecteddouble__SWIG_0(arg2 float64) (_swig_ret float64) {
	return _swig_wrap_Tricky_protecteddouble__SWIG_0(arg1, arg2)
}

var _wrap_Tricky_protecteddouble__SWIG_1 unsafe.Pointer

func _swig_wrap_Tricky_protecteddouble__SWIG_1(base SwigcptrTricky) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_protecteddouble__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Protecteddouble__SWIG_1() (_swig_ret float64) {
	return _swig_wrap_Tricky_protecteddouble__SWIG_1(arg1)
}

func (p SwigcptrTricky) Protecteddouble(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return p.Protecteddouble__SWIG_1()
	}
	if argc == 1 {
		return p.Protecteddouble__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Tricky_functiondefault__SWIG_0 unsafe.Pointer

func _swig_wrap_Tricky_functiondefault__SWIG_0(base SwigcptrTricky, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_functiondefault__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Functiondefault__SWIG_0(arg2 int) (_swig_ret int) {
	return _swig_wrap_Tricky_functiondefault__SWIG_0(arg1, arg2)
}

var _wrap_Tricky_functiondefault__SWIG_1 unsafe.Pointer

func _swig_wrap_Tricky_functiondefault__SWIG_1(base SwigcptrTricky) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_functiondefault__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Functiondefault__SWIG_1() (_swig_ret int) {
	return _swig_wrap_Tricky_functiondefault__SWIG_1(arg1)
}

func (p SwigcptrTricky) Functiondefault(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Functiondefault__SWIG_1()
	}
	if argc == 1 {
		return p.Functiondefault__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Tricky_contrived__SWIG_0 unsafe.Pointer

func _swig_wrap_Tricky_contrived__SWIG_0(base SwigcptrTricky, _ string) (_ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_contrived__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Contrived__SWIG_0(arg2 string) (_swig_ret byte) {
	return _swig_wrap_Tricky_contrived__SWIG_0(arg1, arg2)
}

var _wrap_Tricky_contrived__SWIG_1 unsafe.Pointer

func _swig_wrap_Tricky_contrived__SWIG_1(base SwigcptrTricky) (_ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Tricky_contrived__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrTricky) Contrived__SWIG_1() (_swig_ret byte) {
	return _swig_wrap_Tricky_contrived__SWIG_1(arg1)
}

func (p SwigcptrTricky) Contrived(a ...interface{}) byte {
	argc := len(a)
	if argc == 0 {
		return p.Contrived__SWIG_1()
	}
	if argc == 1 {
		return p.Contrived__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Tricky unsafe.Pointer

func _swig_wrap_new_Tricky() (base SwigcptrTricky) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Tricky, _swig_p)
	return
}

func NewTricky() (_swig_ret Tricky) {
	return _swig_wrap_new_Tricky()
}

var _wrap_delete_Tricky unsafe.Pointer

func _swig_wrap_delete_Tricky(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Tricky, _swig_p)
	return
}

func DeleteTricky(arg1 Tricky) {
	_swig_wrap_delete_Tricky(arg1.Swigcptr())
}

type Tricky interface {
	Swigcptr() uintptr
	SwigIsTricky()
	Privatedefault(a ...interface{}) int
	Protectedint(a ...interface{}) int
	Protecteddouble(a ...interface{}) float64
	Functiondefault(a ...interface{}) int
	Contrived(a ...interface{}) byte
}

type SwigcptrKlass uintptr

func (p SwigcptrKlass) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrKlass) SwigIsKlass() {
}

var _wrap_Klass_val_set unsafe.Pointer

func _swig_wrap_Klass_val_set(base SwigcptrKlass, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Klass_val_set, _swig_p)
	return
}

func (arg1 SwigcptrKlass) SetVal(arg2 int) {
	_swig_wrap_Klass_val_set(arg1, arg2)
}

var _wrap_Klass_val_get unsafe.Pointer

func _swig_wrap_Klass_val_get(base SwigcptrKlass) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Klass_val_get, _swig_p)
	return
}

func (arg1 SwigcptrKlass) GetVal() (_swig_ret int) {
	return _swig_wrap_Klass_val_get(arg1)
}

var _wrap_new_Klass__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Klass__SWIG_0(base int) (_ SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Klass__SWIG_0, _swig_p)
	return
}

func NewKlass__SWIG_0(arg1 int) (_swig_ret Klass) {
	return _swig_wrap_new_Klass__SWIG_0(arg1)
}

var _wrap_new_Klass__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Klass__SWIG_1() (base SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Klass__SWIG_1, _swig_p)
	return
}

func NewKlass__SWIG_1() (_swig_ret Klass) {
	return _swig_wrap_new_Klass__SWIG_1()
}

func NewKlass(a ...interface{}) Klass {
	argc := len(a)
	if argc == 0 {
		return NewKlass__SWIG_1()
	}
	if argc == 1 {
		return NewKlass__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Klass unsafe.Pointer

func _swig_wrap_delete_Klass(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Klass, _swig_p)
	return
}

func DeleteKlass(arg1 Klass) {
	_swig_wrap_delete_Klass(arg1.Swigcptr())
}

type Klass interface {
	Swigcptr() uintptr
	SwigIsKlass()
	SetVal(arg2 int)
	GetVal() (_swig_ret int)
}

var _wrap_constructorcall__SWIG_0 unsafe.Pointer

func _swig_wrap_constructorcall__SWIG_0(base uintptr) (_ SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_constructorcall__SWIG_0, _swig_p)
	return
}

func Constructorcall__SWIG_0(arg1 Klass) (_swig_ret Klass) {
	return _swig_wrap_constructorcall__SWIG_0(arg1.Swigcptr())
}

var _wrap_constructorcall__SWIG_1 unsafe.Pointer

func _swig_wrap_constructorcall__SWIG_1() (base SwigcptrKlass) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_constructorcall__SWIG_1, _swig_p)
	return
}

func Constructorcall__SWIG_1() (_swig_ret Klass) {
	return _swig_wrap_constructorcall__SWIG_1()
}

func Constructorcall(a ...interface{}) Klass {
	argc := len(a)
	if argc == 0 {
		return Constructorcall__SWIG_1()
	}
	if argc == 1 {
		return Constructorcall__SWIG_0(a[0].(Klass))
	}
	panic("No match for overloaded function call")
}

type SwigcptrConstMethods uintptr

func (p SwigcptrConstMethods) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConstMethods) SwigIsConstMethods() {
}

var _wrap_ConstMethods_coo__SWIG_0 unsafe.Pointer

func _swig_wrap_ConstMethods_coo__SWIG_0(base SwigcptrConstMethods, _ float64) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ConstMethods_coo__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrConstMethods) Coo__SWIG_0(arg2 float64) (_swig_ret int) {
	return _swig_wrap_ConstMethods_coo__SWIG_0(arg1, arg2)
}

var _wrap_ConstMethods_coo__SWIG_1 unsafe.Pointer

func _swig_wrap_ConstMethods_coo__SWIG_1(base SwigcptrConstMethods) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ConstMethods_coo__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrConstMethods) Coo__SWIG_1() (_swig_ret int) {
	return _swig_wrap_ConstMethods_coo__SWIG_1(arg1)
}

func (p SwigcptrConstMethods) Coo(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Coo__SWIG_1()
	}
	if argc == 1 {
		return p.Coo__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_ConstMethods unsafe.Pointer

func _swig_wrap_new_ConstMethods() (base SwigcptrConstMethods) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ConstMethods, _swig_p)
	return
}

func NewConstMethods() (_swig_ret ConstMethods) {
	return _swig_wrap_new_ConstMethods()
}

var _wrap_delete_ConstMethods unsafe.Pointer

func _swig_wrap_delete_ConstMethods(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ConstMethods, _swig_p)
	return
}

func DeleteConstMethods(arg1 ConstMethods) {
	_swig_wrap_delete_ConstMethods(arg1.Swigcptr())
}

type ConstMethods interface {
	Swigcptr() uintptr
	SwigIsConstMethods()
	Coo(a ...interface{}) int
}

var _wrap_cfunc1 unsafe.Pointer

func _swig_wrap_cfunc1(base int, _ float64, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_cfunc1, _swig_p)
	return
}

func Cfunc1(arg1 float64, _swig_args ...interface{}) (_swig_ret float64) {
	var arg2 float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(float64)
	}
	return _swig_wrap_cfunc1(len(_swig_args), arg1, arg2)
}

var _wrap_cfunc2 unsafe.Pointer

func _swig_wrap_cfunc2(base int, _ float64, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_cfunc2, _swig_p)
	return
}

func Cfunc2(arg1 float64, _swig_args ...interface{}) (_swig_ret float64) {
	var arg2 float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(float64)
	}
	return _swig_wrap_cfunc2(len(_swig_args), arg1, arg2)
}

var _wrap_cfunc3 unsafe.Pointer

func _swig_wrap_cfunc3(base int, _ float64, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_cfunc3, _swig_p)
	return
}

func Cfunc3(arg1 float64, _swig_args ...interface{}) (_swig_ret float64) {
	var arg2 float64
	if len(_swig_args) > 0 {
		arg2 = _swig_args[0].(float64)
	}
	return _swig_wrap_cfunc3(len(_swig_args), arg1, arg2)
}

type SwigcptrPointf uintptr

func (p SwigcptrPointf) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPointf) SwigIsPointf() {
}

var _wrap_Pointf_x_set unsafe.Pointer

func _swig_wrap_Pointf_x_set(base SwigcptrPointf, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Pointf_x_set, _swig_p)
	return
}

func (arg1 SwigcptrPointf) SetX(arg2 float64) {
	_swig_wrap_Pointf_x_set(arg1, arg2)
}

var _wrap_Pointf_x_get unsafe.Pointer

func _swig_wrap_Pointf_x_get(base SwigcptrPointf) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Pointf_x_get, _swig_p)
	return
}

func (arg1 SwigcptrPointf) GetX() (_swig_ret float64) {
	return _swig_wrap_Pointf_x_get(arg1)
}

var _wrap_Pointf_y_set unsafe.Pointer

func _swig_wrap_Pointf_y_set(base SwigcptrPointf, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Pointf_y_set, _swig_p)
	return
}

func (arg1 SwigcptrPointf) SetY(arg2 float64) {
	_swig_wrap_Pointf_y_set(arg1, arg2)
}

var _wrap_Pointf_y_get unsafe.Pointer

func _swig_wrap_Pointf_y_get(base SwigcptrPointf) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Pointf_y_get, _swig_p)
	return
}

func (arg1 SwigcptrPointf) GetY() (_swig_ret float64) {
	return _swig_wrap_Pointf_y_get(arg1)
}

var _wrap_new_Pointf unsafe.Pointer

func _swig_wrap_new_Pointf() (base SwigcptrPointf) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Pointf, _swig_p)
	return
}

func NewPointf() (_swig_ret Pointf) {
	return _swig_wrap_new_Pointf()
}

var _wrap_delete_Pointf unsafe.Pointer

func _swig_wrap_delete_Pointf(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Pointf, _swig_p)
	return
}

func DeletePointf(arg1 Pointf) {
	_swig_wrap_delete_Pointf(arg1.Swigcptr())
}

type Pointf interface {
	Swigcptr() uintptr
	SwigIsPointf()
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

