/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../li_std_combinations.i

package li_std_combinations

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrVectorInt uintptr

func (p SwigcptrVectorInt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorInt) SwigIsVectorInt() {
}

var _wrap_new_VectorInt__SWIG_0 unsafe.Pointer

func _swig_wrap_new_VectorInt__SWIG_0() (base SwigcptrVectorInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorInt__SWIG_0, _swig_p)
	return
}

func NewVectorInt__SWIG_0() (_swig_ret VectorInt) {
	return _swig_wrap_new_VectorInt__SWIG_0()
}

var _wrap_new_VectorInt__SWIG_1 unsafe.Pointer

func _swig_wrap_new_VectorInt__SWIG_1(base int64) (_ SwigcptrVectorInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorInt__SWIG_1, _swig_p)
	return
}

func NewVectorInt__SWIG_1(arg1 int64) (_swig_ret VectorInt) {
	return _swig_wrap_new_VectorInt__SWIG_1(arg1)
}

func NewVectorInt(a ...interface{}) VectorInt {
	argc := len(a)
	if argc == 0 {
		return NewVectorInt__SWIG_0()
	}
	if argc == 1 {
		return NewVectorInt__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_VectorInt_size unsafe.Pointer

func _swig_wrap_VectorInt_size(base SwigcptrVectorInt) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_size, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Size() (_swig_ret int64) {
	return _swig_wrap_VectorInt_size(arg1)
}

var _wrap_VectorInt_capacity unsafe.Pointer

func _swig_wrap_VectorInt_capacity(base SwigcptrVectorInt) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_capacity, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Capacity() (_swig_ret int64) {
	return _swig_wrap_VectorInt_capacity(arg1)
}

var _wrap_VectorInt_reserve unsafe.Pointer

func _swig_wrap_VectorInt_reserve(base SwigcptrVectorInt, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_reserve, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Reserve(arg2 int64) {
	_swig_wrap_VectorInt_reserve(arg1, arg2)
}

var _wrap_VectorInt_isEmpty unsafe.Pointer

func _swig_wrap_VectorInt_isEmpty(base SwigcptrVectorInt) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_VectorInt_isEmpty(arg1)
}

var _wrap_VectorInt_clear unsafe.Pointer

func _swig_wrap_VectorInt_clear(base SwigcptrVectorInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_clear, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Clear() {
	_swig_wrap_VectorInt_clear(arg1)
}

var _wrap_VectorInt_add unsafe.Pointer

func _swig_wrap_VectorInt_add(base SwigcptrVectorInt, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_add, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Add(arg2 int) {
	_swig_wrap_VectorInt_add(arg1, arg2)
}

var _wrap_VectorInt_get unsafe.Pointer

func _swig_wrap_VectorInt_get(base SwigcptrVectorInt, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_get, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Get(arg2 int) (_swig_ret int) {
	return _swig_wrap_VectorInt_get(arg1, arg2)
}

var _wrap_VectorInt_set unsafe.Pointer

func _swig_wrap_VectorInt_set(base SwigcptrVectorInt, _ int, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorInt_set, _swig_p)
	return
}

func (arg1 SwigcptrVectorInt) Set(arg2 int, arg3 int) {
	_swig_wrap_VectorInt_set(arg1, arg2, arg3)
}

var _wrap_delete_VectorInt unsafe.Pointer

func _swig_wrap_delete_VectorInt(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_VectorInt, _swig_p)
	return
}

func DeleteVectorInt(arg1 VectorInt) {
	_swig_wrap_delete_VectorInt(arg1.Swigcptr())
}

type VectorInt interface {
	Swigcptr() uintptr
	SwigIsVectorInt()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 int)
	Get(arg2 int) (_swig_ret int)
	Set(arg2 int, arg3 int)
}

type SwigcptrVectorString uintptr

func (p SwigcptrVectorString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorString) SwigIsVectorString() {
}

var _wrap_new_VectorString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_VectorString__SWIG_0() (base SwigcptrVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorString__SWIG_0, _swig_p)
	return
}

func NewVectorString__SWIG_0() (_swig_ret VectorString) {
	return _swig_wrap_new_VectorString__SWIG_0()
}

var _wrap_new_VectorString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_VectorString__SWIG_1(base int64) (_ SwigcptrVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorString__SWIG_1, _swig_p)
	return
}

func NewVectorString__SWIG_1(arg1 int64) (_swig_ret VectorString) {
	return _swig_wrap_new_VectorString__SWIG_1(arg1)
}

func NewVectorString(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 0 {
		return NewVectorString__SWIG_0()
	}
	if argc == 1 {
		return NewVectorString__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_VectorString_size unsafe.Pointer

func _swig_wrap_VectorString_size(base SwigcptrVectorString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_size, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Size() (_swig_ret int64) {
	return _swig_wrap_VectorString_size(arg1)
}

var _wrap_VectorString_capacity unsafe.Pointer

func _swig_wrap_VectorString_capacity(base SwigcptrVectorString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_capacity, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Capacity() (_swig_ret int64) {
	return _swig_wrap_VectorString_capacity(arg1)
}

var _wrap_VectorString_reserve unsafe.Pointer

func _swig_wrap_VectorString_reserve(base SwigcptrVectorString, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_reserve, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Reserve(arg2 int64) {
	_swig_wrap_VectorString_reserve(arg1, arg2)
}

var _wrap_VectorString_isEmpty unsafe.Pointer

func _swig_wrap_VectorString_isEmpty(base SwigcptrVectorString) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_VectorString_isEmpty(arg1)
}

var _wrap_VectorString_clear unsafe.Pointer

func _swig_wrap_VectorString_clear(base SwigcptrVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_clear, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Clear() {
	_swig_wrap_VectorString_clear(arg1)
}

var _wrap_VectorString_add unsafe.Pointer

func _swig_wrap_VectorString_add(base SwigcptrVectorString, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_add, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Add(arg2 string) {
	_swig_wrap_VectorString_add(arg1, arg2)
}

var _wrap_VectorString_get unsafe.Pointer

func _swig_wrap_VectorString_get(base SwigcptrVectorString, _ int) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_get, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Get(arg2 int) (_swig_ret string) {
	return _swig_wrap_VectorString_get(arg1, arg2)
}

var _wrap_VectorString_set unsafe.Pointer

func _swig_wrap_VectorString_set(base SwigcptrVectorString, _ int, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorString_set, _swig_p)
	return
}

func (arg1 SwigcptrVectorString) Set(arg2 int, arg3 string) {
	_swig_wrap_VectorString_set(arg1, arg2, arg3)
}

var _wrap_delete_VectorString unsafe.Pointer

func _swig_wrap_delete_VectorString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_VectorString, _swig_p)
	return
}

func DeleteVectorString(arg1 VectorString) {
	_swig_wrap_delete_VectorString(arg1.Swigcptr())
}

type VectorString interface {
	Swigcptr() uintptr
	SwigIsVectorString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrPairIntString uintptr

func (p SwigcptrPairIntString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairIntString) SwigIsPairIntString() {
}

var _wrap_new_PairIntString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_PairIntString__SWIG_0() (base SwigcptrPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntString__SWIG_0, _swig_p)
	return
}

func NewPairIntString__SWIG_0() (_swig_ret PairIntString) {
	return _swig_wrap_new_PairIntString__SWIG_0()
}

var _wrap_new_PairIntString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_PairIntString__SWIG_1(base int, _ string) (_ SwigcptrPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntString__SWIG_1, _swig_p)
	return
}

func NewPairIntString__SWIG_1(arg1 int, arg2 string) (_swig_ret PairIntString) {
	return _swig_wrap_new_PairIntString__SWIG_1(arg1, arg2)
}

var _wrap_new_PairIntString__SWIG_2 unsafe.Pointer

func _swig_wrap_new_PairIntString__SWIG_2(base uintptr) (_ SwigcptrPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntString__SWIG_2, _swig_p)
	return
}

func NewPairIntString__SWIG_2(arg1 PairIntString) (_swig_ret PairIntString) {
	return _swig_wrap_new_PairIntString__SWIG_2(arg1.Swigcptr())
}

func NewPairIntString(a ...interface{}) PairIntString {
	argc := len(a)
	if argc == 0 {
		return NewPairIntString__SWIG_0()
	}
	if argc == 1 {
		return NewPairIntString__SWIG_2(a[0].(PairIntString))
	}
	if argc == 2 {
		return NewPairIntString__SWIG_1(a[0].(int), a[1].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_PairIntString_first_set unsafe.Pointer

func _swig_wrap_PairIntString_first_set(base SwigcptrPairIntString, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntString_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairIntString) SetFirst(arg2 int) {
	_swig_wrap_PairIntString_first_set(arg1, arg2)
}

var _wrap_PairIntString_first_get unsafe.Pointer

func _swig_wrap_PairIntString_first_get(base SwigcptrPairIntString) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntString_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairIntString) GetFirst() (_swig_ret int) {
	return _swig_wrap_PairIntString_first_get(arg1)
}

var _wrap_PairIntString_second_set unsafe.Pointer

func _swig_wrap_PairIntString_second_set(base SwigcptrPairIntString, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntString_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairIntString) SetSecond(arg2 string) {
	_swig_wrap_PairIntString_second_set(arg1, arg2)
}

var _wrap_PairIntString_second_get unsafe.Pointer

func _swig_wrap_PairIntString_second_get(base SwigcptrPairIntString) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntString_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairIntString) GetSecond() (_swig_ret string) {
	return _swig_wrap_PairIntString_second_get(arg1)
}

var _wrap_delete_PairIntString unsafe.Pointer

func _swig_wrap_delete_PairIntString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_PairIntString, _swig_p)
	return
}

func DeletePairIntString(arg1 PairIntString) {
	_swig_wrap_delete_PairIntString(arg1.Swigcptr())
}

type PairIntString interface {
	Swigcptr() uintptr
	SwigIsPairIntString()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrVectorPairIntString uintptr

func (p SwigcptrVectorPairIntString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorPairIntString) SwigIsVectorPairIntString() {
}

var _wrap_new_VectorPairIntString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_VectorPairIntString__SWIG_0() (base SwigcptrVectorPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorPairIntString__SWIG_0, _swig_p)
	return
}

func NewVectorPairIntString__SWIG_0() (_swig_ret VectorPairIntString) {
	return _swig_wrap_new_VectorPairIntString__SWIG_0()
}

var _wrap_new_VectorPairIntString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_VectorPairIntString__SWIG_1(base int64) (_ SwigcptrVectorPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorPairIntString__SWIG_1, _swig_p)
	return
}

func NewVectorPairIntString__SWIG_1(arg1 int64) (_swig_ret VectorPairIntString) {
	return _swig_wrap_new_VectorPairIntString__SWIG_1(arg1)
}

func NewVectorPairIntString(a ...interface{}) VectorPairIntString {
	argc := len(a)
	if argc == 0 {
		return NewVectorPairIntString__SWIG_0()
	}
	if argc == 1 {
		return NewVectorPairIntString__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_VectorPairIntString_size unsafe.Pointer

func _swig_wrap_VectorPairIntString_size(base SwigcptrVectorPairIntString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_size, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Size() (_swig_ret int64) {
	return _swig_wrap_VectorPairIntString_size(arg1)
}

var _wrap_VectorPairIntString_capacity unsafe.Pointer

func _swig_wrap_VectorPairIntString_capacity(base SwigcptrVectorPairIntString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_capacity, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Capacity() (_swig_ret int64) {
	return _swig_wrap_VectorPairIntString_capacity(arg1)
}

var _wrap_VectorPairIntString_reserve unsafe.Pointer

func _swig_wrap_VectorPairIntString_reserve(base SwigcptrVectorPairIntString, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_reserve, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Reserve(arg2 int64) {
	_swig_wrap_VectorPairIntString_reserve(arg1, arg2)
}

var _wrap_VectorPairIntString_isEmpty unsafe.Pointer

func _swig_wrap_VectorPairIntString_isEmpty(base SwigcptrVectorPairIntString) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_VectorPairIntString_isEmpty(arg1)
}

var _wrap_VectorPairIntString_clear unsafe.Pointer

func _swig_wrap_VectorPairIntString_clear(base SwigcptrVectorPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_clear, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Clear() {
	_swig_wrap_VectorPairIntString_clear(arg1)
}

var _wrap_VectorPairIntString_add unsafe.Pointer

func _swig_wrap_VectorPairIntString_add(base SwigcptrVectorPairIntString, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_add, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Add(arg2 PairIntString) {
	_swig_wrap_VectorPairIntString_add(arg1, arg2.Swigcptr())
}

var _wrap_VectorPairIntString_get unsafe.Pointer

func _swig_wrap_VectorPairIntString_get(base SwigcptrVectorPairIntString, _ int) (_ SwigcptrPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_get, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Get(arg2 int) (_swig_ret PairIntString) {
	return _swig_wrap_VectorPairIntString_get(arg1, arg2)
}

var _wrap_VectorPairIntString_set unsafe.Pointer

func _swig_wrap_VectorPairIntString_set(base SwigcptrVectorPairIntString, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairIntString_set, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairIntString) Set(arg2 int, arg3 PairIntString) {
	_swig_wrap_VectorPairIntString_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_VectorPairIntString unsafe.Pointer

func _swig_wrap_delete_VectorPairIntString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_VectorPairIntString, _swig_p)
	return
}

func DeleteVectorPairIntString(arg1 VectorPairIntString) {
	_swig_wrap_delete_VectorPairIntString(arg1.Swigcptr())
}

type VectorPairIntString interface {
	Swigcptr() uintptr
	SwigIsVectorPairIntString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 PairIntString)
	Get(arg2 int) (_swig_ret PairIntString)
	Set(arg2 int, arg3 PairIntString)
}

type SwigcptrPairIntVectorString uintptr

func (p SwigcptrPairIntVectorString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairIntVectorString) SwigIsPairIntVectorString() {
}

var _wrap_new_PairIntVectorString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_PairIntVectorString__SWIG_0() (base SwigcptrPairIntVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntVectorString__SWIG_0, _swig_p)
	return
}

func NewPairIntVectorString__SWIG_0() (_swig_ret PairIntVectorString) {
	return _swig_wrap_new_PairIntVectorString__SWIG_0()
}

var _wrap_new_PairIntVectorString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_PairIntVectorString__SWIG_1(base int, _ uintptr) (_ SwigcptrPairIntVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntVectorString__SWIG_1, _swig_p)
	return
}

func NewPairIntVectorString__SWIG_1(arg1 int, arg2 VectorString) (_swig_ret PairIntVectorString) {
	return _swig_wrap_new_PairIntVectorString__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_PairIntVectorString__SWIG_2 unsafe.Pointer

func _swig_wrap_new_PairIntVectorString__SWIG_2(base uintptr) (_ SwigcptrPairIntVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntVectorString__SWIG_2, _swig_p)
	return
}

func NewPairIntVectorString__SWIG_2(arg1 PairIntVectorString) (_swig_ret PairIntVectorString) {
	return _swig_wrap_new_PairIntVectorString__SWIG_2(arg1.Swigcptr())
}

func NewPairIntVectorString(a ...interface{}) PairIntVectorString {
	argc := len(a)
	if argc == 0 {
		return NewPairIntVectorString__SWIG_0()
	}
	if argc == 1 {
		return NewPairIntVectorString__SWIG_2(a[0].(PairIntVectorString))
	}
	if argc == 2 {
		return NewPairIntVectorString__SWIG_1(a[0].(int), a[1].(VectorString))
	}
	panic("No match for overloaded function call")
}

var _wrap_PairIntVectorString_first_set unsafe.Pointer

func _swig_wrap_PairIntVectorString_first_set(base SwigcptrPairIntVectorString, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntVectorString_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairIntVectorString) SetFirst(arg2 int) {
	_swig_wrap_PairIntVectorString_first_set(arg1, arg2)
}

var _wrap_PairIntVectorString_first_get unsafe.Pointer

func _swig_wrap_PairIntVectorString_first_get(base SwigcptrPairIntVectorString) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntVectorString_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairIntVectorString) GetFirst() (_swig_ret int) {
	return _swig_wrap_PairIntVectorString_first_get(arg1)
}

var _wrap_PairIntVectorString_second_set unsafe.Pointer

func _swig_wrap_PairIntVectorString_second_set(base SwigcptrPairIntVectorString, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntVectorString_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairIntVectorString) SetSecond(arg2 VectorString) {
	_swig_wrap_PairIntVectorString_second_set(arg1, arg2.Swigcptr())
}

var _wrap_PairIntVectorString_second_get unsafe.Pointer

func _swig_wrap_PairIntVectorString_second_get(base SwigcptrPairIntVectorString) (_ SwigcptrVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntVectorString_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairIntVectorString) GetSecond() (_swig_ret VectorString) {
	return _swig_wrap_PairIntVectorString_second_get(arg1)
}

var _wrap_delete_PairIntVectorString unsafe.Pointer

func _swig_wrap_delete_PairIntVectorString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_PairIntVectorString, _swig_p)
	return
}

func DeletePairIntVectorString(arg1 PairIntVectorString) {
	_swig_wrap_delete_PairIntVectorString(arg1.Swigcptr())
}

type PairIntVectorString interface {
	Swigcptr() uintptr
	SwigIsPairIntVectorString()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 VectorString)
	GetSecond() (_swig_ret VectorString)
}

type SwigcptrVectorVectorString uintptr

func (p SwigcptrVectorVectorString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorVectorString) SwigIsVectorVectorString() {
}

var _wrap_new_VectorVectorString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_VectorVectorString__SWIG_0() (base SwigcptrVectorVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorVectorString__SWIG_0, _swig_p)
	return
}

func NewVectorVectorString__SWIG_0() (_swig_ret VectorVectorString) {
	return _swig_wrap_new_VectorVectorString__SWIG_0()
}

var _wrap_new_VectorVectorString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_VectorVectorString__SWIG_1(base int64) (_ SwigcptrVectorVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorVectorString__SWIG_1, _swig_p)
	return
}

func NewVectorVectorString__SWIG_1(arg1 int64) (_swig_ret VectorVectorString) {
	return _swig_wrap_new_VectorVectorString__SWIG_1(arg1)
}

func NewVectorVectorString(a ...interface{}) VectorVectorString {
	argc := len(a)
	if argc == 0 {
		return NewVectorVectorString__SWIG_0()
	}
	if argc == 1 {
		return NewVectorVectorString__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_VectorVectorString_size unsafe.Pointer

func _swig_wrap_VectorVectorString_size(base SwigcptrVectorVectorString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_size, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Size() (_swig_ret int64) {
	return _swig_wrap_VectorVectorString_size(arg1)
}

var _wrap_VectorVectorString_capacity unsafe.Pointer

func _swig_wrap_VectorVectorString_capacity(base SwigcptrVectorVectorString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_capacity, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Capacity() (_swig_ret int64) {
	return _swig_wrap_VectorVectorString_capacity(arg1)
}

var _wrap_VectorVectorString_reserve unsafe.Pointer

func _swig_wrap_VectorVectorString_reserve(base SwigcptrVectorVectorString, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_reserve, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Reserve(arg2 int64) {
	_swig_wrap_VectorVectorString_reserve(arg1, arg2)
}

var _wrap_VectorVectorString_isEmpty unsafe.Pointer

func _swig_wrap_VectorVectorString_isEmpty(base SwigcptrVectorVectorString) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_VectorVectorString_isEmpty(arg1)
}

var _wrap_VectorVectorString_clear unsafe.Pointer

func _swig_wrap_VectorVectorString_clear(base SwigcptrVectorVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_clear, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Clear() {
	_swig_wrap_VectorVectorString_clear(arg1)
}

var _wrap_VectorVectorString_add unsafe.Pointer

func _swig_wrap_VectorVectorString_add(base SwigcptrVectorVectorString, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_add, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Add(arg2 VectorString) {
	_swig_wrap_VectorVectorString_add(arg1, arg2.Swigcptr())
}

var _wrap_VectorVectorString_get unsafe.Pointer

func _swig_wrap_VectorVectorString_get(base SwigcptrVectorVectorString, _ int) (_ SwigcptrVectorString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_get, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Get(arg2 int) (_swig_ret VectorString) {
	return _swig_wrap_VectorVectorString_get(arg1, arg2)
}

var _wrap_VectorVectorString_set unsafe.Pointer

func _swig_wrap_VectorVectorString_set(base SwigcptrVectorVectorString, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorVectorString_set, _swig_p)
	return
}

func (arg1 SwigcptrVectorVectorString) Set(arg2 int, arg3 VectorString) {
	_swig_wrap_VectorVectorString_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_VectorVectorString unsafe.Pointer

func _swig_wrap_delete_VectorVectorString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_VectorVectorString, _swig_p)
	return
}

func DeleteVectorVectorString(arg1 VectorVectorString) {
	_swig_wrap_delete_VectorVectorString(arg1.Swigcptr())
}

type VectorVectorString interface {
	Swigcptr() uintptr
	SwigIsVectorVectorString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 VectorString)
	Get(arg2 int) (_swig_ret VectorString)
	Set(arg2 int, arg3 VectorString)
}

type SwigcptrPairIntPairIntString uintptr

func (p SwigcptrPairIntPairIntString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairIntPairIntString) SwigIsPairIntPairIntString() {
}

var _wrap_new_PairIntPairIntString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_PairIntPairIntString__SWIG_0() (base SwigcptrPairIntPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntPairIntString__SWIG_0, _swig_p)
	return
}

func NewPairIntPairIntString__SWIG_0() (_swig_ret PairIntPairIntString) {
	return _swig_wrap_new_PairIntPairIntString__SWIG_0()
}

var _wrap_new_PairIntPairIntString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_PairIntPairIntString__SWIG_1(base int, _ uintptr) (_ SwigcptrPairIntPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntPairIntString__SWIG_1, _swig_p)
	return
}

func NewPairIntPairIntString__SWIG_1(arg1 int, arg2 PairIntString) (_swig_ret PairIntPairIntString) {
	return _swig_wrap_new_PairIntPairIntString__SWIG_1(arg1, arg2.Swigcptr())
}

var _wrap_new_PairIntPairIntString__SWIG_2 unsafe.Pointer

func _swig_wrap_new_PairIntPairIntString__SWIG_2(base uintptr) (_ SwigcptrPairIntPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairIntPairIntString__SWIG_2, _swig_p)
	return
}

func NewPairIntPairIntString__SWIG_2(arg1 PairIntPairIntString) (_swig_ret PairIntPairIntString) {
	return _swig_wrap_new_PairIntPairIntString__SWIG_2(arg1.Swigcptr())
}

func NewPairIntPairIntString(a ...interface{}) PairIntPairIntString {
	argc := len(a)
	if argc == 0 {
		return NewPairIntPairIntString__SWIG_0()
	}
	if argc == 1 {
		return NewPairIntPairIntString__SWIG_2(a[0].(PairIntPairIntString))
	}
	if argc == 2 {
		return NewPairIntPairIntString__SWIG_1(a[0].(int), a[1].(PairIntString))
	}
	panic("No match for overloaded function call")
}

var _wrap_PairIntPairIntString_first_set unsafe.Pointer

func _swig_wrap_PairIntPairIntString_first_set(base SwigcptrPairIntPairIntString, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntPairIntString_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairIntPairIntString) SetFirst(arg2 int) {
	_swig_wrap_PairIntPairIntString_first_set(arg1, arg2)
}

var _wrap_PairIntPairIntString_first_get unsafe.Pointer

func _swig_wrap_PairIntPairIntString_first_get(base SwigcptrPairIntPairIntString) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntPairIntString_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairIntPairIntString) GetFirst() (_swig_ret int) {
	return _swig_wrap_PairIntPairIntString_first_get(arg1)
}

var _wrap_PairIntPairIntString_second_set unsafe.Pointer

func _swig_wrap_PairIntPairIntString_second_set(base SwigcptrPairIntPairIntString, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntPairIntString_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairIntPairIntString) SetSecond(arg2 PairIntString) {
	_swig_wrap_PairIntPairIntString_second_set(arg1, arg2.Swigcptr())
}

var _wrap_PairIntPairIntString_second_get unsafe.Pointer

func _swig_wrap_PairIntPairIntString_second_get(base SwigcptrPairIntPairIntString) (_ SwigcptrPairIntString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairIntPairIntString_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairIntPairIntString) GetSecond() (_swig_ret PairIntString) {
	return _swig_wrap_PairIntPairIntString_second_get(arg1)
}

var _wrap_delete_PairIntPairIntString unsafe.Pointer

func _swig_wrap_delete_PairIntPairIntString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_PairIntPairIntString, _swig_p)
	return
}

func DeletePairIntPairIntString(arg1 PairIntPairIntString) {
	_swig_wrap_delete_PairIntPairIntString(arg1.Swigcptr())
}

type PairIntPairIntString interface {
	Swigcptr() uintptr
	SwigIsPairIntPairIntString()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 PairIntString)
	GetSecond() (_swig_ret PairIntString)
}

type SwigcptrPairDoubleString uintptr

func (p SwigcptrPairDoubleString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairDoubleString) SwigIsPairDoubleString() {
}

var _wrap_new_PairDoubleString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_PairDoubleString__SWIG_0() (base SwigcptrPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairDoubleString__SWIG_0, _swig_p)
	return
}

func NewPairDoubleString__SWIG_0() (_swig_ret PairDoubleString) {
	return _swig_wrap_new_PairDoubleString__SWIG_0()
}

var _wrap_new_PairDoubleString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_PairDoubleString__SWIG_1(base float64, _ string) (_ SwigcptrPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairDoubleString__SWIG_1, _swig_p)
	return
}

func NewPairDoubleString__SWIG_1(arg1 float64, arg2 string) (_swig_ret PairDoubleString) {
	return _swig_wrap_new_PairDoubleString__SWIG_1(arg1, arg2)
}

var _wrap_new_PairDoubleString__SWIG_2 unsafe.Pointer

func _swig_wrap_new_PairDoubleString__SWIG_2(base uintptr) (_ SwigcptrPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_PairDoubleString__SWIG_2, _swig_p)
	return
}

func NewPairDoubleString__SWIG_2(arg1 PairDoubleString) (_swig_ret PairDoubleString) {
	return _swig_wrap_new_PairDoubleString__SWIG_2(arg1.Swigcptr())
}

func NewPairDoubleString(a ...interface{}) PairDoubleString {
	argc := len(a)
	if argc == 0 {
		return NewPairDoubleString__SWIG_0()
	}
	if argc == 1 {
		return NewPairDoubleString__SWIG_2(a[0].(PairDoubleString))
	}
	if argc == 2 {
		return NewPairDoubleString__SWIG_1(a[0].(float64), a[1].(string))
	}
	panic("No match for overloaded function call")
}

var _wrap_PairDoubleString_first_set unsafe.Pointer

func _swig_wrap_PairDoubleString_first_set(base SwigcptrPairDoubleString, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairDoubleString_first_set, _swig_p)
	return
}

func (arg1 SwigcptrPairDoubleString) SetFirst(arg2 float64) {
	_swig_wrap_PairDoubleString_first_set(arg1, arg2)
}

var _wrap_PairDoubleString_first_get unsafe.Pointer

func _swig_wrap_PairDoubleString_first_get(base SwigcptrPairDoubleString) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairDoubleString_first_get, _swig_p)
	return
}

func (arg1 SwigcptrPairDoubleString) GetFirst() (_swig_ret float64) {
	return _swig_wrap_PairDoubleString_first_get(arg1)
}

var _wrap_PairDoubleString_second_set unsafe.Pointer

func _swig_wrap_PairDoubleString_second_set(base SwigcptrPairDoubleString, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairDoubleString_second_set, _swig_p)
	return
}

func (arg1 SwigcptrPairDoubleString) SetSecond(arg2 string) {
	_swig_wrap_PairDoubleString_second_set(arg1, arg2)
}

var _wrap_PairDoubleString_second_get unsafe.Pointer

func _swig_wrap_PairDoubleString_second_get(base SwigcptrPairDoubleString) (_ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_PairDoubleString_second_get, _swig_p)
	return
}

func (arg1 SwigcptrPairDoubleString) GetSecond() (_swig_ret string) {
	return _swig_wrap_PairDoubleString_second_get(arg1)
}

var _wrap_delete_PairDoubleString unsafe.Pointer

func _swig_wrap_delete_PairDoubleString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_PairDoubleString, _swig_p)
	return
}

func DeletePairDoubleString(arg1 PairDoubleString) {
	_swig_wrap_delete_PairDoubleString(arg1.Swigcptr())
}

type PairDoubleString interface {
	Swigcptr() uintptr
	SwigIsPairDoubleString()
	SetFirst(arg2 float64)
	GetFirst() (_swig_ret float64)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrVectorPairDoubleString uintptr

func (p SwigcptrVectorPairDoubleString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorPairDoubleString) SwigIsVectorPairDoubleString() {
}

var _wrap_new_VectorPairDoubleString__SWIG_0 unsafe.Pointer

func _swig_wrap_new_VectorPairDoubleString__SWIG_0() (base SwigcptrVectorPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorPairDoubleString__SWIG_0, _swig_p)
	return
}

func NewVectorPairDoubleString__SWIG_0() (_swig_ret VectorPairDoubleString) {
	return _swig_wrap_new_VectorPairDoubleString__SWIG_0()
}

var _wrap_new_VectorPairDoubleString__SWIG_1 unsafe.Pointer

func _swig_wrap_new_VectorPairDoubleString__SWIG_1(base int64) (_ SwigcptrVectorPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_VectorPairDoubleString__SWIG_1, _swig_p)
	return
}

func NewVectorPairDoubleString__SWIG_1(arg1 int64) (_swig_ret VectorPairDoubleString) {
	return _swig_wrap_new_VectorPairDoubleString__SWIG_1(arg1)
}

func NewVectorPairDoubleString(a ...interface{}) VectorPairDoubleString {
	argc := len(a)
	if argc == 0 {
		return NewVectorPairDoubleString__SWIG_0()
	}
	if argc == 1 {
		return NewVectorPairDoubleString__SWIG_1(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

var _wrap_VectorPairDoubleString_size unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_size(base SwigcptrVectorPairDoubleString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_size, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Size() (_swig_ret int64) {
	return _swig_wrap_VectorPairDoubleString_size(arg1)
}

var _wrap_VectorPairDoubleString_capacity unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_capacity(base SwigcptrVectorPairDoubleString) (_ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_capacity, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Capacity() (_swig_ret int64) {
	return _swig_wrap_VectorPairDoubleString_capacity(arg1)
}

var _wrap_VectorPairDoubleString_reserve unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_reserve(base SwigcptrVectorPairDoubleString, _ int64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_reserve, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Reserve(arg2 int64) {
	_swig_wrap_VectorPairDoubleString_reserve(arg1, arg2)
}

var _wrap_VectorPairDoubleString_isEmpty unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_isEmpty(base SwigcptrVectorPairDoubleString) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_isEmpty, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) IsEmpty() (_swig_ret bool) {
	return _swig_wrap_VectorPairDoubleString_isEmpty(arg1)
}

var _wrap_VectorPairDoubleString_clear unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_clear(base SwigcptrVectorPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_clear, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Clear() {
	_swig_wrap_VectorPairDoubleString_clear(arg1)
}

var _wrap_VectorPairDoubleString_add unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_add(base SwigcptrVectorPairDoubleString, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_add, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Add(arg2 PairDoubleString) {
	_swig_wrap_VectorPairDoubleString_add(arg1, arg2.Swigcptr())
}

var _wrap_VectorPairDoubleString_get unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_get(base SwigcptrVectorPairDoubleString, _ int) (_ SwigcptrPairDoubleString) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_get, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Get(arg2 int) (_swig_ret PairDoubleString) {
	return _swig_wrap_VectorPairDoubleString_get(arg1, arg2)
}

var _wrap_VectorPairDoubleString_set unsafe.Pointer

func _swig_wrap_VectorPairDoubleString_set(base SwigcptrVectorPairDoubleString, _ int, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_VectorPairDoubleString_set, _swig_p)
	return
}

func (arg1 SwigcptrVectorPairDoubleString) Set(arg2 int, arg3 PairDoubleString) {
	_swig_wrap_VectorPairDoubleString_set(arg1, arg2, arg3.Swigcptr())
}

var _wrap_delete_VectorPairDoubleString unsafe.Pointer

func _swig_wrap_delete_VectorPairDoubleString(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_VectorPairDoubleString, _swig_p)
	return
}

func DeleteVectorPairDoubleString(arg1 VectorPairDoubleString) {
	_swig_wrap_delete_VectorPairDoubleString(arg1.Swigcptr())
}

type VectorPairDoubleString interface {
	Swigcptr() uintptr
	SwigIsVectorPairDoubleString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 PairDoubleString)
	Get(arg2 int) (_swig_ret PairDoubleString)
	Set(arg2 int, arg3 PairDoubleString)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

