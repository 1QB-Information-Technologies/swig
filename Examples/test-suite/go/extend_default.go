/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../extend_default.i

package extend_default

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrBefore uintptr

func (p SwigcptrBefore) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBefore) SwigIsBefore() {
}

var _wrap_Before_d_set unsafe.Pointer

func _swig_wrap_Before_d_set(base SwigcptrBefore, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_d_set, _swig_p)
	return
}

func (arg1 SwigcptrBefore) SetD(arg2 float64) {
	_swig_wrap_Before_d_set(arg1, arg2)
}

var _wrap_Before_d_get unsafe.Pointer

func _swig_wrap_Before_d_get(base SwigcptrBefore) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_d_get, _swig_p)
	return
}

func (arg1 SwigcptrBefore) GetD() (_swig_ret float64) {
	return _swig_wrap_Before_d_get(arg1)
}

var _wrap_Before_i_set unsafe.Pointer

func _swig_wrap_Before_i_set(base SwigcptrBefore, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_i_set, _swig_p)
	return
}

func (arg1 SwigcptrBefore) SetI(arg2 int) {
	_swig_wrap_Before_i_set(arg1, arg2)
}

var _wrap_Before_i_get unsafe.Pointer

func _swig_wrap_Before_i_get(base SwigcptrBefore) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_i_get, _swig_p)
	return
}

func (arg1 SwigcptrBefore) GetI() (_swig_ret int) {
	return _swig_wrap_Before_i_get(arg1)
}

var _wrap_new_Before__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Before__SWIG_0(base int, _ float64) (_ SwigcptrBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Before__SWIG_0, _swig_p)
	return
}

func NewBefore__SWIG_0(arg1 int, arg2 float64) (_swig_ret Before) {
	return _swig_wrap_new_Before__SWIG_0(arg1, arg2)
}

var _wrap_new_Before__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Before__SWIG_1(base int) (_ SwigcptrBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Before__SWIG_1, _swig_p)
	return
}

func NewBefore__SWIG_1(arg1 int) (_swig_ret Before) {
	return _swig_wrap_new_Before__SWIG_1(arg1)
}

var _wrap_new_Before__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Before__SWIG_2() (base SwigcptrBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Before__SWIG_2, _swig_p)
	return
}

func NewBefore__SWIG_2() (_swig_ret Before) {
	return _swig_wrap_new_Before__SWIG_2()
}

func NewBefore(a ...interface{}) Before {
	argc := len(a)
	if argc == 0 {
		return NewBefore__SWIG_2()
	}
	if argc == 1 {
		return NewBefore__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return NewBefore__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Before_AddedStaticMethod__SWIG_0 unsafe.Pointer

func BeforeAddedStaticMethod__SWIG_0(arg1 int, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Before_AddedStaticMethod__SWIG_0, _swig_p)
	return
}
var _wrap_Before_AddedStaticMethod__SWIG_1 unsafe.Pointer

func BeforeAddedStaticMethod__SWIG_1(arg1 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Before_AddedStaticMethod__SWIG_1, _swig_p)
	return
}
var _wrap_Before_AddedStaticMethod__SWIG_2 unsafe.Pointer

func BeforeAddedStaticMethod__SWIG_2() (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Before_AddedStaticMethod__SWIG_2, _swig_p)
	return
}
func BeforeAddedStaticMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return BeforeAddedStaticMethod__SWIG_2()
	}
	if argc == 1 {
		return BeforeAddedStaticMethod__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return BeforeAddedStaticMethod__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Before_AddedMethod__SWIG_0 unsafe.Pointer

func _swig_wrap_Before_AddedMethod__SWIG_0(base SwigcptrBefore, _ int, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_AddedMethod__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrBefore) AddedMethod__SWIG_0(arg2 int, arg3 float64) (_swig_ret float64) {
	return _swig_wrap_Before_AddedMethod__SWIG_0(arg1, arg2, arg3)
}

var _wrap_Before_AddedMethod__SWIG_1 unsafe.Pointer

func _swig_wrap_Before_AddedMethod__SWIG_1(base SwigcptrBefore, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_AddedMethod__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrBefore) AddedMethod__SWIG_1(arg2 int) (_swig_ret float64) {
	return _swig_wrap_Before_AddedMethod__SWIG_1(arg1, arg2)
}

var _wrap_Before_AddedMethod__SWIG_2 unsafe.Pointer

func _swig_wrap_Before_AddedMethod__SWIG_2(base SwigcptrBefore) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Before_AddedMethod__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrBefore) AddedMethod__SWIG_2() (_swig_ret float64) {
	return _swig_wrap_Before_AddedMethod__SWIG_2(arg1)
}

func (p SwigcptrBefore) AddedMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return p.AddedMethod__SWIG_2()
	}
	if argc == 1 {
		return p.AddedMethod__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.AddedMethod__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Before unsafe.Pointer

func _swig_wrap_delete_Before(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Before, _swig_p)
	return
}

func DeleteBefore(arg1 Before) {
	_swig_wrap_delete_Before(arg1.Swigcptr())
}

type Before interface {
	Swigcptr() uintptr
	SwigIsBefore()
	SetD(arg2 float64)
	GetD() (_swig_ret float64)
	SetI(arg2 int)
	GetI() (_swig_ret int)
	AddedMethod(a ...interface{}) float64
}

type SwigcptrAfter uintptr

func (p SwigcptrAfter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAfter) SwigIsAfter() {
}

var _wrap_After_d_set unsafe.Pointer

func _swig_wrap_After_d_set(base SwigcptrAfter, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_d_set, _swig_p)
	return
}

func (arg1 SwigcptrAfter) SetD(arg2 float64) {
	_swig_wrap_After_d_set(arg1, arg2)
}

var _wrap_After_d_get unsafe.Pointer

func _swig_wrap_After_d_get(base SwigcptrAfter) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_d_get, _swig_p)
	return
}

func (arg1 SwigcptrAfter) GetD() (_swig_ret float64) {
	return _swig_wrap_After_d_get(arg1)
}

var _wrap_After_i_set unsafe.Pointer

func _swig_wrap_After_i_set(base SwigcptrAfter, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_i_set, _swig_p)
	return
}

func (arg1 SwigcptrAfter) SetI(arg2 int) {
	_swig_wrap_After_i_set(arg1, arg2)
}

var _wrap_After_i_get unsafe.Pointer

func _swig_wrap_After_i_get(base SwigcptrAfter) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_i_get, _swig_p)
	return
}

func (arg1 SwigcptrAfter) GetI() (_swig_ret int) {
	return _swig_wrap_After_i_get(arg1)
}

var _wrap_new_After__SWIG_0 unsafe.Pointer

func _swig_wrap_new_After__SWIG_0(base int, _ float64) (_ SwigcptrAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_After__SWIG_0, _swig_p)
	return
}

func NewAfter__SWIG_0(arg1 int, arg2 float64) (_swig_ret After) {
	return _swig_wrap_new_After__SWIG_0(arg1, arg2)
}

var _wrap_new_After__SWIG_1 unsafe.Pointer

func _swig_wrap_new_After__SWIG_1(base int) (_ SwigcptrAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_After__SWIG_1, _swig_p)
	return
}

func NewAfter__SWIG_1(arg1 int) (_swig_ret After) {
	return _swig_wrap_new_After__SWIG_1(arg1)
}

var _wrap_new_After__SWIG_2 unsafe.Pointer

func _swig_wrap_new_After__SWIG_2() (base SwigcptrAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_After__SWIG_2, _swig_p)
	return
}

func NewAfter__SWIG_2() (_swig_ret After) {
	return _swig_wrap_new_After__SWIG_2()
}

func NewAfter(a ...interface{}) After {
	argc := len(a)
	if argc == 0 {
		return NewAfter__SWIG_2()
	}
	if argc == 1 {
		return NewAfter__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return NewAfter__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_After_AddedStaticMethod__SWIG_0 unsafe.Pointer

func AfterAddedStaticMethod__SWIG_0(arg1 int, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_After_AddedStaticMethod__SWIG_0, _swig_p)
	return
}
var _wrap_After_AddedStaticMethod__SWIG_1 unsafe.Pointer

func AfterAddedStaticMethod__SWIG_1(arg1 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_After_AddedStaticMethod__SWIG_1, _swig_p)
	return
}
var _wrap_After_AddedStaticMethod__SWIG_2 unsafe.Pointer

func AfterAddedStaticMethod__SWIG_2() (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_After_AddedStaticMethod__SWIG_2, _swig_p)
	return
}
func AfterAddedStaticMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return AfterAddedStaticMethod__SWIG_2()
	}
	if argc == 1 {
		return AfterAddedStaticMethod__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return AfterAddedStaticMethod__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_After_AddedMethod__SWIG_0 unsafe.Pointer

func _swig_wrap_After_AddedMethod__SWIG_0(base SwigcptrAfter, _ int, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_AddedMethod__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrAfter) AddedMethod__SWIG_0(arg2 int, arg3 float64) (_swig_ret float64) {
	return _swig_wrap_After_AddedMethod__SWIG_0(arg1, arg2, arg3)
}

var _wrap_After_AddedMethod__SWIG_1 unsafe.Pointer

func _swig_wrap_After_AddedMethod__SWIG_1(base SwigcptrAfter, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_AddedMethod__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrAfter) AddedMethod__SWIG_1(arg2 int) (_swig_ret float64) {
	return _swig_wrap_After_AddedMethod__SWIG_1(arg1, arg2)
}

var _wrap_After_AddedMethod__SWIG_2 unsafe.Pointer

func _swig_wrap_After_AddedMethod__SWIG_2(base SwigcptrAfter) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_After_AddedMethod__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrAfter) AddedMethod__SWIG_2() (_swig_ret float64) {
	return _swig_wrap_After_AddedMethod__SWIG_2(arg1)
}

func (p SwigcptrAfter) AddedMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return p.AddedMethod__SWIG_2()
	}
	if argc == 1 {
		return p.AddedMethod__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.AddedMethod__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_After unsafe.Pointer

func _swig_wrap_delete_After(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_After, _swig_p)
	return
}

func DeleteAfter(arg1 After) {
	_swig_wrap_delete_After(arg1.Swigcptr())
}

type After interface {
	Swigcptr() uintptr
	SwigIsAfter()
	SetD(arg2 float64)
	GetD() (_swig_ret float64)
	SetI(arg2 int)
	GetI() (_swig_ret int)
	AddedMethod(a ...interface{}) float64
}

type SwigcptrOverBefore uintptr

func (p SwigcptrOverBefore) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOverBefore) SwigIsOverBefore() {
}

var _wrap_new_OverBefore__SWIG_0 unsafe.Pointer

func _swig_wrap_new_OverBefore__SWIG_0(base string, _ int, _ float64) (_ SwigcptrOverBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverBefore__SWIG_0, _swig_p)
	return
}

func NewOverBefore__SWIG_0(arg1 string, arg2 int, arg3 float64) (_swig_ret OverBefore) {
	return _swig_wrap_new_OverBefore__SWIG_0(arg1, arg2, arg3)
}

var _wrap_new_OverBefore__SWIG_1 unsafe.Pointer

func _swig_wrap_new_OverBefore__SWIG_1(base string, _ int) (_ SwigcptrOverBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverBefore__SWIG_1, _swig_p)
	return
}

func NewOverBefore__SWIG_1(arg1 string, arg2 int) (_swig_ret OverBefore) {
	return _swig_wrap_new_OverBefore__SWIG_1(arg1, arg2)
}

var _wrap_new_OverBefore__SWIG_2 unsafe.Pointer

func _swig_wrap_new_OverBefore__SWIG_2(base string) (_ SwigcptrOverBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverBefore__SWIG_2, _swig_p)
	return
}

func NewOverBefore__SWIG_2(arg1 string) (_swig_ret OverBefore) {
	return _swig_wrap_new_OverBefore__SWIG_2(arg1)
}

var _wrap_OverBefore_AddedStaticMethod__SWIG_0 unsafe.Pointer

func OverBeforeAddedStaticMethod__SWIG_0(arg1 string, arg2 int, arg3 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedStaticMethod__SWIG_0, _swig_p)
	return
}
var _wrap_OverBefore_AddedStaticMethod__SWIG_1 unsafe.Pointer

func OverBeforeAddedStaticMethod__SWIG_1(arg1 string, arg2 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedStaticMethod__SWIG_1, _swig_p)
	return
}
var _wrap_OverBefore_AddedStaticMethod__SWIG_2 unsafe.Pointer

func OverBeforeAddedStaticMethod__SWIG_2(arg1 string) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedStaticMethod__SWIG_2, _swig_p)
	return
}
var _wrap_OverBefore_AddedMethod__SWIG_0 unsafe.Pointer

func _swig_wrap_OverBefore_AddedMethod__SWIG_0(base SwigcptrOverBefore, _ string, _ int, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedMethod__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) AddedMethod__SWIG_0(arg2 string, arg3 int, arg4 float64) (_swig_ret float64) {
	return _swig_wrap_OverBefore_AddedMethod__SWIG_0(arg1, arg2, arg3, arg4)
}

var _wrap_OverBefore_AddedMethod__SWIG_1 unsafe.Pointer

func _swig_wrap_OverBefore_AddedMethod__SWIG_1(base SwigcptrOverBefore, _ string, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedMethod__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) AddedMethod__SWIG_1(arg2 string, arg3 int) (_swig_ret float64) {
	return _swig_wrap_OverBefore_AddedMethod__SWIG_1(arg1, arg2, arg3)
}

var _wrap_OverBefore_AddedMethod__SWIG_2 unsafe.Pointer

func _swig_wrap_OverBefore_AddedMethod__SWIG_2(base SwigcptrOverBefore, _ string) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedMethod__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) AddedMethod__SWIG_2(arg2 string) (_swig_ret float64) {
	return _swig_wrap_OverBefore_AddedMethod__SWIG_2(arg1, arg2)
}

var _wrap_OverBefore_d_set unsafe.Pointer

func _swig_wrap_OverBefore_d_set(base SwigcptrOverBefore, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_d_set, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) SetD(arg2 float64) {
	_swig_wrap_OverBefore_d_set(arg1, arg2)
}

var _wrap_OverBefore_d_get unsafe.Pointer

func _swig_wrap_OverBefore_d_get(base SwigcptrOverBefore) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_d_get, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) GetD() (_swig_ret float64) {
	return _swig_wrap_OverBefore_d_get(arg1)
}

var _wrap_OverBefore_i_set unsafe.Pointer

func _swig_wrap_OverBefore_i_set(base SwigcptrOverBefore, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_i_set, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) SetI(arg2 int) {
	_swig_wrap_OverBefore_i_set(arg1, arg2)
}

var _wrap_OverBefore_i_get unsafe.Pointer

func _swig_wrap_OverBefore_i_get(base SwigcptrOverBefore) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_i_get, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) GetI() (_swig_ret int) {
	return _swig_wrap_OverBefore_i_get(arg1)
}

var _wrap_new_OverBefore__SWIG_3 unsafe.Pointer

func _swig_wrap_new_OverBefore__SWIG_3(base int, _ float64) (_ SwigcptrOverBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverBefore__SWIG_3, _swig_p)
	return
}

func NewOverBefore__SWIG_3(arg1 int, arg2 float64) (_swig_ret OverBefore) {
	return _swig_wrap_new_OverBefore__SWIG_3(arg1, arg2)
}

var _wrap_new_OverBefore__SWIG_4 unsafe.Pointer

func _swig_wrap_new_OverBefore__SWIG_4(base int) (_ SwigcptrOverBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverBefore__SWIG_4, _swig_p)
	return
}

func NewOverBefore__SWIG_4(arg1 int) (_swig_ret OverBefore) {
	return _swig_wrap_new_OverBefore__SWIG_4(arg1)
}

var _wrap_new_OverBefore__SWIG_5 unsafe.Pointer

func _swig_wrap_new_OverBefore__SWIG_5() (base SwigcptrOverBefore) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverBefore__SWIG_5, _swig_p)
	return
}

func NewOverBefore__SWIG_5() (_swig_ret OverBefore) {
	return _swig_wrap_new_OverBefore__SWIG_5()
}

func NewOverBefore(a ...interface{}) OverBefore {
	argc := len(a)
	if argc == 0 {
		return NewOverBefore__SWIG_5()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewOverBefore__SWIG_4(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewOverBefore__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return NewOverBefore__SWIG_3(a[0].(int), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return NewOverBefore__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return NewOverBefore__SWIG_0(a[0].(string), a[1].(int), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_OverBefore_AddedStaticMethod__SWIG_3 unsafe.Pointer

func OverBeforeAddedStaticMethod__SWIG_3(arg1 int, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedStaticMethod__SWIG_3, _swig_p)
	return
}
var _wrap_OverBefore_AddedStaticMethod__SWIG_4 unsafe.Pointer

func OverBeforeAddedStaticMethod__SWIG_4(arg1 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedStaticMethod__SWIG_4, _swig_p)
	return
}
var _wrap_OverBefore_AddedStaticMethod__SWIG_5 unsafe.Pointer

func OverBeforeAddedStaticMethod__SWIG_5() (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedStaticMethod__SWIG_5, _swig_p)
	return
}
func OverBeforeAddedStaticMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return OverBeforeAddedStaticMethod__SWIG_5()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return OverBeforeAddedStaticMethod__SWIG_4(a[0].(int))
	}
check_2:
	if argc == 1 {
		return OverBeforeAddedStaticMethod__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return OverBeforeAddedStaticMethod__SWIG_3(a[0].(int), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return OverBeforeAddedStaticMethod__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return OverBeforeAddedStaticMethod__SWIG_0(a[0].(string), a[1].(int), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_OverBefore_AddedMethod__SWIG_3 unsafe.Pointer

func _swig_wrap_OverBefore_AddedMethod__SWIG_3(base SwigcptrOverBefore, _ int, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedMethod__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) AddedMethod__SWIG_3(arg2 int, arg3 float64) (_swig_ret float64) {
	return _swig_wrap_OverBefore_AddedMethod__SWIG_3(arg1, arg2, arg3)
}

var _wrap_OverBefore_AddedMethod__SWIG_4 unsafe.Pointer

func _swig_wrap_OverBefore_AddedMethod__SWIG_4(base SwigcptrOverBefore, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedMethod__SWIG_4, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) AddedMethod__SWIG_4(arg2 int) (_swig_ret float64) {
	return _swig_wrap_OverBefore_AddedMethod__SWIG_4(arg1, arg2)
}

var _wrap_OverBefore_AddedMethod__SWIG_5 unsafe.Pointer

func _swig_wrap_OverBefore_AddedMethod__SWIG_5(base SwigcptrOverBefore) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverBefore_AddedMethod__SWIG_5, _swig_p)
	return
}

func (arg1 SwigcptrOverBefore) AddedMethod__SWIG_5() (_swig_ret float64) {
	return _swig_wrap_OverBefore_AddedMethod__SWIG_5(arg1)
}

func (p SwigcptrOverBefore) AddedMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return p.AddedMethod__SWIG_5()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return p.AddedMethod__SWIG_4(a[0].(int))
	}
check_2:
	if argc == 1 {
		return p.AddedMethod__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return p.AddedMethod__SWIG_3(a[0].(int), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return p.AddedMethod__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return p.AddedMethod__SWIG_0(a[0].(string), a[1].(int), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_OverBefore unsafe.Pointer

func _swig_wrap_delete_OverBefore(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_OverBefore, _swig_p)
	return
}

func DeleteOverBefore(arg1 OverBefore) {
	_swig_wrap_delete_OverBefore(arg1.Swigcptr())
}

type OverBefore interface {
	Swigcptr() uintptr
	SwigIsOverBefore()
	SetD(arg2 float64)
	GetD() (_swig_ret float64)
	SetI(arg2 int)
	GetI() (_swig_ret int)
	AddedMethod(a ...interface{}) float64
}

type SwigcptrOverAfter uintptr

func (p SwigcptrOverAfter) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOverAfter) SwigIsOverAfter() {
}

var _wrap_new_OverAfter__SWIG_0 unsafe.Pointer

func _swig_wrap_new_OverAfter__SWIG_0(base string, _ int, _ float64) (_ SwigcptrOverAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverAfter__SWIG_0, _swig_p)
	return
}

func NewOverAfter__SWIG_0(arg1 string, arg2 int, arg3 float64) (_swig_ret OverAfter) {
	return _swig_wrap_new_OverAfter__SWIG_0(arg1, arg2, arg3)
}

var _wrap_new_OverAfter__SWIG_1 unsafe.Pointer

func _swig_wrap_new_OverAfter__SWIG_1(base string, _ int) (_ SwigcptrOverAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverAfter__SWIG_1, _swig_p)
	return
}

func NewOverAfter__SWIG_1(arg1 string, arg2 int) (_swig_ret OverAfter) {
	return _swig_wrap_new_OverAfter__SWIG_1(arg1, arg2)
}

var _wrap_new_OverAfter__SWIG_2 unsafe.Pointer

func _swig_wrap_new_OverAfter__SWIG_2(base string) (_ SwigcptrOverAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverAfter__SWIG_2, _swig_p)
	return
}

func NewOverAfter__SWIG_2(arg1 string) (_swig_ret OverAfter) {
	return _swig_wrap_new_OverAfter__SWIG_2(arg1)
}

var _wrap_OverAfter_AddedStaticMethod__SWIG_0 unsafe.Pointer

func OverAfterAddedStaticMethod__SWIG_0(arg1 string, arg2 int, arg3 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedStaticMethod__SWIG_0, _swig_p)
	return
}
var _wrap_OverAfter_AddedStaticMethod__SWIG_1 unsafe.Pointer

func OverAfterAddedStaticMethod__SWIG_1(arg1 string, arg2 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedStaticMethod__SWIG_1, _swig_p)
	return
}
var _wrap_OverAfter_AddedStaticMethod__SWIG_2 unsafe.Pointer

func OverAfterAddedStaticMethod__SWIG_2(arg1 string) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedStaticMethod__SWIG_2, _swig_p)
	return
}
var _wrap_OverAfter_AddedMethod__SWIG_0 unsafe.Pointer

func _swig_wrap_OverAfter_AddedMethod__SWIG_0(base SwigcptrOverAfter, _ string, _ int, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedMethod__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) AddedMethod__SWIG_0(arg2 string, arg3 int, arg4 float64) (_swig_ret float64) {
	return _swig_wrap_OverAfter_AddedMethod__SWIG_0(arg1, arg2, arg3, arg4)
}

var _wrap_OverAfter_AddedMethod__SWIG_1 unsafe.Pointer

func _swig_wrap_OverAfter_AddedMethod__SWIG_1(base SwigcptrOverAfter, _ string, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedMethod__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) AddedMethod__SWIG_1(arg2 string, arg3 int) (_swig_ret float64) {
	return _swig_wrap_OverAfter_AddedMethod__SWIG_1(arg1, arg2, arg3)
}

var _wrap_OverAfter_AddedMethod__SWIG_2 unsafe.Pointer

func _swig_wrap_OverAfter_AddedMethod__SWIG_2(base SwigcptrOverAfter, _ string) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedMethod__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) AddedMethod__SWIG_2(arg2 string) (_swig_ret float64) {
	return _swig_wrap_OverAfter_AddedMethod__SWIG_2(arg1, arg2)
}

var _wrap_OverAfter_d_set unsafe.Pointer

func _swig_wrap_OverAfter_d_set(base SwigcptrOverAfter, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_d_set, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) SetD(arg2 float64) {
	_swig_wrap_OverAfter_d_set(arg1, arg2)
}

var _wrap_OverAfter_d_get unsafe.Pointer

func _swig_wrap_OverAfter_d_get(base SwigcptrOverAfter) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_d_get, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) GetD() (_swig_ret float64) {
	return _swig_wrap_OverAfter_d_get(arg1)
}

var _wrap_OverAfter_i_set unsafe.Pointer

func _swig_wrap_OverAfter_i_set(base SwigcptrOverAfter, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_i_set, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) SetI(arg2 int) {
	_swig_wrap_OverAfter_i_set(arg1, arg2)
}

var _wrap_OverAfter_i_get unsafe.Pointer

func _swig_wrap_OverAfter_i_get(base SwigcptrOverAfter) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_i_get, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) GetI() (_swig_ret int) {
	return _swig_wrap_OverAfter_i_get(arg1)
}

var _wrap_new_OverAfter__SWIG_3 unsafe.Pointer

func _swig_wrap_new_OverAfter__SWIG_3(base int, _ float64) (_ SwigcptrOverAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverAfter__SWIG_3, _swig_p)
	return
}

func NewOverAfter__SWIG_3(arg1 int, arg2 float64) (_swig_ret OverAfter) {
	return _swig_wrap_new_OverAfter__SWIG_3(arg1, arg2)
}

var _wrap_new_OverAfter__SWIG_4 unsafe.Pointer

func _swig_wrap_new_OverAfter__SWIG_4(base int) (_ SwigcptrOverAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverAfter__SWIG_4, _swig_p)
	return
}

func NewOverAfter__SWIG_4(arg1 int) (_swig_ret OverAfter) {
	return _swig_wrap_new_OverAfter__SWIG_4(arg1)
}

var _wrap_new_OverAfter__SWIG_5 unsafe.Pointer

func _swig_wrap_new_OverAfter__SWIG_5() (base SwigcptrOverAfter) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_OverAfter__SWIG_5, _swig_p)
	return
}

func NewOverAfter__SWIG_5() (_swig_ret OverAfter) {
	return _swig_wrap_new_OverAfter__SWIG_5()
}

func NewOverAfter(a ...interface{}) OverAfter {
	argc := len(a)
	if argc == 0 {
		return NewOverAfter__SWIG_5()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewOverAfter__SWIG_4(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewOverAfter__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return NewOverAfter__SWIG_3(a[0].(int), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return NewOverAfter__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return NewOverAfter__SWIG_0(a[0].(string), a[1].(int), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_OverAfter_AddedStaticMethod__SWIG_3 unsafe.Pointer

func OverAfterAddedStaticMethod__SWIG_3(arg1 int, arg2 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedStaticMethod__SWIG_3, _swig_p)
	return
}
var _wrap_OverAfter_AddedStaticMethod__SWIG_4 unsafe.Pointer

func OverAfterAddedStaticMethod__SWIG_4(arg1 int) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedStaticMethod__SWIG_4, _swig_p)
	return
}
var _wrap_OverAfter_AddedStaticMethod__SWIG_5 unsafe.Pointer

func OverAfterAddedStaticMethod__SWIG_5() (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedStaticMethod__SWIG_5, _swig_p)
	return
}
func OverAfterAddedStaticMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return OverAfterAddedStaticMethod__SWIG_5()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return OverAfterAddedStaticMethod__SWIG_4(a[0].(int))
	}
check_2:
	if argc == 1 {
		return OverAfterAddedStaticMethod__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return OverAfterAddedStaticMethod__SWIG_3(a[0].(int), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return OverAfterAddedStaticMethod__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return OverAfterAddedStaticMethod__SWIG_0(a[0].(string), a[1].(int), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_OverAfter_AddedMethod__SWIG_3 unsafe.Pointer

func _swig_wrap_OverAfter_AddedMethod__SWIG_3(base SwigcptrOverAfter, _ int, _ float64) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedMethod__SWIG_3, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) AddedMethod__SWIG_3(arg2 int, arg3 float64) (_swig_ret float64) {
	return _swig_wrap_OverAfter_AddedMethod__SWIG_3(arg1, arg2, arg3)
}

var _wrap_OverAfter_AddedMethod__SWIG_4 unsafe.Pointer

func _swig_wrap_OverAfter_AddedMethod__SWIG_4(base SwigcptrOverAfter, _ int) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedMethod__SWIG_4, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) AddedMethod__SWIG_4(arg2 int) (_swig_ret float64) {
	return _swig_wrap_OverAfter_AddedMethod__SWIG_4(arg1, arg2)
}

var _wrap_OverAfter_AddedMethod__SWIG_5 unsafe.Pointer

func _swig_wrap_OverAfter_AddedMethod__SWIG_5(base SwigcptrOverAfter) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_OverAfter_AddedMethod__SWIG_5, _swig_p)
	return
}

func (arg1 SwigcptrOverAfter) AddedMethod__SWIG_5() (_swig_ret float64) {
	return _swig_wrap_OverAfter_AddedMethod__SWIG_5(arg1)
}

func (p SwigcptrOverAfter) AddedMethod(a ...interface{}) float64 {
	argc := len(a)
	if argc == 0 {
		return p.AddedMethod__SWIG_5()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return p.AddedMethod__SWIG_4(a[0].(int))
	}
check_2:
	if argc == 1 {
		return p.AddedMethod__SWIG_2(a[0].(string))
	}
	if argc == 2 {
		if _, ok := a[0].(int); !ok {
			goto check_4
		}
		if _, ok := a[1].(float64); !ok {
			goto check_4
		}
		return p.AddedMethod__SWIG_3(a[0].(int), a[1].(float64))
	}
check_4:
	if argc == 2 {
		return p.AddedMethod__SWIG_1(a[0].(string), a[1].(int))
	}
	if argc == 3 {
		return p.AddedMethod__SWIG_0(a[0].(string), a[1].(int), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_OverAfter unsafe.Pointer

func _swig_wrap_delete_OverAfter(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_OverAfter, _swig_p)
	return
}

func DeleteOverAfter(arg1 OverAfter) {
	_swig_wrap_delete_OverAfter(arg1.Swigcptr())
}

type OverAfter interface {
	Swigcptr() uintptr
	SwigIsOverAfter()
	SetD(arg2 float64)
	GetD() (_swig_ret float64)
	SetI(arg2 int)
	GetI() (_swig_ret int)
	AddedMethod(a ...interface{}) float64
}

type SwigcptrOverride uintptr

func (p SwigcptrOverride) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOverride) SwigIsOverride() {
}

var _wrap_Override_over__SWIG_0 unsafe.Pointer

func _swig_wrap_Override_over__SWIG_0(base SwigcptrOverride) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Override_over__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrOverride) Over__SWIG_0() (_swig_ret int) {
	return _swig_wrap_Override_over__SWIG_0(arg1)
}

var _wrap_Override_ride__SWIG_0 unsafe.Pointer

func _swig_wrap_Override_ride__SWIG_0(base SwigcptrOverride, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Override_ride__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrOverride) Ride__SWIG_0(arg2 int) (_swig_ret int) {
	return _swig_wrap_Override_ride__SWIG_0(arg1, arg2)
}

var _wrap_Override_ride__SWIG_1 unsafe.Pointer

func _swig_wrap_Override_ride__SWIG_1(base SwigcptrOverride) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Override_ride__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrOverride) Ride__SWIG_1() (_swig_ret int) {
	return _swig_wrap_Override_ride__SWIG_1(arg1)
}

func (p SwigcptrOverride) Ride(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Ride__SWIG_1()
	}
	if argc == 1 {
		return p.Ride__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Override_overload__SWIG_0 unsafe.Pointer

func _swig_wrap_Override_overload__SWIG_0(base SwigcptrOverride) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Override_overload__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrOverride) Overload__SWIG_0() (_swig_ret int) {
	return _swig_wrap_Override_overload__SWIG_0(arg1)
}

var _wrap_Override_over__SWIG_1 unsafe.Pointer

func _swig_wrap_Override_over__SWIG_1(base SwigcptrOverride, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Override_over__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrOverride) Over__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_Override_over__SWIG_1(arg1, arg2)
}

func (p SwigcptrOverride) Over(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Over__SWIG_0()
	}
	if argc == 1 {
		return p.Over__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Override_overload__SWIG_1 unsafe.Pointer

func _swig_wrap_Override_overload__SWIG_1(base SwigcptrOverride, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Override_overload__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrOverride) Overload__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_Override_overload__SWIG_1(arg1, arg2)
}

func (p SwigcptrOverride) Overload(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Overload__SWIG_0()
	}
	if argc == 1 {
		return p.Overload__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Override unsafe.Pointer

func _swig_wrap_new_Override() (base SwigcptrOverride) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Override, _swig_p)
	return
}

func NewOverride() (_swig_ret Override) {
	return _swig_wrap_new_Override()
}

var _wrap_delete_Override unsafe.Pointer

func _swig_wrap_delete_Override(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Override, _swig_p)
	return
}

func DeleteOverride(arg1 Override) {
	_swig_wrap_delete_Override(arg1.Swigcptr())
}

type Override interface {
	Swigcptr() uintptr
	SwigIsOverride()
	Ride(a ...interface{}) int
	Over(a ...interface{}) int
	Overload(a ...interface{}) int
}

type SwigcptrBase uintptr

func (p SwigcptrBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBase) SwigIsBase() {
}

var _wrap_delete_Base unsafe.Pointer

func _swig_wrap_delete_Base(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Base, _swig_p)
	return
}

func DeleteBase(arg1 Base) {
	_swig_wrap_delete_Base(arg1.Swigcptr())
}

var _wrap_Base_realvirtual__SWIG_0 unsafe.Pointer

func _swig_wrap_Base_realvirtual__SWIG_0(base SwigcptrBase, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_realvirtual__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrBase) Realvirtual__SWIG_0(arg2 int) (_swig_ret *int) {
	return _swig_wrap_Base_realvirtual__SWIG_0(arg1, arg2)
}

var _wrap_Base_realvirtual__SWIG_1 unsafe.Pointer

func _swig_wrap_Base_realvirtual__SWIG_1(base SwigcptrBase) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_realvirtual__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrBase) Realvirtual__SWIG_1() (_swig_ret *int) {
	return _swig_wrap_Base_realvirtual__SWIG_1(arg1)
}

func (p SwigcptrBase) Realvirtual(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return p.Realvirtual__SWIG_1()
	}
	if argc == 1 {
		return p.Realvirtual__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Base_virtualmethod__SWIG_0 unsafe.Pointer

func _swig_wrap_Base_virtualmethod__SWIG_0(base SwigcptrBase, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_virtualmethod__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrBase) Virtualmethod__SWIG_0(arg2 int) (_swig_ret *int) {
	return _swig_wrap_Base_virtualmethod__SWIG_0(arg1, arg2)
}

var _wrap_Base_virtualmethod__SWIG_1 unsafe.Pointer

func _swig_wrap_Base_virtualmethod__SWIG_1(base SwigcptrBase) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_virtualmethod__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrBase) Virtualmethod__SWIG_1() (_swig_ret *int) {
	return _swig_wrap_Base_virtualmethod__SWIG_1(arg1)
}

func (p SwigcptrBase) Virtualmethod(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return p.Virtualmethod__SWIG_1()
	}
	if argc == 1 {
		return p.Virtualmethod__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Base_nonvirtual__SWIG_0 unsafe.Pointer

func _swig_wrap_Base_nonvirtual__SWIG_0(base SwigcptrBase, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_nonvirtual__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrBase) Nonvirtual__SWIG_0(arg2 int) (_swig_ret *int) {
	return _swig_wrap_Base_nonvirtual__SWIG_0(arg1, arg2)
}

var _wrap_Base_nonvirtual__SWIG_1 unsafe.Pointer

func _swig_wrap_Base_nonvirtual__SWIG_1(base SwigcptrBase) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_nonvirtual__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrBase) Nonvirtual__SWIG_1() (_swig_ret *int) {
	return _swig_wrap_Base_nonvirtual__SWIG_1(arg1)
}

func (p SwigcptrBase) Nonvirtual(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return p.Nonvirtual__SWIG_1()
	}
	if argc == 1 {
		return p.Nonvirtual__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Base_static_method__SWIG_0 unsafe.Pointer

func BaseStatic_method__SWIG_0(arg1 int) (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Base_static_method__SWIG_0, _swig_p)
	return
}
var _wrap_Base_static_method__SWIG_1 unsafe.Pointer

func BaseStatic_method__SWIG_1() (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Base_static_method__SWIG_1, _swig_p)
	return
}
func BaseStatic_method(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return BaseStatic_method__SWIG_1()
	}
	if argc == 1 {
		return BaseStatic_method__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Base unsafe.Pointer

func _swig_wrap_new_Base() (base SwigcptrBase) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Base, _swig_p)
	return
}

func NewBase() (_swig_ret Base) {
	return _swig_wrap_new_Base()
}

type Base interface {
	Swigcptr() uintptr
	SwigIsBase()
	Realvirtual(a ...interface{}) *int
	Virtualmethod(a ...interface{}) *int
	Nonvirtual(a ...interface{}) *int
}

type SwigcptrDerived uintptr

func (p SwigcptrDerived) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDerived) SwigIsDerived() {
}

var _wrap_Derived_virtualmethod__SWIG_0 unsafe.Pointer

func _swig_wrap_Derived_virtualmethod__SWIG_0(base SwigcptrDerived, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_virtualmethod__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Virtualmethod__SWIG_0(arg2 int) (_swig_ret *int) {
	return _swig_wrap_Derived_virtualmethod__SWIG_0(arg1, arg2)
}

var _wrap_Derived_virtualmethod__SWIG_1 unsafe.Pointer

func _swig_wrap_Derived_virtualmethod__SWIG_1(base SwigcptrDerived) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_virtualmethod__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Virtualmethod__SWIG_1() (_swig_ret *int) {
	return _swig_wrap_Derived_virtualmethod__SWIG_1(arg1)
}

func (p SwigcptrDerived) Virtualmethod(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return p.Virtualmethod__SWIG_1()
	}
	if argc == 1 {
		return p.Virtualmethod__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Derived_nonvirtual__SWIG_0 unsafe.Pointer

func _swig_wrap_Derived_nonvirtual__SWIG_0(base SwigcptrDerived, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_nonvirtual__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Nonvirtual__SWIG_0(arg2 int) (_swig_ret *int) {
	return _swig_wrap_Derived_nonvirtual__SWIG_0(arg1, arg2)
}

var _wrap_Derived_nonvirtual__SWIG_1 unsafe.Pointer

func _swig_wrap_Derived_nonvirtual__SWIG_1(base SwigcptrDerived) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_nonvirtual__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Nonvirtual__SWIG_1() (_swig_ret *int) {
	return _swig_wrap_Derived_nonvirtual__SWIG_1(arg1)
}

func (p SwigcptrDerived) Nonvirtual(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return p.Nonvirtual__SWIG_1()
	}
	if argc == 1 {
		return p.Nonvirtual__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Derived_static_method__SWIG_0 unsafe.Pointer

func DerivedStatic_method__SWIG_0(arg1 int) (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Derived_static_method__SWIG_0, _swig_p)
	return
}
var _wrap_Derived_static_method__SWIG_1 unsafe.Pointer

func DerivedStatic_method__SWIG_1() (_swig_ret *int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_Derived_static_method__SWIG_1, _swig_p)
	return
}
func DerivedStatic_method(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return DerivedStatic_method__SWIG_1()
	}
	if argc == 1 {
		return DerivedStatic_method__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_Derived_realvirtual__SWIG_0 unsafe.Pointer

func _swig_wrap_Derived_realvirtual__SWIG_0(base SwigcptrDerived, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_realvirtual__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Realvirtual__SWIG_0(arg2 int) (_swig_ret *int) {
	return _swig_wrap_Derived_realvirtual__SWIG_0(arg1, arg2)
}

var _wrap_Derived_realvirtual__SWIG_1 unsafe.Pointer

func _swig_wrap_Derived_realvirtual__SWIG_1(base SwigcptrDerived) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_realvirtual__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Realvirtual__SWIG_1() (_swig_ret *int) {
	return _swig_wrap_Derived_realvirtual__SWIG_1(arg1)
}

func (p SwigcptrDerived) Realvirtual(a ...interface{}) *int {
	argc := len(a)
	if argc == 0 {
		return p.Realvirtual__SWIG_1()
	}
	if argc == 1 {
		return p.Realvirtual__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_Derived unsafe.Pointer

func _swig_wrap_new_Derived() (base SwigcptrDerived) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Derived, _swig_p)
	return
}

func NewDerived() (_swig_ret Derived) {
	return _swig_wrap_new_Derived()
}

var _wrap_delete_Derived unsafe.Pointer

func _swig_wrap_delete_Derived(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Derived, _swig_p)
	return
}

func DeleteDerived(arg1 Derived) {
	_swig_wrap_delete_Derived(arg1.Swigcptr())
}

func (p SwigcptrDerived) SwigIsBase() {
}

func (p SwigcptrDerived) SwigGetBase() Base {
	return SwigcptrBase(p.Swigcptr())
}

type Derived interface {
	Swigcptr() uintptr
	SwigIsDerived()
	Virtualmethod(a ...interface{}) *int
	Nonvirtual(a ...interface{}) *int
	Realvirtual(a ...interface{}) *int
	SwigIsBase()
	SwigGetBase() Base
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

