/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../preproc_include.i

package preproc_include

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_multiply10 unsafe.Pointer

func Multiply10(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply10, _swig_p)
	return
}
var _wrap_multiply20 unsafe.Pointer

func Multiply20(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply20, _swig_p)
	return
}
const PREPROC_INCLUDE_C string = "preproc_include_c.h"
var _wrap_multiply30 unsafe.Pointer

func Multiply30(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply30, _swig_p)
	return
}
var _wrap_multiply40 unsafe.Pointer

func Multiply40(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply40, _swig_p)
	return
}
const INCLUDE_E string = "preproc_include_e withspace.h"
var _wrap_multiply50 unsafe.Pointer

func Multiply50(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply50, _swig_p)
	return
}
const INCLUDE_F string = "preproc_include_f withspace.h"
var _wrap_multiply60 unsafe.Pointer

func Multiply60(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply60, _swig_p)
	return
}
var _wrap_multiply70 unsafe.Pointer

func Multiply70(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_multiply70, _swig_p)
	return
}
const Const1 int = 1
const Const2 int = 2
const Const3 int = 3

