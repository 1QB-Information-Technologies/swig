/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_specialization.i

package template_specialization

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrUnaryFunction_double uintptr

func (p SwigcptrUnaryFunction_double) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUnaryFunction_double) SwigIsUnaryFunction_double() {
}

var _wrap_UnaryFunction_double_negate unsafe.Pointer

func _swig_wrap_UnaryFunction_double_negate(base SwigcptrUnaryFunction_double) (_ SwigcptrUnaryFunction_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UnaryFunction_double_negate, _swig_p)
	return
}

func (arg1 SwigcptrUnaryFunction_double) Negate() (_swig_ret UnaryFunction_double) {
	return _swig_wrap_UnaryFunction_double_negate(arg1)
}

var _wrap_new_UnaryFunction_double unsafe.Pointer

func _swig_wrap_new_UnaryFunction_double() (base SwigcptrUnaryFunction_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UnaryFunction_double, _swig_p)
	return
}

func NewUnaryFunction_double() (_swig_ret UnaryFunction_double) {
	return _swig_wrap_new_UnaryFunction_double()
}

var _wrap_delete_UnaryFunction_double unsafe.Pointer

func _swig_wrap_delete_UnaryFunction_double(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_UnaryFunction_double, _swig_p)
	return
}

func DeleteUnaryFunction_double(arg1 UnaryFunction_double) {
	_swig_wrap_delete_UnaryFunction_double(arg1.Swigcptr())
}

type UnaryFunction_double interface {
	Swigcptr() uintptr
	SwigIsUnaryFunction_double()
	Negate() (_swig_ret UnaryFunction_double)
}

type SwigcptrUnaryFunction_bool uintptr

func (p SwigcptrUnaryFunction_bool) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrUnaryFunction_bool) SwigIsUnaryFunction_bool() {
}

var _wrap_UnaryFunction_bool_not1 unsafe.Pointer

func _swig_wrap_UnaryFunction_bool_not1(base SwigcptrUnaryFunction_bool) (_ SwigcptrUnaryFunction_bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UnaryFunction_bool_not1, _swig_p)
	return
}

func (arg1 SwigcptrUnaryFunction_bool) Not1() (_swig_ret UnaryFunction_bool) {
	return _swig_wrap_UnaryFunction_bool_not1(arg1)
}

var _wrap_UnaryFunction_bool_foo unsafe.Pointer

func _swig_wrap_UnaryFunction_bool_foo(base SwigcptrUnaryFunction_bool, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_UnaryFunction_bool_foo, _swig_p)
	return
}

func (arg1 SwigcptrUnaryFunction_bool) Foo(arg2 UnaryFunction_bool) {
	_swig_wrap_UnaryFunction_bool_foo(arg1, arg2.Swigcptr())
}

var _wrap_new_UnaryFunction_bool unsafe.Pointer

func _swig_wrap_new_UnaryFunction_bool() (base SwigcptrUnaryFunction_bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_UnaryFunction_bool, _swig_p)
	return
}

func NewUnaryFunction_bool() (_swig_ret UnaryFunction_bool) {
	return _swig_wrap_new_UnaryFunction_bool()
}

var _wrap_delete_UnaryFunction_bool unsafe.Pointer

func _swig_wrap_delete_UnaryFunction_bool(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_UnaryFunction_bool, _swig_p)
	return
}

func DeleteUnaryFunction_bool(arg1 UnaryFunction_bool) {
	_swig_wrap_delete_UnaryFunction_bool(arg1.Swigcptr())
}

type UnaryFunction_bool interface {
	Swigcptr() uintptr
	SwigIsUnaryFunction_bool()
	Not1() (_swig_ret UnaryFunction_bool)
	Foo(arg2 UnaryFunction_bool)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

