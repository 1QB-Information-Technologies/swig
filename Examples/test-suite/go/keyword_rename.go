/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../keyword_rename.i

package keyword_rename

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_in unsafe.Pointer

func In(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_in, _swig_p)
	return
}
var _wrap_except unsafe.Pointer

func Except(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_except, _swig_p)
	return
}
var _wrap_pass unsafe.Pointer

func Pass(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_pass, _swig_p)
	return
}
var _wrap_tie unsafe.Pointer

func Tie(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_tie, _swig_p)
	return
}
var _wrap_use unsafe.Pointer

func Use(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_use, _swig_p)
	return
}
var _wrap_implements unsafe.Pointer

func Implements(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_implements, _swig_p)
	return
}
var _wrap_synchronized unsafe.Pointer

func Synchronized(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_synchronized, _swig_p)
	return
}
var _wrap_string unsafe.Pointer

func String(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_string, _swig_p)
	return
}
type SwigcptrSealed uintptr

func (p SwigcptrSealed) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSealed) SwigIsSealed() {
}

var _wrap_sealed_i_set unsafe.Pointer

func _swig_wrap_sealed_i_set(base SwigcptrSealed, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_sealed_i_set, _swig_p)
	return
}

func (arg1 SwigcptrSealed) SetI(arg2 int) {
	_swig_wrap_sealed_i_set(arg1, arg2)
}

var _wrap_sealed_i_get unsafe.Pointer

func _swig_wrap_sealed_i_get(base SwigcptrSealed) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_sealed_i_get, _swig_p)
	return
}

func (arg1 SwigcptrSealed) GetI() (_swig_ret int) {
	return _swig_wrap_sealed_i_get(arg1)
}

var _wrap_new_sealed unsafe.Pointer

func _swig_wrap_new_sealed() (base SwigcptrSealed) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_sealed, _swig_p)
	return
}

func NewSealed() (_swig_ret Sealed) {
	return _swig_wrap_new_sealed()
}

var _wrap_delete_sealed unsafe.Pointer

func _swig_wrap_delete_sealed(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_sealed, _swig_p)
	return
}

func DeleteSealed(arg1 Sealed) {
	_swig_wrap_delete_sealed(arg1.Swigcptr())
}

type Sealed interface {
	Swigcptr() uintptr
	SwigIsSealed()
	SetI(arg2 int)
	GetI() (_swig_ret int)
}

var _wrap_Xgo unsafe.Pointer

func Xgo(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Xgo, _swig_p)
	return
}
var _wrap_Xchan unsafe.Pointer

func Xchan(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Xchan, _swig_p)
	return
}
var _wrap_end unsafe.Pointer

func End(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_end, _swig_p)
	return
}
var _wrap_nil unsafe.Pointer

func Nil(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_nil, _swig_p)
	return
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

