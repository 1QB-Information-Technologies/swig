/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_typedef_ns.i

package template_typedef_ns

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrAlphaInt uintptr

func (p SwigcptrAlphaInt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAlphaInt) SwigIsAlphaInt() {
}

var _wrap_AlphaInt_x_set unsafe.Pointer

func _swig_wrap_AlphaInt_x_set(base SwigcptrAlphaInt, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_AlphaInt_x_set, _swig_p)
	return
}

func (arg1 SwigcptrAlphaInt) SetX(arg2 int) {
	_swig_wrap_AlphaInt_x_set(arg1, arg2)
}

var _wrap_AlphaInt_x_get unsafe.Pointer

func _swig_wrap_AlphaInt_x_get(base SwigcptrAlphaInt) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_AlphaInt_x_get, _swig_p)
	return
}

func (arg1 SwigcptrAlphaInt) GetX() (_swig_ret int) {
	return _swig_wrap_AlphaInt_x_get(arg1)
}

var _wrap_new_AlphaInt unsafe.Pointer

func _swig_wrap_new_AlphaInt() (base SwigcptrAlphaInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_AlphaInt, _swig_p)
	return
}

func NewAlphaInt() (_swig_ret AlphaInt) {
	return _swig_wrap_new_AlphaInt()
}

var _wrap_delete_AlphaInt unsafe.Pointer

func _swig_wrap_delete_AlphaInt(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_AlphaInt, _swig_p)
	return
}

func DeleteAlphaInt(arg1 AlphaInt) {
	_swig_wrap_delete_AlphaInt(arg1.Swigcptr())
}

type AlphaInt interface {
	Swigcptr() uintptr
	SwigIsAlphaInt()
	SetX(arg2 int)
	GetX() (_swig_ret int)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

