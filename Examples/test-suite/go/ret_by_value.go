/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../ret_by_value.i

package ret_by_value

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrTest uintptr

func (p SwigcptrTest) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTest) SwigIsTest() {
}

var _wrap_test_myInt_set unsafe.Pointer

func _swig_wrap_test_myInt_set(base SwigcptrTest, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_myInt_set, _swig_p)
	return
}

func (arg1 SwigcptrTest) SetMyInt(arg2 int) {
	_swig_wrap_test_myInt_set(arg1, arg2)
}

var _wrap_test_myInt_get unsafe.Pointer

func _swig_wrap_test_myInt_get(base SwigcptrTest) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_myInt_get, _swig_p)
	return
}

func (arg1 SwigcptrTest) GetMyInt() (_swig_ret int) {
	return _swig_wrap_test_myInt_get(arg1)
}

var _wrap_test_myShort_set unsafe.Pointer

func _swig_wrap_test_myShort_set(base SwigcptrTest, _ int16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_myShort_set, _swig_p)
	return
}

func (arg1 SwigcptrTest) SetMyShort(arg2 int16) {
	_swig_wrap_test_myShort_set(arg1, arg2)
}

var _wrap_test_myShort_get unsafe.Pointer

func _swig_wrap_test_myShort_get(base SwigcptrTest) (_ int16) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_test_myShort_get, _swig_p)
	return
}

func (arg1 SwigcptrTest) GetMyShort() (_swig_ret int16) {
	return _swig_wrap_test_myShort_get(arg1)
}

var _wrap_new_test unsafe.Pointer

func _swig_wrap_new_test() (base SwigcptrTest) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_test, _swig_p)
	return
}

func NewTest() (_swig_ret Test) {
	return _swig_wrap_new_test()
}

var _wrap_delete_test unsafe.Pointer

func _swig_wrap_delete_test(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_test, _swig_p)
	return
}

func DeleteTest(arg1 Test) {
	_swig_wrap_delete_test(arg1.Swigcptr())
}

type Test interface {
	Swigcptr() uintptr
	SwigIsTest()
	SetMyInt(arg2 int)
	GetMyInt() (_swig_ret int)
	SetMyShort(arg2 int16)
	GetMyShort() (_swig_ret int16)
}

var _wrap_get_test unsafe.Pointer

func _swig_wrap_get_test() (base SwigcptrTest) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_test, _swig_p)
	return
}

func Get_test() (_swig_ret Test) {
	return _swig_wrap_get_test()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

