/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../mod_b.i

package mod_b

import "unsafe"
import _ "runtime/cgo"
import "mod_a"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrC uintptr

func (p SwigcptrC) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrC) SwigIsC() {
}

var _wrap_new_C unsafe.Pointer

func _swig_wrap_new_C() (base SwigcptrC) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_C, _swig_p)
	return
}

func NewC() (_swig_ret C) {
	return _swig_wrap_new_C()
}

var _wrap_delete_C unsafe.Pointer

func _swig_wrap_delete_C(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_C, _swig_p)
	return
}

func DeleteC(arg1 C) {
	_swig_wrap_delete_C(arg1.Swigcptr())
}

var _wrap_C_GetC unsafe.Pointer

func _swig_wrap_C_GetC(base SwigcptrC) (_ SwigcptrC) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_C_GetC, _swig_p)
	return
}

func (_swig_base SwigcptrC) GetC() (_swig_ret C) {
	return _swig_wrap_C_GetC(_swig_base)
}

var _wrap_C_DoSomething unsafe.Pointer

func _swig_wrap_C_DoSomething(base SwigcptrC, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_C_DoSomething, _swig_p)
	return
}

func (_swig_base SwigcptrC) DoSomething(arg1 mod_a.A) {
	_swig_wrap_C_DoSomething(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrC) SwigIsB() {
}

func (p SwigcptrC) SwigGetB() mod_a.B {
	return mod_a.SwigcptrB(p.Swigcptr())
}

func (p SwigcptrC) SwigIsA() {
}

func (p SwigcptrC) SwigGetA() mod_a.A {
	return mod_a.SwigcptrA(p.Swigcptr())
}

type C interface {
	Swigcptr() uintptr
	SwigIsC()
	GetC() (_swig_ret C)
	DoSomething(arg1 mod_a.A)
	SwigIsB()
	SwigGetB() mod_a.B
	SwigIsA()
	SwigGetA() mod_a.A
}

type SwigcptrD uintptr

func (p SwigcptrD) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrD) SwigIsD() {
}

var _wrap_new_D unsafe.Pointer

func _swig_wrap_new_D() (base SwigcptrD) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_D, _swig_p)
	return
}

func NewD() (_swig_ret D) {
	return _swig_wrap_new_D()
}

var _wrap_delete_D unsafe.Pointer

func _swig_wrap_delete_D(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_D, _swig_p)
	return
}

func DeleteD(arg1 D) {
	_swig_wrap_delete_D(arg1.Swigcptr())
}

var _wrap_D_GetC unsafe.Pointer

func _swig_wrap_D_GetC(base SwigcptrD) (_ SwigcptrC) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_D_GetC, _swig_p)
	return
}

func (_swig_base SwigcptrD) GetC() (_swig_ret C) {
	return _swig_wrap_D_GetC(_swig_base)
}

var _wrap_D_DoSomething unsafe.Pointer

func _swig_wrap_D_DoSomething(base SwigcptrD, _ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_D_DoSomething, _swig_p)
	return
}

func (_swig_base SwigcptrD) DoSomething(arg1 mod_a.A) {
	_swig_wrap_D_DoSomething(_swig_base, arg1.Swigcptr())
}

func (p SwigcptrD) SwigIsC() {
}

func (p SwigcptrD) SwigGetC() C {
	return SwigcptrC(p.Swigcptr())
}

func (p SwigcptrD) SwigIsB() {
}

func (p SwigcptrD) SwigGetB() mod_a.B {
	return mod_a.SwigcptrB(p.Swigcptr())
}

func (p SwigcptrD) SwigIsA() {
}

func (p SwigcptrD) SwigGetA() mod_a.A {
	return mod_a.SwigcptrA(p.Swigcptr())
}

type D interface {
	Swigcptr() uintptr
	SwigIsD()
	GetC() (_swig_ret C)
	DoSomething(arg1 mod_a.A)
	SwigIsC()
	SwigGetC() C
	SwigIsB()
	SwigGetB() mod_a.B
	SwigIsA()
	SwigGetA() mod_a.A
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

