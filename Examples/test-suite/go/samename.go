/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../samename.i

package samename

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrSamename uintptr

func (p SwigcptrSamename) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSamename) SwigIsSamename() {
}

var _wrap_samename_do_something unsafe.Pointer

func _swig_wrap_samename_do_something(base SwigcptrSamename) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_samename_do_something, _swig_p)
	return
}

func (arg1 SwigcptrSamename) Do_something() {
	_swig_wrap_samename_do_something(arg1)
}

var _wrap_new_samename unsafe.Pointer

func _swig_wrap_new_samename() (base SwigcptrSamename) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_samename, _swig_p)
	return
}

func NewSamename() (_swig_ret Samename) {
	return _swig_wrap_new_samename()
}

var _wrap_delete_samename unsafe.Pointer

func _swig_wrap_delete_samename(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_samename, _swig_p)
	return
}

func DeleteSamename(arg1 Samename) {
	_swig_wrap_delete_samename(arg1.Swigcptr())
}

type Samename interface {
	Swigcptr() uintptr
	SwigIsSamename()
	Do_something()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

