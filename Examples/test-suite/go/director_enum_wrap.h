/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../director_enum.i

#ifndef SWIG_director_enum_WRAP_H_
#define SWIG_director_enum_WRAP_H_

class SwigDirector_Foo : public EnumDirector::Foo
{
 public:
  SwigDirector_Foo(void *swig_p);
  virtual ~SwigDirector_Foo();
  EnumDirector::Hello _swig_upcall_say_hi__SWIG_0(EnumDirector::Hello h) {
    return EnumDirector::Foo::say_hi(h);
  }
  virtual EnumDirector::Hello say_hi(EnumDirector::Hello h);
  EnumDirector::Hello _swig_upcall_say_hello(EnumDirector::Hello arg0) {
    return EnumDirector::Foo::say_hello(arg0);
  }
  virtual EnumDirector::Hello say_hello(EnumDirector::Hello arg0);
  EnumDirector::Hello _swig_upcall_say_hi__SWIG_1(EnumDirector::A *a) {
    return EnumDirector::Foo::say_hi(a);
  }
  virtual EnumDirector::Hello say_hi(EnumDirector::A *a);
  EnumDirector::Foo::Bye _swig_upcall_say_bye(EnumDirector::Foo::Bye b) {
    return EnumDirector::Foo::say_bye(b);
  }
  virtual EnumDirector::Foo::Bye say_bye(EnumDirector::Foo::Bye b);
  EnumDirector::Hello const &_swig_upcall_say_hi_ref(EnumDirector::Hello const &h) {
    return EnumDirector::Foo::say_hi_ref(h);
  }
  virtual EnumDirector::Hello const &say_hi_ref(EnumDirector::Hello const &h);
 private:
  void *go_val;
};

class SwigDirector_A : public EnumDirector::A
{
 public:
  SwigDirector_A(void *swig_p, double const a, double const b, EnumDirector::FType const c);
  virtual ~SwigDirector_A();
  int _swig_upcall_f__SWIG_0(int i) {
    return EnumDirector::A::f(i);
  }
  virtual int f(int i);
  int _swig_upcall_f__SWIG_1() {
    return EnumDirector::A::f();
  }
  virtual int f();
 private:
  void *go_val;
};

class SwigDirector_B : public EnumDirector::B
{
 public:
  SwigDirector_B(void *swig_p, double const a, double const b, EnumDirector::FType const c);
  virtual ~SwigDirector_B();
  int _swig_upcall_f__SWIG_0(int i) {
    return EnumDirector::A::f(i);
  }
  virtual int f(int i);
  int _swig_upcall_f__SWIG_1() {
    return EnumDirector::A::f();
  }
  virtual int f();
 private:
  void *go_val;
};

class SwigDirector_A2 : public EnumDirector::A2
{
 public:
  SwigDirector_A2(void *swig_p, EnumDirector::FType const c);
  SwigDirector_A2(void *swig_p);
  virtual ~SwigDirector_A2();
  int _swig_upcall_f__SWIG_0(int i) {
    return EnumDirector::A2::f(i);
  }
  virtual int f(int i);
  int _swig_upcall_f__SWIG_1() {
    return EnumDirector::A2::f();
  }
  virtual int f();
 private:
  void *go_val;
};

class SwigDirector_B2 : public EnumDirector::B2
{
 public:
  SwigDirector_B2(void *swig_p, EnumDirector::FType const c);
  virtual ~SwigDirector_B2();
  int _swig_upcall_f__SWIG_0(int i) {
    return EnumDirector::A2::f(i);
  }
  virtual int f(int i);
  int _swig_upcall_f__SWIG_1() {
    return EnumDirector::A2::f();
  }
  virtual int f();
 private:
  void *go_val;
};

#endif
