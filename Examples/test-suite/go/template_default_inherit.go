/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_default_inherit.i

package template_default_inherit

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrA_int uintptr

func (p SwigcptrA_int) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA_int) SwigIsA_int() {
}

var _wrap_A_int_nindex_A_int unsafe.Pointer

func _swig_getA_int_A_int_nindex_A_int() (_swig_ret uint) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_A_int_nindex_A_int, _swig_p)
	return
}
var A_intNindex uint = _swig_getA_int_A_int_nindex_A_int()
var _wrap_new_A_int unsafe.Pointer

func _swig_wrap_new_A_int() (base SwigcptrA_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A_int, _swig_p)
	return
}

func NewA_int() (_swig_ret A_int) {
	return _swig_wrap_new_A_int()
}

var _wrap_delete_A_int unsafe.Pointer

func _swig_wrap_delete_A_int(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A_int, _swig_p)
	return
}

func DeleteA_int(arg1 A_int) {
	_swig_wrap_delete_A_int(arg1.Swigcptr())
}

type A_int interface {
	Swigcptr() uintptr
	SwigIsA_int()
}

type SwigcptrB_int uintptr

func (p SwigcptrB_int) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrB_int) SwigIsB_int() {
}

var _wrap_B_int_say_hi__SWIG_0 unsafe.Pointer

func _swig_wrap_B_int_say_hi__SWIG_0(base SwigcptrB_int, _ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_int_say_hi__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrB_int) Say_hi__SWIG_0(arg2 uint) {
	_swig_wrap_B_int_say_hi__SWIG_0(arg1, arg2)
}

var _wrap_B_int_say_hi__SWIG_1 unsafe.Pointer

func _swig_wrap_B_int_say_hi__SWIG_1(base SwigcptrB_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_B_int_say_hi__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrB_int) Say_hi__SWIG_1() {
	_swig_wrap_B_int_say_hi__SWIG_1(arg1)
}

func (p SwigcptrB_int) Say_hi(a ...interface{}) {
	argc := len(a)
	if argc == 0 {
		p.Say_hi__SWIG_1()
		return
	}
	if argc == 1 {
		p.Say_hi__SWIG_0(a[0].(uint))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_new_B_int unsafe.Pointer

func _swig_wrap_new_B_int() (base SwigcptrB_int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_B_int, _swig_p)
	return
}

func NewB_int() (_swig_ret B_int) {
	return _swig_wrap_new_B_int()
}

var _wrap_delete_B_int unsafe.Pointer

func _swig_wrap_delete_B_int(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_B_int, _swig_p)
	return
}

func DeleteB_int(arg1 B_int) {
	_swig_wrap_delete_B_int(arg1.Swigcptr())
}

func (p SwigcptrB_int) SwigIsA_int() {
}

func (p SwigcptrB_int) SwigGetA_int() A_int {
	return SwigcptrA_int(p.Swigcptr())
}

type B_int interface {
	Swigcptr() uintptr
	SwigIsB_int()
	Say_hi(a ...interface{})
	SwigIsA_int()
	SwigGetA_int() A_int
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

