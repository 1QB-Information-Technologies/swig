/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../nested_comment.i

package nested_comment

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrS2 uintptr

func (p SwigcptrS2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrS2) SwigIsS2() {
}

var _wrap_new_s2 unsafe.Pointer

func _swig_wrap_new_s2() (base SwigcptrS2) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_s2, _swig_p)
	return
}

func NewS2() (_swig_ret S2) {
	return _swig_wrap_new_s2()
}

var _wrap_delete_s2 unsafe.Pointer

func _swig_wrap_delete_s2(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_s2, _swig_p)
	return
}

func DeleteS2(arg1 S2) {
	_swig_wrap_delete_s2(arg1.Swigcptr())
}

type S2 interface {
	Swigcptr() uintptr
	SwigIsS2()
}

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_a unsafe.Pointer

func _swig_wrap_new_a() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_a, _swig_p)
	return
}

func NewA() (_swig_ret A) {
	return _swig_wrap_new_a()
}

var _wrap_delete_a unsafe.Pointer

func _swig_wrap_delete_a(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_a, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_a(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

