/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../template_extend_overload_2.i

package template_extend_overload_2

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_A__SWIG_0 unsafe.Pointer

func _swig_wrap_new_A__SWIG_0() (base SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_0, _swig_p)
	return
}

func NewA__SWIG_0() (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_0()
}

var _wrap_new_A__SWIG_1 unsafe.Pointer

func _swig_wrap_new_A__SWIG_1(base int) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_1, _swig_p)
	return
}

func NewA__SWIG_1(arg1 int) (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_1(arg1)
}

var _wrap_A_hi__SWIG_0 unsafe.Pointer

func _swig_wrap_A_hi__SWIG_0(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_hi__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrA) Hi__SWIG_0() (_swig_ret int) {
	return _swig_wrap_A_hi__SWIG_0(arg1)
}

var _wrap_A_hi__SWIG_1 unsafe.Pointer

func _swig_wrap_A_hi__SWIG_1(base SwigcptrA, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_hi__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrA) Hi__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_A_hi__SWIG_1(arg1, arg2)
}

func (p SwigcptrA) Hi(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Hi__SWIG_0()
	}
	if argc == 1 {
		return p.Hi__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_A__SWIG_2 unsafe.Pointer

func _swig_wrap_new_A__SWIG_2(base float64) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A__SWIG_2, _swig_p)
	return
}

func NewA__SWIG_2(arg1 float64) (_swig_ret A) {
	return _swig_wrap_new_A__SWIG_2(arg1)
}

func NewA(a ...interface{}) A {
	argc := len(a)
	if argc == 0 {
		return NewA__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewA__SWIG_1(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewA__SWIG_2(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	Hi(a ...interface{}) int
}

type SwigcptrAT_double uintptr

func (p SwigcptrAT_double) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAT_double) SwigIsAT_double() {
}

var _wrap_new_AT_double__SWIG_0 unsafe.Pointer

func _swig_wrap_new_AT_double__SWIG_0() (base SwigcptrAT_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_AT_double__SWIG_0, _swig_p)
	return
}

func NewAT_double__SWIG_0() (_swig_ret AT_double) {
	return _swig_wrap_new_AT_double__SWIG_0()
}

var _wrap_new_AT_double__SWIG_1 unsafe.Pointer

func _swig_wrap_new_AT_double__SWIG_1(base int) (_ SwigcptrAT_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_AT_double__SWIG_1, _swig_p)
	return
}

func NewAT_double__SWIG_1(arg1 int) (_swig_ret AT_double) {
	return _swig_wrap_new_AT_double__SWIG_1(arg1)
}

var _wrap_AT_double_hi__SWIG_0 unsafe.Pointer

func _swig_wrap_AT_double_hi__SWIG_0(base SwigcptrAT_double) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_AT_double_hi__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrAT_double) Hi__SWIG_0() (_swig_ret int) {
	return _swig_wrap_AT_double_hi__SWIG_0(arg1)
}

var _wrap_AT_double_hi__SWIG_1 unsafe.Pointer

func _swig_wrap_AT_double_hi__SWIG_1(base SwigcptrAT_double, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_AT_double_hi__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrAT_double) Hi__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_AT_double_hi__SWIG_1(arg1, arg2)
}

func (p SwigcptrAT_double) Hi(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Hi__SWIG_0()
	}
	if argc == 1 {
		return p.Hi__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_AT_double__SWIG_2 unsafe.Pointer

func _swig_wrap_new_AT_double__SWIG_2(base float64) (_ SwigcptrAT_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_AT_double__SWIG_2, _swig_p)
	return
}

func NewAT_double__SWIG_2(arg1 float64) (_swig_ret AT_double) {
	return _swig_wrap_new_AT_double__SWIG_2(arg1)
}

func NewAT_double(a ...interface{}) AT_double {
	argc := len(a)
	if argc == 0 {
		return NewAT_double__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewAT_double__SWIG_1(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewAT_double__SWIG_2(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_AT_double unsafe.Pointer

func _swig_wrap_delete_AT_double(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_AT_double, _swig_p)
	return
}

func DeleteAT_double(arg1 AT_double) {
	_swig_wrap_delete_AT_double(arg1.Swigcptr())
}

type AT_double interface {
	Swigcptr() uintptr
	SwigIsAT_double()
	Hi(a ...interface{}) int
}

type SwigcptrBT_double uintptr

func (p SwigcptrBT_double) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBT_double) SwigIsBT_double() {
}

var _wrap_new_BT_double__SWIG_0 unsafe.Pointer

func _swig_wrap_new_BT_double__SWIG_0() (base SwigcptrBT_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_BT_double__SWIG_0, _swig_p)
	return
}

func NewBT_double__SWIG_0() (_swig_ret BT_double) {
	return _swig_wrap_new_BT_double__SWIG_0()
}

var _wrap_new_BT_double__SWIG_1 unsafe.Pointer

func _swig_wrap_new_BT_double__SWIG_1(base int) (_ SwigcptrBT_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_BT_double__SWIG_1, _swig_p)
	return
}

func NewBT_double__SWIG_1(arg1 int) (_swig_ret BT_double) {
	return _swig_wrap_new_BT_double__SWIG_1(arg1)
}

var _wrap_BT_double_hi__SWIG_0 unsafe.Pointer

func _swig_wrap_BT_double_hi__SWIG_0(base SwigcptrBT_double) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BT_double_hi__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrBT_double) Hi__SWIG_0() (_swig_ret int) {
	return _swig_wrap_BT_double_hi__SWIG_0(arg1)
}

var _wrap_BT_double_hi__SWIG_1 unsafe.Pointer

func _swig_wrap_BT_double_hi__SWIG_1(base SwigcptrBT_double, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_BT_double_hi__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrBT_double) Hi__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_BT_double_hi__SWIG_1(arg1, arg2)
}

func (p SwigcptrBT_double) Hi(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Hi__SWIG_0()
	}
	if argc == 1 {
		return p.Hi__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_new_BT_double__SWIG_2 unsafe.Pointer

func _swig_wrap_new_BT_double__SWIG_2(base float64) (_ SwigcptrBT_double) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_BT_double__SWIG_2, _swig_p)
	return
}

func NewBT_double__SWIG_2(arg1 float64) (_swig_ret BT_double) {
	return _swig_wrap_new_BT_double__SWIG_2(arg1)
}

func NewBT_double(a ...interface{}) BT_double {
	argc := len(a)
	if argc == 0 {
		return NewBT_double__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int); !ok {
			goto check_2
		}
		return NewBT_double__SWIG_1(a[0].(int))
	}
check_2:
	if argc == 1 {
		return NewBT_double__SWIG_2(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_BT_double unsafe.Pointer

func _swig_wrap_delete_BT_double(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_BT_double, _swig_p)
	return
}

func DeleteBT_double(arg1 BT_double) {
	_swig_wrap_delete_BT_double(arg1.Swigcptr())
}

type BT_double interface {
	Swigcptr() uintptr
	SwigIsBT_double()
	Hi(a ...interface{}) int
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

