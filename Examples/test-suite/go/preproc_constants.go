/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../preproc_constants.i

package preproc_constants

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

const CONST_INT1 int = 10
const CONST_INT2 int = 0xFF
const CONST_UINT1 uint = 10
const CONST_UINT2 uint = 10
const CONST_UINT3 uint = 0xFF
const CONST_UINT4 uint = 0xFF
const CONST_LONG1 int64 = 10
const CONST_LONG2 int64 = 10
const CONST_LONG3 int64 = 0xFF
const CONST_LONG4 int64 = 0xFF
const CONST_LLONG1 int64 = 10
const CONST_LLONG2 int64 = 10
const CONST_LLONG3 int64 = 0xFF
const CONST_LLONG4 int64 = 0xFF
const CONST_ULLONG1 uint64 = 10
const CONST_ULLONG2 uint64 = 10
const CONST_ULLONG3 uint64 = 0xFF
const CONST_ULLONG4 uint64 = 0xFF
const CONST_DOUBLE1 float64 = 10e1
const CONST_DOUBLE2 float64 = 10E1
const CONST_DOUBLE3 float64 = 12.3
const CONST_DOUBLE4 float64 = 12.
const CONST_DOUBLE5 float64 = 12.3
const CONST_DOUBLE6 float64 = 12.3
const CONST_BOOL1 bool = true
const CONST_BOOL2 bool = false
const CONST_CHAR byte = 'x'
const CONST_STRING1 string = "const string"
const CONST_STRING2 string = "const string"
const CONST_STRING3 string = "log-revprops"
var _wrap_INT_AND_BOOL unsafe.Pointer

func _swig_getINT_AND_BOOL() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_BOOL, _swig_p)
	return
}
var INT_AND_BOOL int = _swig_getINT_AND_BOOL()
var _wrap_INT_AND_INT unsafe.Pointer

func _swig_getINT_AND_INT() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_INT, _swig_p)
	return
}
var INT_AND_INT int = _swig_getINT_AND_INT()
var _wrap_INT_AND_UINT unsafe.Pointer

func _swig_getINT_AND_UINT() (_swig_ret uint) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_UINT, _swig_p)
	return
}
var INT_AND_UINT uint = _swig_getINT_AND_UINT()
var _wrap_INT_AND_LONG unsafe.Pointer

func _swig_getINT_AND_LONG() (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_LONG, _swig_p)
	return
}
var INT_AND_LONG int64 = _swig_getINT_AND_LONG()
var _wrap_INT_AND_ULONG unsafe.Pointer

func _swig_getINT_AND_ULONG() (_swig_ret uint64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_ULONG, _swig_p)
	return
}
var INT_AND_ULONG uint64 = _swig_getINT_AND_ULONG()
var _wrap_INT_AND_LLONG unsafe.Pointer

func _swig_getINT_AND_LLONG() (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_LLONG, _swig_p)
	return
}
var INT_AND_LLONG int64 = _swig_getINT_AND_LLONG()
var _wrap_INT_AND_ULLONG unsafe.Pointer

func _swig_getINT_AND_ULLONG() (_swig_ret uint64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_INT_AND_ULLONG, _swig_p)
	return
}
var INT_AND_ULLONG uint64 = _swig_getINT_AND_ULLONG()
var _wrap_BOOL_AND_BOOL unsafe.Pointer

func _swig_getBOOL_AND_BOOL() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_BOOL_AND_BOOL, _swig_p)
	return
}
var BOOL_AND_BOOL int = _swig_getBOOL_AND_BOOL()
var _wrap_EXPR_MULTIPLY unsafe.Pointer

func _swig_getEXPR_MULTIPLY() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_MULTIPLY, _swig_p)
	return
}
var EXPR_MULTIPLY int = _swig_getEXPR_MULTIPLY()
var _wrap_EXPR_DIVIDE unsafe.Pointer

func _swig_getEXPR_DIVIDE() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_DIVIDE, _swig_p)
	return
}
var EXPR_DIVIDE int = _swig_getEXPR_DIVIDE()
const EXPR_PLUS int = 0xFF+2
const EXPR_MINUS int = 0xFF+2
var _wrap_EXPR_LSHIFT unsafe.Pointer

func _swig_getEXPR_LSHIFT() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_LSHIFT, _swig_p)
	return
}
var EXPR_LSHIFT int = _swig_getEXPR_LSHIFT()
var _wrap_EXPR_RSHIFT unsafe.Pointer

func _swig_getEXPR_RSHIFT() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_RSHIFT, _swig_p)
	return
}
var EXPR_RSHIFT int = _swig_getEXPR_RSHIFT()
var _wrap_EXPR_LTE unsafe.Pointer

func _swig_getEXPR_LTE() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_LTE, _swig_p)
	return
}
var EXPR_LTE bool = _swig_getEXPR_LTE()
var _wrap_EXPR_GTE unsafe.Pointer

func _swig_getEXPR_GTE() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_GTE, _swig_p)
	return
}
var EXPR_GTE bool = _swig_getEXPR_GTE()
var _wrap_EXPR_INEQUALITY unsafe.Pointer

func _swig_getEXPR_INEQUALITY() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_INEQUALITY, _swig_p)
	return
}
var EXPR_INEQUALITY bool = _swig_getEXPR_INEQUALITY()
var _wrap_EXPR_EQUALITY unsafe.Pointer

func _swig_getEXPR_EQUALITY() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_EQUALITY, _swig_p)
	return
}
var EXPR_EQUALITY bool = _swig_getEXPR_EQUALITY()
var _wrap_EXPR_AND unsafe.Pointer

func _swig_getEXPR_AND() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_AND, _swig_p)
	return
}
var EXPR_AND int = _swig_getEXPR_AND()
var _wrap_EXPR_XOR unsafe.Pointer

func _swig_getEXPR_XOR() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_XOR, _swig_p)
	return
}
var EXPR_XOR int = _swig_getEXPR_XOR()
var _wrap_EXPR_OR unsafe.Pointer

func _swig_getEXPR_OR() (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_OR, _swig_p)
	return
}
var EXPR_OR int = _swig_getEXPR_OR()
var _wrap_EXPR_LAND unsafe.Pointer

func _swig_getEXPR_LAND() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_LAND, _swig_p)
	return
}
var EXPR_LAND bool = _swig_getEXPR_LAND()
var _wrap_EXPR_LOR unsafe.Pointer

func _swig_getEXPR_LOR() (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_LOR, _swig_p)
	return
}
var EXPR_LOR bool = _swig_getEXPR_LOR()
var _wrap_EXPR_CONDITIONAL unsafe.Pointer

func _swig_getEXPR_CONDITIONAL() (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_EXPR_CONDITIONAL, _swig_p)
	return
}
var EXPR_CONDITIONAL float64 = _swig_getEXPR_CONDITIONAL()
type MyEnum int
var _wrap_kValue unsafe.Pointer

func _swig_getkValue() (_swig_ret MyEnum) {
	_swig_p := uintptr(unsafe.Pointer(&_swig_ret))
	_cgo_runtime_cgocall(_wrap_kValue, _swig_p)
	return
}
var KValue MyEnum = _swig_getkValue()

