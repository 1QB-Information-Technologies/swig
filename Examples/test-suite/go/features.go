/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../features.i

package features

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrSimple uintptr

func (p SwigcptrSimple) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSimple) SwigIsSimple() {
}

var _wrap_new_Simple unsafe.Pointer

func _swig_wrap_new_Simple() (base SwigcptrSimple) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Simple, _swig_p)
	return
}

func NewSimple() (_swig_ret Simple) {
	return _swig_wrap_new_Simple()
}

var _wrap_delete_Simple unsafe.Pointer

func _swig_wrap_delete_Simple(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Simple, _swig_p)
	return
}

func DeleteSimple(arg1 Simple) {
	_swig_wrap_delete_Simple(arg1.Swigcptr())
}

type Simple interface {
	Swigcptr() uintptr
	SwigIsSimple()
}

type SwigcptrSimpleNS uintptr

func (p SwigcptrSimpleNS) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSimpleNS) SwigIsSimpleNS() {
}

var _wrap_SimpleNS_method unsafe.Pointer

func _swig_wrap_SimpleNS_method(base SwigcptrSimpleNS) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_SimpleNS_method, _swig_p)
	return
}

func (arg1 SwigcptrSimpleNS) Method() {
	_swig_wrap_SimpleNS_method(arg1)
}

var _wrap_SimpleNS_afunction unsafe.Pointer

func _swig_wrap_SimpleNS_afunction(base SwigcptrSimpleNS) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_SimpleNS_afunction, _swig_p)
	return
}

func (arg1 SwigcptrSimpleNS) Afunction() {
	_swig_wrap_SimpleNS_afunction(arg1)
}

var _wrap_new_SimpleNS unsafe.Pointer

func _swig_wrap_new_SimpleNS() (base SwigcptrSimpleNS) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_SimpleNS, _swig_p)
	return
}

func NewSimpleNS() (_swig_ret SimpleNS) {
	return _swig_wrap_new_SimpleNS()
}

var _wrap_delete_SimpleNS unsafe.Pointer

func _swig_wrap_delete_SimpleNS(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_SimpleNS, _swig_p)
	return
}

func DeleteSimpleNS(arg1 SimpleNS) {
	_swig_wrap_delete_SimpleNS(arg1.Swigcptr())
}

type SimpleNS interface {
	Swigcptr() uintptr
	SwigIsSimpleNS()
	Method()
	Afunction()
}

var _wrap_FooBarInt unsafe.Pointer

func _swig_wrap_FooBarInt(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_FooBarInt, _swig_p)
	return
}

func FooBarInt(arg1 int) {
	_swig_wrap_FooBarInt(arg1)
}

type SwigcptrSimpleInt uintptr

func (p SwigcptrSimpleInt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSimpleInt) SwigIsSimpleInt() {
}

var _wrap_new_SimpleInt unsafe.Pointer

func _swig_wrap_new_SimpleInt() (base SwigcptrSimpleInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_SimpleInt, _swig_p)
	return
}

func NewSimpleInt() (_swig_ret SimpleInt) {
	return _swig_wrap_new_SimpleInt()
}

var _wrap_delete_SimpleInt unsafe.Pointer

func _swig_wrap_delete_SimpleInt(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_SimpleInt, _swig_p)
	return
}

func DeleteSimpleInt(arg1 SimpleInt) {
	_swig_wrap_delete_SimpleInt(arg1.Swigcptr())
}

type SimpleInt interface {
	Swigcptr() uintptr
	SwigIsSimpleInt()
}

type SwigcptrTemplateInt uintptr

func (p SwigcptrTemplateInt) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrTemplateInt) SwigIsTemplateInt() {
}

var _wrap_new_TemplateInt__SWIG_0 unsafe.Pointer

func _swig_wrap_new_TemplateInt__SWIG_0() (base SwigcptrTemplateInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_TemplateInt__SWIG_0, _swig_p)
	return
}

func NewTemplateInt__SWIG_0() (_swig_ret TemplateInt) {
	return _swig_wrap_new_TemplateInt__SWIG_0()
}

var _wrap_new_TemplateInt__SWIG_1 unsafe.Pointer

func _swig_wrap_new_TemplateInt__SWIG_1(base uintptr) (_ SwigcptrTemplateInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_TemplateInt__SWIG_1, _swig_p)
	return
}

func NewTemplateInt__SWIG_1(arg1 TemplateInt) (_swig_ret TemplateInt) {
	return _swig_wrap_new_TemplateInt__SWIG_1(arg1.Swigcptr())
}

func NewTemplateInt(a ...interface{}) TemplateInt {
	argc := len(a)
	if argc == 0 {
		return NewTemplateInt__SWIG_0()
	}
	if argc == 1 {
		return NewTemplateInt__SWIG_1(a[0].(TemplateInt))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_TemplateInt unsafe.Pointer

func _swig_wrap_delete_TemplateInt(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_TemplateInt, _swig_p)
	return
}

func DeleteTemplateInt(arg1 TemplateInt) {
	_swig_wrap_delete_TemplateInt(arg1.Swigcptr())
}

var _wrap_TemplateInt_foo unsafe.Pointer

func _swig_wrap_TemplateInt_foo(base SwigcptrTemplateInt) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_TemplateInt_foo, _swig_p)
	return
}

func (arg1 SwigcptrTemplateInt) Foo() {
	_swig_wrap_TemplateInt_foo(arg1)
}

var _wrap_TemplateInt_bar unsafe.Pointer

func _swig_wrap_TemplateInt_bar(base SwigcptrTemplateInt, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_TemplateInt_bar, _swig_p)
	return
}

func (arg1 SwigcptrTemplateInt) Bar(arg2 int) {
	_swig_wrap_TemplateInt_bar(arg1, arg2)
}

var _wrap_TemplateInt_get unsafe.Pointer

func _swig_wrap_TemplateInt_get(base SwigcptrTemplateInt, _ int) (_ *int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_TemplateInt_get, _swig_p)
	return
}

func (arg1 SwigcptrTemplateInt) Get(arg2 int) (_swig_ret *int) {
	return _swig_wrap_TemplateInt_get(arg1, arg2)
}

var _wrap_TemplateInt_set unsafe.Pointer

func _swig_wrap_TemplateInt_set(base SwigcptrTemplateInt, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_TemplateInt_set, _swig_p)
	return
}

func (arg1 SwigcptrTemplateInt) Set(arg2 int) {
	_swig_wrap_TemplateInt_set(arg1, arg2)
}

type TemplateInt interface {
	Swigcptr() uintptr
	SwigIsTemplateInt()
	Foo()
	Bar(arg2 int)
	Get(arg2 int) (_swig_ret *int)
	Set(arg2 int)
}

type SwigcptrWildCards uintptr

func (p SwigcptrWildCards) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrWildCards) SwigIsWildCards() {
}

var _wrap_delete_WildCards unsafe.Pointer

func _swig_wrap_delete_WildCards(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_WildCards, _swig_p)
	return
}

func DeleteWildCards(arg1 WildCards) {
	_swig_wrap_delete_WildCards(arg1.Swigcptr())
}

var _wrap_WildCards_incy unsafe.Pointer

func _swig_wrap_WildCards_incy(base SwigcptrWildCards, _ int) (_ SwigcptrWildCards) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_WildCards_incy, _swig_p)
	return
}

func (arg1 SwigcptrWildCards) Incy(arg2 int) (_swig_ret WildCards) {
	return _swig_wrap_WildCards_incy(arg1, arg2)
}

var _wrap_WildCards_wincy unsafe.Pointer

func _swig_wrap_WildCards_wincy(base SwigcptrWildCards, _ int) (_ SwigcptrWildCards) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_WildCards_wincy, _swig_p)
	return
}

func (arg1 SwigcptrWildCards) Wincy(arg2 int) (_swig_ret WildCards) {
	return _swig_wrap_WildCards_wincy(arg1, arg2)
}

var _wrap_WildCards_spider unsafe.Pointer

func _swig_wrap_WildCards_spider(base SwigcptrWildCards, _ int) (_ SwigcptrWildCards) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_WildCards_spider, _swig_p)
	return
}

func (arg1 SwigcptrWildCards) Spider(arg2 int) (_swig_ret WildCards) {
	return _swig_wrap_WildCards_spider(arg1, arg2)
}

var _wrap_new_WildCards unsafe.Pointer

func _swig_wrap_new_WildCards() (base SwigcptrWildCards) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_WildCards, _swig_p)
	return
}

func NewWildCards() (_swig_ret WildCards) {
	return _swig_wrap_new_WildCards()
}

type WildCards interface {
	Swigcptr() uintptr
	SwigIsWildCards()
	Incy(arg2 int) (_swig_ret WildCards)
	Wincy(arg2 int) (_swig_ret WildCards)
	Spider(arg2 int) (_swig_ret WildCards)
}

type SwigcptrAnimals uintptr

func (p SwigcptrAnimals) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrAnimals) SwigIsAnimals() {
}

var _wrap_new_Animals__SWIG_0 unsafe.Pointer

func _swig_wrap_new_Animals__SWIG_0(base int, _ float64) (_ SwigcptrAnimals) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Animals__SWIG_0, _swig_p)
	return
}

func NewAnimals__SWIG_0(arg1 int, arg2 float64) (_swig_ret Animals) {
	return _swig_wrap_new_Animals__SWIG_0(arg1, arg2)
}

var _wrap_new_Animals__SWIG_1 unsafe.Pointer

func _swig_wrap_new_Animals__SWIG_1(base int) (_ SwigcptrAnimals) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Animals__SWIG_1, _swig_p)
	return
}

func NewAnimals__SWIG_1(arg1 int) (_swig_ret Animals) {
	return _swig_wrap_new_Animals__SWIG_1(arg1)
}

var _wrap_new_Animals__SWIG_2 unsafe.Pointer

func _swig_wrap_new_Animals__SWIG_2() (base SwigcptrAnimals) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Animals__SWIG_2, _swig_p)
	return
}

func NewAnimals__SWIG_2() (_swig_ret Animals) {
	return _swig_wrap_new_Animals__SWIG_2()
}

func NewAnimals(a ...interface{}) Animals {
	argc := len(a)
	if argc == 0 {
		return NewAnimals__SWIG_2()
	}
	if argc == 1 {
		return NewAnimals__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return NewAnimals__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Animals_lions__SWIG_0 unsafe.Pointer

func _swig_wrap_Animals_lions__SWIG_0(base SwigcptrAnimals, _ int, _ float64) (_ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_lions__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Lions__SWIG_0(arg2 int, arg3 float64) (_swig_ret uintptr) {
	return _swig_wrap_Animals_lions__SWIG_0(arg1, arg2, arg3)
}

var _wrap_Animals_lions__SWIG_1 unsafe.Pointer

func _swig_wrap_Animals_lions__SWIG_1(base SwigcptrAnimals, _ int) (_ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_lions__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Lions__SWIG_1(arg2 int) (_swig_ret uintptr) {
	return _swig_wrap_Animals_lions__SWIG_1(arg1, arg2)
}

var _wrap_Animals_lions__SWIG_2 unsafe.Pointer

func _swig_wrap_Animals_lions__SWIG_2(base SwigcptrAnimals) (_ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_lions__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Lions__SWIG_2() (_swig_ret uintptr) {
	return _swig_wrap_Animals_lions__SWIG_2(arg1)
}

func (p SwigcptrAnimals) Lions(a ...interface{}) uintptr {
	argc := len(a)
	if argc == 0 {
		return p.Lions__SWIG_2()
	}
	if argc == 1 {
		return p.Lions__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.Lions__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Animals_leopards__SWIG_0 unsafe.Pointer

func _swig_wrap_Animals_leopards__SWIG_0(base SwigcptrAnimals, _ int, _ float64) (_ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_leopards__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Leopards__SWIG_0(arg2 int, arg3 float64) (_swig_ret uintptr) {
	return _swig_wrap_Animals_leopards__SWIG_0(arg1, arg2, arg3)
}

var _wrap_Animals_leopards__SWIG_1 unsafe.Pointer

func _swig_wrap_Animals_leopards__SWIG_1(base SwigcptrAnimals, _ int) (_ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_leopards__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Leopards__SWIG_1(arg2 int) (_swig_ret uintptr) {
	return _swig_wrap_Animals_leopards__SWIG_1(arg1, arg2)
}

var _wrap_Animals_leopards__SWIG_2 unsafe.Pointer

func _swig_wrap_Animals_leopards__SWIG_2(base SwigcptrAnimals) (_ uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_leopards__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Leopards__SWIG_2() (_swig_ret uintptr) {
	return _swig_wrap_Animals_leopards__SWIG_2(arg1)
}

func (p SwigcptrAnimals) Leopards(a ...interface{}) uintptr {
	argc := len(a)
	if argc == 0 {
		return p.Leopards__SWIG_2()
	}
	if argc == 1 {
		return p.Leopards__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.Leopards__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Animals_cheetahs__SWIG_0 unsafe.Pointer

func _swig_wrap_Animals_cheetahs__SWIG_0(base SwigcptrAnimals, _ int, _ float64) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_cheetahs__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Cheetahs__SWIG_0(arg2 int, arg3 float64) (_swig_ret int) {
	return _swig_wrap_Animals_cheetahs__SWIG_0(arg1, arg2, arg3)
}

var _wrap_Animals_cheetahs__SWIG_1 unsafe.Pointer

func _swig_wrap_Animals_cheetahs__SWIG_1(base SwigcptrAnimals, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_cheetahs__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Cheetahs__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_Animals_cheetahs__SWIG_1(arg1, arg2)
}

var _wrap_Animals_cheetahs__SWIG_2 unsafe.Pointer

func _swig_wrap_Animals_cheetahs__SWIG_2(base SwigcptrAnimals) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_cheetahs__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Cheetahs__SWIG_2() (_swig_ret int) {
	return _swig_wrap_Animals_cheetahs__SWIG_2(arg1)
}

func (p SwigcptrAnimals) Cheetahs(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Cheetahs__SWIG_2()
	}
	if argc == 1 {
		return p.Cheetahs__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.Cheetahs__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_Animals_jackal__SWIG_0 unsafe.Pointer

func _swig_wrap_Animals_jackal__SWIG_0(base SwigcptrAnimals, _ int, _ float64) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_jackal__SWIG_0, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Jackal__SWIG_0(arg2 int, arg3 float64) (_swig_ret int) {
	return _swig_wrap_Animals_jackal__SWIG_0(arg1, arg2, arg3)
}

var _wrap_Animals_jackal__SWIG_1 unsafe.Pointer

func _swig_wrap_Animals_jackal__SWIG_1(base SwigcptrAnimals, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_jackal__SWIG_1, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Jackal__SWIG_1(arg2 int) (_swig_ret int) {
	return _swig_wrap_Animals_jackal__SWIG_1(arg1, arg2)
}

var _wrap_Animals_jackal__SWIG_2 unsafe.Pointer

func _swig_wrap_Animals_jackal__SWIG_2(base SwigcptrAnimals) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Animals_jackal__SWIG_2, _swig_p)
	return
}

func (arg1 SwigcptrAnimals) Jackal__SWIG_2() (_swig_ret int) {
	return _swig_wrap_Animals_jackal__SWIG_2(arg1)
}

func (p SwigcptrAnimals) Jackal(a ...interface{}) int {
	argc := len(a)
	if argc == 0 {
		return p.Jackal__SWIG_2()
	}
	if argc == 1 {
		return p.Jackal__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.Jackal__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_Animals unsafe.Pointer

func _swig_wrap_delete_Animals(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Animals, _swig_p)
	return
}

func DeleteAnimals(arg1 Animals) {
	_swig_wrap_delete_Animals(arg1.Swigcptr())
}

type Animals interface {
	Swigcptr() uintptr
	SwigIsAnimals()
	Lions(a ...interface{}) uintptr
	Leopards(a ...interface{}) uintptr
	Cheetahs(a ...interface{}) int
	Jackal(a ...interface{}) int
}

type SwigcptrBase uintptr

func (p SwigcptrBase) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBase) SwigIsBase() {
}

var _wrap_Base_virtualmethod unsafe.Pointer

func _swig_wrap_Base_virtualmethod(base SwigcptrBase, _ int) (_ *string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Base_virtualmethod, _swig_p)
	return
}

func (arg1 SwigcptrBase) Virtualmethod(arg2 int) (_swig_ret *string) {
	return _swig_wrap_Base_virtualmethod(arg1, arg2)
}

var _wrap_delete_Base unsafe.Pointer

func _swig_wrap_delete_Base(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Base, _swig_p)
	return
}

func DeleteBase(arg1 Base) {
	_swig_wrap_delete_Base(arg1.Swigcptr())
}

var _wrap_new_Base unsafe.Pointer

func _swig_wrap_new_Base() (base SwigcptrBase) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Base, _swig_p)
	return
}

func NewBase() (_swig_ret Base) {
	return _swig_wrap_new_Base()
}

type Base interface {
	Swigcptr() uintptr
	SwigIsBase()
	Virtualmethod(arg2 int) (_swig_ret *string)
}

type SwigcptrDerived uintptr

func (p SwigcptrDerived) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDerived) SwigIsDerived() {
}

var _wrap_Derived_virtualmethod unsafe.Pointer

func _swig_wrap_Derived_virtualmethod(base SwigcptrDerived, _ int) (_ *string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Derived_virtualmethod, _swig_p)
	return
}

func (arg1 SwigcptrDerived) Virtualmethod(arg2 int) (_swig_ret *string) {
	return _swig_wrap_Derived_virtualmethod(arg1, arg2)
}

var _wrap_new_Derived unsafe.Pointer

func _swig_wrap_new_Derived() (base SwigcptrDerived) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Derived, _swig_p)
	return
}

func NewDerived() (_swig_ret Derived) {
	return _swig_wrap_new_Derived()
}

var _wrap_delete_Derived unsafe.Pointer

func _swig_wrap_delete_Derived(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Derived, _swig_p)
	return
}

func DeleteDerived(arg1 Derived) {
	_swig_wrap_delete_Derived(arg1.Swigcptr())
}

func (p SwigcptrDerived) SwigIsBase() {
}

func (p SwigcptrDerived) SwigGetBase() Base {
	return SwigcptrBase(p.Swigcptr())
}

type Derived interface {
	Swigcptr() uintptr
	SwigIsDerived()
	Virtualmethod(arg2 int) (_swig_ret *string)
	SwigIsBase()
	SwigGetBase() Base
}

type SwigcptrConversionOperators uintptr

func (p SwigcptrConversionOperators) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrConversionOperators) SwigIsConversionOperators() {
}

var _wrap_ConversionOperators_opbool unsafe.Pointer

func _swig_wrap_ConversionOperators_opbool(base SwigcptrConversionOperators) (_ bool) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ConversionOperators_opbool, _swig_p)
	return
}

func (arg1 SwigcptrConversionOperators) Opbool() (_swig_ret bool) {
	return _swig_wrap_ConversionOperators_opbool(arg1)
}

var _wrap_ConversionOperators_opuint unsafe.Pointer

func _swig_wrap_ConversionOperators_opuint(base SwigcptrConversionOperators) (_ uint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ConversionOperators_opuint, _swig_p)
	return
}

func (arg1 SwigcptrConversionOperators) Opuint() (_swig_ret uint) {
	return _swig_wrap_ConversionOperators_opuint(arg1)
}

var _wrap_new_ConversionOperators unsafe.Pointer

func _swig_wrap_new_ConversionOperators() (base SwigcptrConversionOperators) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_ConversionOperators, _swig_p)
	return
}

func NewConversionOperators() (_swig_ret ConversionOperators) {
	return _swig_wrap_new_ConversionOperators()
}

var _wrap_delete_ConversionOperators unsafe.Pointer

func _swig_wrap_delete_ConversionOperators(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_ConversionOperators, _swig_p)
	return
}

func DeleteConversionOperators(arg1 ConversionOperators) {
	_swig_wrap_delete_ConversionOperators(arg1.Swigcptr())
}

type ConversionOperators interface {
	Swigcptr() uintptr
	SwigIsConversionOperators()
	Opbool() (_swig_ret bool)
	Opuint() (_swig_ret uint)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

