/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../equality.i

package equality

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

type SwigcptrPoint uintptr

func (p SwigcptrPoint) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPoint) SwigIsPoint() {
}

var _wrap_Point_x_set unsafe.Pointer

func _swig_wrap_Point_x_set(base SwigcptrPoint, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Point_x_set, _swig_p)
	return
}

func (arg1 SwigcptrPoint) SetX(arg2 float64) {
	_swig_wrap_Point_x_set(arg1, arg2)
}

var _wrap_Point_x_get unsafe.Pointer

func _swig_wrap_Point_x_get(base SwigcptrPoint) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Point_x_get, _swig_p)
	return
}

func (arg1 SwigcptrPoint) GetX() (_swig_ret float64) {
	return _swig_wrap_Point_x_get(arg1)
}

var _wrap_Point_y_set unsafe.Pointer

func _swig_wrap_Point_y_set(base SwigcptrPoint, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Point_y_set, _swig_p)
	return
}

func (arg1 SwigcptrPoint) SetY(arg2 float64) {
	_swig_wrap_Point_y_set(arg1, arg2)
}

var _wrap_Point_y_get unsafe.Pointer

func _swig_wrap_Point_y_get(base SwigcptrPoint) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Point_y_get, _swig_p)
	return
}

func (arg1 SwigcptrPoint) GetY() (_swig_ret float64) {
	return _swig_wrap_Point_y_get(arg1)
}

var _wrap_new_Point unsafe.Pointer

func _swig_wrap_new_Point() (base SwigcptrPoint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Point, _swig_p)
	return
}

func NewPoint() (_swig_ret Point) {
	return _swig_wrap_new_Point()
}

var _wrap_delete_Point unsafe.Pointer

func _swig_wrap_delete_Point(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Point, _swig_p)
	return
}

func DeletePoint(arg1 Point) {
	_swig_wrap_delete_Point(arg1.Swigcptr())
}

type Point interface {
	Swigcptr() uintptr
	SwigIsPoint()
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
}

var _wrap_s_zeroPoint_get unsafe.Pointer

func _swig_wrap_s_zeroPoint_get() (base SwigcptrPoint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_s_zeroPoint_get, _swig_p)
	return
}

func GetS_zeroPoint() (_swig_ret Point) {
	return _swig_wrap_s_zeroPoint_get()
}

var _wrap_MakePoint unsafe.Pointer

func _swig_wrap_MakePoint(base float64, _ float64) (_ SwigcptrPoint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_MakePoint, _swig_p)
	return
}

func MakePoint(arg1 float64, arg2 float64) (_swig_ret Point) {
	return _swig_wrap_MakePoint(arg1, arg2)
}

var _wrap_GetZeroPointPtr unsafe.Pointer

func _swig_wrap_GetZeroPointPtr() (base SwigcptrPoint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GetZeroPointPtr, _swig_p)
	return
}

func GetZeroPointPtr() (_swig_ret Point) {
	return _swig_wrap_GetZeroPointPtr()
}

var _wrap_GetZeroPointCopy unsafe.Pointer

func _swig_wrap_GetZeroPointCopy() (base SwigcptrPoint) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_GetZeroPointCopy, _swig_p)
	return
}

func GetZeroPointCopy() (_swig_ret Point) {
	return _swig_wrap_GetZeroPointCopy()
}

type SwigcptrEqualOpDefined uintptr

func (p SwigcptrEqualOpDefined) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEqualOpDefined) SwigIsEqualOpDefined() {
}

var _wrap_new_EqualOpDefined__SWIG_0 unsafe.Pointer

func _swig_wrap_new_EqualOpDefined__SWIG_0() (base SwigcptrEqualOpDefined) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_EqualOpDefined__SWIG_0, _swig_p)
	return
}

func NewEqualOpDefined__SWIG_0() (_swig_ret EqualOpDefined) {
	return _swig_wrap_new_EqualOpDefined__SWIG_0()
}

var _wrap_new_EqualOpDefined__SWIG_1 unsafe.Pointer

func _swig_wrap_new_EqualOpDefined__SWIG_1(base int) (_ SwigcptrEqualOpDefined) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_EqualOpDefined__SWIG_1, _swig_p)
	return
}

func NewEqualOpDefined__SWIG_1(arg1 int) (_swig_ret EqualOpDefined) {
	return _swig_wrap_new_EqualOpDefined__SWIG_1(arg1)
}

func NewEqualOpDefined(a ...interface{}) EqualOpDefined {
	argc := len(a)
	if argc == 0 {
		return NewEqualOpDefined__SWIG_0()
	}
	if argc == 1 {
		return NewEqualOpDefined__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_EqualOpDefined_x_set unsafe.Pointer

func _swig_wrap_EqualOpDefined_x_set(base SwigcptrEqualOpDefined, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_EqualOpDefined_x_set, _swig_p)
	return
}

func (arg1 SwigcptrEqualOpDefined) SetX(arg2 int) {
	_swig_wrap_EqualOpDefined_x_set(arg1, arg2)
}

var _wrap_EqualOpDefined_x_get unsafe.Pointer

func _swig_wrap_EqualOpDefined_x_get(base SwigcptrEqualOpDefined) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_EqualOpDefined_x_get, _swig_p)
	return
}

func (arg1 SwigcptrEqualOpDefined) GetX() (_swig_ret int) {
	return _swig_wrap_EqualOpDefined_x_get(arg1)
}

var _wrap_delete_EqualOpDefined unsafe.Pointer

func _swig_wrap_delete_EqualOpDefined(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_EqualOpDefined, _swig_p)
	return
}

func DeleteEqualOpDefined(arg1 EqualOpDefined) {
	_swig_wrap_delete_EqualOpDefined(arg1.Swigcptr())
}

type EqualOpDefined interface {
	Swigcptr() uintptr
	SwigIsEqualOpDefined()
	SetX(arg2 int)
	GetX() (_swig_ret int)
}

type SwigcptrEqualOpWrong uintptr

func (p SwigcptrEqualOpWrong) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEqualOpWrong) SwigIsEqualOpWrong() {
}

var _wrap_EqualOpWrong_GetStaticObject unsafe.Pointer

func _swig_wrap_EqualOpWrong_GetStaticObject() (base SwigcptrEqualOpWrong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_EqualOpWrong_GetStaticObject, _swig_p)
	return
}

func EqualOpWrongGetStaticObject() (_swig_ret EqualOpWrong) {
	return _swig_wrap_EqualOpWrong_GetStaticObject()
}

var _wrap_new_EqualOpWrong unsafe.Pointer

func _swig_wrap_new_EqualOpWrong() (base SwigcptrEqualOpWrong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_EqualOpWrong, _swig_p)
	return
}

func NewEqualOpWrong() (_swig_ret EqualOpWrong) {
	return _swig_wrap_new_EqualOpWrong()
}

var _wrap_delete_EqualOpWrong unsafe.Pointer

func _swig_wrap_delete_EqualOpWrong(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_EqualOpWrong, _swig_p)
	return
}

func DeleteEqualOpWrong(arg1 EqualOpWrong) {
	_swig_wrap_delete_EqualOpWrong(arg1.Swigcptr())
}

type EqualOpWrong interface {
	Swigcptr() uintptr
	SwigIsEqualOpWrong()
}

var _wrap_s_wrongEqOp_set unsafe.Pointer

func _swig_wrap_s_wrongEqOp_set(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_s_wrongEqOp_set, _swig_p)
	return
}

func SetS_wrongEqOp(arg1 EqualOpWrong) {
	_swig_wrap_s_wrongEqOp_set(arg1.Swigcptr())
}

var _wrap_s_wrongEqOp_get unsafe.Pointer

func _swig_wrap_s_wrongEqOp_get() (base SwigcptrEqualOpWrong) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_s_wrongEqOp_get, _swig_p)
	return
}

func GetS_wrongEqOp() (_swig_ret EqualOpWrong) {
	return _swig_wrap_s_wrongEqOp_get()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

