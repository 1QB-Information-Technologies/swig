/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../director_primitives.i

#ifndef SWIG_director_primitives_WRAP_H_
#define SWIG_director_primitives_WRAP_H_

class SwigDirector_Base : public Base
{
 public:
  SwigDirector_Base(void *swig_p, double dd);
  virtual ~SwigDirector_Base();
  void _swig_upcall_NoParmsMethod() {
    Base::NoParmsMethod();
  }
  virtual void NoParmsMethod();
  bool _swig_upcall_BoolMethod(bool x) {
    return Base::BoolMethod(x);
  }
  virtual bool BoolMethod(bool x);
  int _swig_upcall_IntMethod(int x) {
    return Base::IntMethod(x);
  }
  virtual int IntMethod(int x);
  unsigned int _swig_upcall_UIntMethod(unsigned int x) {
    return Base::UIntMethod(x);
  }
  virtual unsigned int UIntMethod(unsigned int x);
  float _swig_upcall_FloatMethod(float x) {
    return Base::FloatMethod(x);
  }
  virtual float FloatMethod(float x);
  char *_swig_upcall_CharPtrMethod(char *x) {
    return Base::CharPtrMethod(x);
  }
  virtual char *CharPtrMethod(char *x);
  char const *_swig_upcall_ConstCharPtrMethod(char const *x) {
    return Base::ConstCharPtrMethod(x);
  }
  virtual char const *ConstCharPtrMethod(char const *x);
  HShadowMode _swig_upcall_EnumMethod(HShadowMode x) {
    return Base::EnumMethod(x);
  }
  virtual HShadowMode EnumMethod(HShadowMode x);
  void _swig_upcall_ManyParmsMethod(bool b, int i, unsigned int u, float f, char *c, char const *cc, HShadowMode h) {
    Base::ManyParmsMethod(b,i,u,f,c,cc,h);
  }
  virtual void ManyParmsMethod(bool b, int i, unsigned int u, float f, char *c, char const *cc, HShadowMode h);
  void _swig_upcall_NotOverriddenMethod() {
    Base::NotOverriddenMethod();
  }
  virtual void NotOverriddenMethod();
 private:
  void *go_val;
};

class SwigDirector_Derived : public Derived
{
 public:
  SwigDirector_Derived(void *swig_p, double dd);
  virtual ~SwigDirector_Derived();
  void _swig_upcall_NoParmsMethod() {
    Derived::NoParmsMethod();
  }
  virtual void NoParmsMethod();
  bool _swig_upcall_BoolMethod(bool x) {
    return Derived::BoolMethod(x);
  }
  virtual bool BoolMethod(bool x);
  int _swig_upcall_IntMethod(int x) {
    return Derived::IntMethod(x);
  }
  virtual int IntMethod(int x);
  unsigned int _swig_upcall_UIntMethod(unsigned int x) {
    return Derived::UIntMethod(x);
  }
  virtual unsigned int UIntMethod(unsigned int x);
  float _swig_upcall_FloatMethod(float x) {
    return Derived::FloatMethod(x);
  }
  virtual float FloatMethod(float x);
  char *_swig_upcall_CharPtrMethod(char *x) {
    return Derived::CharPtrMethod(x);
  }
  virtual char *CharPtrMethod(char *x);
  char const *_swig_upcall_ConstCharPtrMethod(char const *x) {
    return Derived::ConstCharPtrMethod(x);
  }
  virtual char const *ConstCharPtrMethod(char const *x);
  HShadowMode _swig_upcall_EnumMethod(HShadowMode x) {
    return Derived::EnumMethod(x);
  }
  virtual HShadowMode EnumMethod(HShadowMode x);
  void _swig_upcall_ManyParmsMethod(bool b, int i, unsigned int u, float f, char *c, char const *cc, HShadowMode h) {
    Derived::ManyParmsMethod(b,i,u,f,c,cc,h);
  }
  virtual void ManyParmsMethod(bool b, int i, unsigned int u, float f, char *c, char const *cc, HShadowMode h);
  void _swig_upcall_NotOverriddenMethod() {
    Base::NotOverriddenMethod();
  }
  virtual void NotOverriddenMethod();
 private:
  void *go_val;
};

#endif
