/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../lextype.i

package lextype

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

const HEIGHT_Giraffe int = 100
const WIDTH_Giraffe int = 5
var _wrap_eat unsafe.Pointer

func _swig_wrap_eat(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_eat, _swig_p)
	return
}

func Eat(arg1 uintptr) {
	_swig_wrap_eat(arg1)
}

var _wrap_drink unsafe.Pointer

func _swig_wrap_drink(base *uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_drink, _swig_p)
	return
}

func Drink(arg1 *uintptr) {
	_swig_wrap_drink(arg1)
}

var _wrap_mate unsafe.Pointer

func Mate(arg1 *uintptr) (_swig_ret uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_mate, _swig_p)
	return
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

