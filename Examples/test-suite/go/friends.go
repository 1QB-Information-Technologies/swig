/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../friends.i

package friends

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_globalscope unsafe.Pointer

func _swig_wrap_globalscope() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_globalscope, _swig_p)
	return
}

func Globalscope() {
	_swig_wrap_globalscope()
}

type SwigcptrB uintptr

func (p SwigcptrB) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrB) SwigIsB() {
}

var _wrap_new_B unsafe.Pointer

func _swig_wrap_new_B(base int) (_ SwigcptrB) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_B, _swig_p)
	return
}

func NewB(arg1 int) (_swig_ret B) {
	return _swig_wrap_new_B(arg1)
}

var _wrap_mix unsafe.Pointer

func _swig_wrap_mix(base uintptr, _ uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_mix, _swig_p)
	return
}

func Mix(arg1 A, arg2 B) (_swig_ret int) {
	return _swig_wrap_mix(arg1.Swigcptr(), arg2.Swigcptr())
}

var _wrap_delete_B unsafe.Pointer

func _swig_wrap_delete_B(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_B, _swig_p)
	return
}

func DeleteB(arg1 B) {
	_swig_wrap_delete_B(arg1.Swigcptr())
}

type B interface {
	Swigcptr() uintptr
	SwigIsB()
}

type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A(base int) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA(arg1 int) (_swig_ret A) {
	return _swig_wrap_new_A(arg1)
}

var _wrap_get_val1__SWIG_0 unsafe.Pointer

func _swig_wrap_get_val1__SWIG_0(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_val1__SWIG_0, _swig_p)
	return
}

func Get_val1__SWIG_0(arg1 A) (_swig_ret int) {
	return _swig_wrap_get_val1__SWIG_0(arg1.Swigcptr())
}

var _wrap_get_val1__SWIG_1 unsafe.Pointer

func _swig_wrap_get_val1__SWIG_1(base uintptr, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_val1__SWIG_1, _swig_p)
	return
}

func Get_val1__SWIG_1(arg1 A, arg2 int) (_swig_ret int) {
	return _swig_wrap_get_val1__SWIG_1(arg1.Swigcptr(), arg2)
}

var _wrap_get_val2 unsafe.Pointer

func _swig_wrap_get_val2(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_val2, _swig_p)
	return
}

func Get_val2(arg1 A) (_swig_ret int) {
	return _swig_wrap_get_val2(arg1.Swigcptr())
}

var _wrap_get_val3 unsafe.Pointer

func _swig_wrap_get_val3(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_val3, _swig_p)
	return
}

func Get_val3(arg1 A) (_swig_ret int) {
	return _swig_wrap_get_val3(arg1.Swigcptr())
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
}

var _wrap_get_val1__SWIG_2 unsafe.Pointer

func Get_val1__SWIG_2(arg1 int, arg2 int, arg3 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_get_val1__SWIG_2, _swig_p)
	return
}
var _wrap_bas unsafe.Pointer

func _swig_wrap_bas() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_bas, _swig_p)
	return
}

func Bas() {
	_swig_wrap_bas()
}

var _wrap_baz unsafe.Pointer

func _swig_wrap_baz() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_baz, _swig_p)
	return
}

func Baz() {
	_swig_wrap_baz()
}

type SwigcptrFoo uintptr

func (p SwigcptrFoo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFoo) SwigIsFoo() {
}

var _wrap_new_Foo unsafe.Pointer

func _swig_wrap_new_Foo() (base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_Foo, _swig_p)
	return
}

func NewFoo() (_swig_ret Foo) {
	return _swig_wrap_new_Foo()
}

var _wrap_Foo_member unsafe.Pointer

func _swig_wrap_Foo_member(base SwigcptrFoo) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Foo_member, _swig_p)
	return
}

func (arg1 SwigcptrFoo) Member() {
	_swig_wrap_Foo_member(arg1)
}

var _wrap_delete_Foo unsafe.Pointer

func _swig_wrap_delete_Foo(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_Foo, _swig_p)
	return
}

func DeleteFoo(arg1 Foo) {
	_swig_wrap_delete_Foo(arg1.Swigcptr())
}

type Foo interface {
	Swigcptr() uintptr
	SwigIsFoo()
	Member()
}

var _wrap_bar unsafe.Pointer

func _swig_wrap_bar() {
	var _swig_p uintptr
	_cgo_runtime_cgocall(_wrap_bar, _swig_p)
	return
}

func Bar() {
	_swig_wrap_bar()
}

type SwigcptrD_i uintptr

func (p SwigcptrD_i) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrD_i) SwigIsD_i() {
}

var _wrap_new_D_i unsafe.Pointer

func _swig_wrap_new_D_i(base int) (_ SwigcptrD_i) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_D_i, _swig_p)
	return
}

func NewD_i(arg1 int) (_swig_ret D_i) {
	return _swig_wrap_new_D_i(arg1)
}

var _wrap_get_val1__SWIG_4 unsafe.Pointer

func _swig_wrap_get_val1__SWIG_4(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_val1__SWIG_4, _swig_p)
	return
}

func Get_val1__SWIG_4(arg1 D_i) (_swig_ret int) {
	return _swig_wrap_get_val1__SWIG_4(arg1.Swigcptr())
}

var _wrap_set__SWIG_1 unsafe.Pointer

func _swig_wrap_set__SWIG_1(base uintptr, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_set__SWIG_1, _swig_p)
	return
}

func Set__SWIG_1(arg1 D_i, arg2 int) {
	_swig_wrap_set__SWIG_1(arg1.Swigcptr(), arg2)
}

var _wrap_delete_D_i unsafe.Pointer

func _swig_wrap_delete_D_i(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_D_i, _swig_p)
	return
}

func DeleteD_i(arg1 D_i) {
	_swig_wrap_delete_D_i(arg1.Swigcptr())
}

type D_i interface {
	Swigcptr() uintptr
	SwigIsD_i()
}

type SwigcptrD_d uintptr

func (p SwigcptrD_d) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrD_d) SwigIsD_d() {
}

var _wrap_new_D_d unsafe.Pointer

func _swig_wrap_new_D_d(base float64) (_ SwigcptrD_d) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_D_d, _swig_p)
	return
}

func NewD_d(arg1 float64) (_swig_ret D_d) {
	return _swig_wrap_new_D_d(arg1)
}

var _wrap_get_val1__SWIG_5 unsafe.Pointer

func _swig_wrap_get_val1__SWIG_5(base uintptr) (_ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_get_val1__SWIG_5, _swig_p)
	return
}

func Get_val1__SWIG_5(arg1 D_d) (_swig_ret float64) {
	return _swig_wrap_get_val1__SWIG_5(arg1.Swigcptr())
}

func Get_val1(a ...interface{}) interface{} {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(A); !ok {
			goto check_1
		}
		return Get_val1__SWIG_0(a[0].(A))
	}
check_1:
	if argc == 1 {
		if _, ok := a[0].(D_i); !ok {
			goto check_2
		}
		return Get_val1__SWIG_4(a[0].(D_i))
	}
check_2:
	if argc == 1 {
		return Get_val1__SWIG_5(a[0].(D_d))
	}
	if argc == 2 {
		return Get_val1__SWIG_1(a[0].(A), a[1].(int))
	}
	if argc == 3 {
		return Get_val1__SWIG_2(a[0].(int), a[1].(int), a[2].(int))
	}
	panic("No match for overloaded function call")
}

var _wrap_set__SWIG_2 unsafe.Pointer

func _swig_wrap_set__SWIG_2(base uintptr, _ float64) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_set__SWIG_2, _swig_p)
	return
}

func Set__SWIG_2(arg1 D_d, arg2 float64) {
	_swig_wrap_set__SWIG_2(arg1.Swigcptr(), arg2)
}

func Set(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(D_i); !ok {
			goto check_1
		}
		if _, ok := a[1].(int); !ok {
			goto check_1
		}
		Set__SWIG_1(a[0].(D_i), a[1].(int))
		return
	}
check_1:
	if argc == 2 {
		Set__SWIG_2(a[0].(D_d), a[1].(float64))
		return
	}
	panic("No match for overloaded function call")
}

var _wrap_delete_D_d unsafe.Pointer

func _swig_wrap_delete_D_d(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_D_d, _swig_p)
	return
}

func DeleteD_d(arg1 D_d) {
	_swig_wrap_delete_D_d(arg1.Swigcptr())
}

type D_d interface {
	Swigcptr() uintptr
	SwigIsD_d()
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

