/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.3
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: ./../primitive_ref.i

package primitive_ref

import "unsafe"
import _ "runtime/cgo"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)



type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

var _wrap_ref_int unsafe.Pointer

func Ref_int(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_int, _swig_p)
	return
}
var _wrap_ref_uint unsafe.Pointer

func Ref_uint(arg1 uint) (_swig_ret uint) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_uint, _swig_p)
	return
}
var _wrap_ref_short unsafe.Pointer

func Ref_short(arg1 int16) (_swig_ret int16) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_short, _swig_p)
	return
}
var _wrap_ref_ushort unsafe.Pointer

func Ref_ushort(arg1 uint16) (_swig_ret uint16) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_ushort, _swig_p)
	return
}
var _wrap_ref_long unsafe.Pointer

func Ref_long(arg1 int64) (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_long, _swig_p)
	return
}
var _wrap_ref_ulong unsafe.Pointer

func Ref_ulong(arg1 uint64) (_swig_ret uint64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_ulong, _swig_p)
	return
}
var _wrap_ref_schar unsafe.Pointer

func Ref_schar(arg1 int8) (_swig_ret int8) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_schar, _swig_p)
	return
}
var _wrap_ref_uchar unsafe.Pointer

func Ref_uchar(arg1 byte) (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_uchar, _swig_p)
	return
}
var _wrap_ref_char unsafe.Pointer

func Ref_char(arg1 byte) (_swig_ret byte) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_char, _swig_p)
	return
}
var _wrap_ref_float unsafe.Pointer

func Ref_float(arg1 float32) (_swig_ret float32) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_float, _swig_p)
	return
}
var _wrap_ref_double unsafe.Pointer

func Ref_double(arg1 float64) (_swig_ret float64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_double, _swig_p)
	return
}
var _wrap_ref_bool unsafe.Pointer

func Ref_bool(arg1 bool) (_swig_ret bool) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_bool, _swig_p)
	return
}
var _wrap_ref_longlong unsafe.Pointer

func Ref_longlong(arg1 int64) (_swig_ret int64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_longlong, _swig_p)
	return
}
var _wrap_ref_ulonglong unsafe.Pointer

func Ref_ulonglong(arg1 uint64) (_swig_ret uint64) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_ulonglong, _swig_p)
	return
}
var _wrap_ref_over__SWIG_0 unsafe.Pointer

func Ref_over__SWIG_0(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_ref_over__SWIG_0, _swig_p)
	return
}
type SwigcptrA uintptr

func (p SwigcptrA) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrA) SwigIsA() {
}

var _wrap_A_v_set unsafe.Pointer

func _swig_wrap_A_v_set(base SwigcptrA, _ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_v_set, _swig_p)
	return
}

func (arg1 SwigcptrA) SetV(arg2 int) {
	_swig_wrap_A_v_set(arg1, arg2)
}

var _wrap_A_v_get unsafe.Pointer

func _swig_wrap_A_v_get(base SwigcptrA) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_A_v_get, _swig_p)
	return
}

func (arg1 SwigcptrA) GetV() (_swig_ret int) {
	return _swig_wrap_A_v_get(arg1)
}

var _wrap_new_A unsafe.Pointer

func _swig_wrap_new_A(base int) (_ SwigcptrA) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_new_A, _swig_p)
	return
}

func NewA(arg1 int) (_swig_ret A) {
	return _swig_wrap_new_A(arg1)
}

var _wrap_delete_A unsafe.Pointer

func _swig_wrap_delete_A(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_delete_A, _swig_p)
	return
}

func DeleteA(arg1 A) {
	_swig_wrap_delete_A(arg1.Swigcptr())
}

type A interface {
	Swigcptr() uintptr
	SwigIsA()
	SetV(arg2 int)
	GetV() (_swig_ret int)
}

var _wrap_ref_over__SWIG_1 unsafe.Pointer

func _swig_wrap_ref_over__SWIG_1(base uintptr) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_ref_over__SWIG_1, _swig_p)
	return
}

func Ref_over__SWIG_1(arg1 A) (_swig_ret int) {
	return _swig_wrap_ref_over__SWIG_1(arg1.Swigcptr())
}

func Ref_over(a ...interface{}) int {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(A); !ok {
			goto check_1
		}
		return Ref_over__SWIG_1(a[0].(A))
	}
check_1:
	if argc == 1 {
		return Ref_over__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

